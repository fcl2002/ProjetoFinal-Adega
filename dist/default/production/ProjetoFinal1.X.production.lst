

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 15:11:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4520 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	smallconst
    93  000600                     __psmallconst:
    94                           	callstack 0
    95  000600  00                 	db	0
    96  000601                     _valor:
    97                           	callstack 0
    98  000601  3F                 	db	63
    99  000602  06                 	db	6
   100  000603  5B                 	db	91
   101  000604  4F                 	db	79
   102  000605  66                 	db	102
   103  000606  6D                 	db	109
   104  000607  7D                 	db	125
   105  000608  07                 	db	7
   106  000609  7F                 	db	127
   107  00060A  6F                 	db	111
   108  00060B  77                 	db	119
   109  00060C  7C                 	db	124
   110  00060D  39                 	db	57
   111  00060E  5E                 	db	94
   112  00060F  79                 	db	121
   113  000610  71                 	db	113
   114  000611                     __end_of_valor:
   115                           	callstack 0
   116  000611                     _charKey:
   117                           	callstack 0
   118  000611  55                 	db	85
   119  000612  4C                 	db	76
   120  000613  44                 	db	68
   121  000614  52                 	db	82
   122  000615  53                 	db	83
   123  000616  58                 	db	88
   124  000617  41                 	db	65
   125  000618  42                 	db	66
   126  000619  59                 	db	89
   127  00061A  73                 	db	115
   128  00061B                     __end_of_charKey:
   129                           	callstack 0
   130  0000                     _T0CON	set	4053
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR0H	set	4055
   133  0000                     _INTCON	set	4082
   134  0000                     _SPBRG	set	4015
   135  0000                     _SPBRGH	set	4016
   136  0000                     _BAUDCON	set	4024
   137  0000                     _TXSTA	set	4012
   138  0000                     _RCREG	set	4014
   139  0000                     _RCSTA	set	4011
   140  0000                     _TXREG	set	4013
   141  0000                     _PIR1	set	3998
   142  0000                     _T2CON	set	4042
   143  0000                     _CCP2CON	set	4026
   144  0000                     _CCPR2L	set	4027
   145  0000                     _PR2	set	4043
   146  0000                     _TRISE	set	3990
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISA	set	3986
   151  0000                     _PORTE	set	3972
   152  0000                     _PORTD	set	3971
   153  0000                     _PORTC	set	3970
   154  0000                     _PORTB	set	3969
   155  0000                     _PORTA	set	3968
   156  0000                     _ADRESL	set	4035
   157  0000                     _ADRESH	set	4036
   158  0000                     _ADCON2	set	4032
   159  0000                     _ADCON1	set	4033
   160  0000                     _ADCON0	set	4034
   161  00061B                     STR_23:
   162  00061B  20                 	db	32
   163  00061C  20                 	db	32
   164  00061D  20                 	db	32
   165  00061E  57                 	db	87	;'W'
   166  00061F  45                 	db	69	;'E'
   167  000620  4C                 	db	76	;'L'
   168  000621  43                 	db	67	;'C'
   169  000622  4F                 	db	79	;'O'
   170  000623  4D                 	db	77	;'M'
   171  000624  45                 	db	69	;'E'
   172  000625  20                 	db	32
   173  000626  54                 	db	84	;'T'
   174  000627  4F                 	db	79	;'O'
   175  000628  20                 	db	32
   176  000629  20                 	db	32
   177  00062A  20                 	db	32
   178  00062B  00                 	db	0
   179  00062C                     STR_24:
   180  00062C  20                 	db	32
   181  00062D  20                 	db	32
   182  00062E  20                 	db	32
   183  00062F  53                 	db	83	;'S'
   184  000630  4D                 	db	77	;'M'
   185  000631  41                 	db	65	;'A'
   186  000632  52                 	db	82	;'R'
   187  000633  54                 	db	84	;'T'
   188  000634  20                 	db	32
   189  000635  41                 	db	65	;'A'
   190  000636  44                 	db	68	;'D'
   191  000637  45                 	db	69	;'E'
   192  000638  47                 	db	71	;'G'
   193  000639  41                 	db	65	;'A'
   194  00063A  20                 	db	32
   195  00063B  20                 	db	32
   196  00063C  00                 	db	0
   197  00063D                     STR_25:
   198  00063D  46                 	db	70	;'F'
   199  00063E  45                 	db	69	;'E'
   200  00063F  52                 	db	82	;'R'
   201  000640  4E                 	db	78	;'N'
   202  000641  41                 	db	65	;'A'
   203  000642  4E                 	db	78	;'N'
   204  000643  44                 	db	68	;'D'
   205  000644  4F                 	db	79	;'O'
   206  000645  27                 	db	39
   207  000646  53                 	db	83	;'S'
   208  000647  20                 	db	32
   209  000648  41                 	db	65	;'A'
   210  000649  44                 	db	68	;'D'
   211  00064A  45                 	db	69	;'E'
   212  00064B  47                 	db	71	;'G'
   213  00064C  41                 	db	65	;'A'
   214  00064D  00                 	db	0
   215  00064E                     STR_9:
   216  00064E  52                 	db	82	;'R'
   217  00064F  4F                 	db	79	;'O'
   218  000650  53                 	db	83	;'S'
   219  000651  45                 	db	69	;'E'
   220  000652  20                 	db	32
   221  000653  20                 	db	32
   222  000654  20                 	db	32
   223  000655  20                 	db	32
   224  000656  20                 	db	32
   225  000657  49                 	db	73	;'I'
   226  000658  3A                 	db	58	;':'
   227  000659  20                 	db	32
   228  00065A  31                 	db	49	;'1'
   229  00065B  30                 	db	48	;'0'
   230  00065C  20                 	db	32
   231  00065D  43                 	db	67	;'C'
   232  00065E  00                 	db	0
   233  00065F                     STR_3:
   234  00065F  4D                 	db	77	;'M'
   235  000660  41                 	db	65	;'A'
   236  000661  4C                 	db	76	;'L'
   237  000662  42                 	db	66	;'B'
   238  000663  45                 	db	69	;'E'
   239  000664  43                 	db	67	;'C'
   240  000665  20                 	db	32
   241  000666  20                 	db	32
   242  000667  20                 	db	32
   243  000668  49                 	db	73	;'I'
   244  000669  3A                 	db	58	;':'
   245  00066A  20                 	db	32
   246  00066B  31                 	db	49	;'1'
   247  00066C  32                 	db	50	;'2'
   248  00066D  20                 	db	32
   249  00066E  43                 	db	67	;'C'
   250  00066F  00                 	db	0
   251  000670                     STR_11:
   252  000670  43                 	db	67	;'C'
   253  000671  41                 	db	65	;'A'
   254  000672  42                 	db	66	;'B'
   255  000673  45                 	db	69	;'E'
   256  000674  52                 	db	82	;'R'
   257  000675  4E                 	db	78	;'N'
   258  000676  45                 	db	69	;'E'
   259  000677  54                 	db	84	;'T'
   260  000678  20                 	db	32
   261  000679  49                 	db	73	;'I'
   262  00067A  3A                 	db	58	;':'
   263  00067B  20                 	db	32
   264  00067C  20                 	db	32
   265  00067D  36                 	db	54	;'6'
   266  00067E  20                 	db	32
   267  00067F  43                 	db	67	;'C'
   268  000680  00                 	db	0
   269  000681                     STR_5:
   270  000681  4D                 	db	77	;'M'
   271  000682  45                 	db	69	;'E'
   272  000683  52                 	db	82	;'R'
   273  000684  4C                 	db	76	;'L'
   274  000685  4F                 	db	79	;'O'
   275  000686  54                 	db	84	;'T'
   276  000687  20                 	db	32
   277  000688  20                 	db	32
   278  000689  20                 	db	32
   279  00068A  49                 	db	73	;'I'
   280  00068B  3A                 	db	58	;':'
   281  00068C  20                 	db	32
   282  00068D  20                 	db	32
   283  00068E  39                 	db	57	;'9'
   284  00068F  20                 	db	32
   285  000690  43                 	db	67	;'C'
   286  000691  00                 	db	0
   287  000692                     STR_7:
   288  000692  52                 	db	82	;'R'
   289  000693  49                 	db	73	;'I'
   290  000694  45                 	db	69	;'E'
   291  000695  53                 	db	83	;'S'
   292  000696  4C                 	db	76	;'L'
   293  000697  49                 	db	73	;'I'
   294  000698  4E                 	db	78	;'N'
   295  000699  47                 	db	71	;'G'
   296  00069A  20                 	db	32
   297  00069B  49                 	db	73	;'I'
   298  00069C  3A                 	db	58	;':'
   299  00069D  20                 	db	32
   300  00069E  20                 	db	32
   301  00069F  39                 	db	57	;'9'
   302  0006A0  20                 	db	32
   303  0006A1  43                 	db	67	;'C'
   304  0006A2  00                 	db	0
   305  0006A3                     STR_8:
   306  0006A3  51                 	db	81	;'Q'
   307  0006A4  54                 	db	84	;'T'
   308  0006A5  44                 	db	68	;'D'
   309  0006A6  3A                 	db	58	;':'
   310  0006A7  20                 	db	32
   311  0006A8  35                 	db	53	;'5'
   312  0006A9  20                 	db	32
   313  0006AA  00                 	db	0
   314  0006AB                     STR_12:
   315  0006AB  51                 	db	81	;'Q'
   316  0006AC  54                 	db	84	;'T'
   317  0006AD  44                 	db	68	;'D'
   318  0006AE  3A                 	db	58	;':'
   319  0006AF  20                 	db	32
   320  0006B0  38                 	db	56	;'8'
   321  0006B1  20                 	db	32
   322  0006B2  00                 	db	0
   323  0006B3                     STR_4:
   324  0006B3  51                 	db	81	;'Q'
   325  0006B4  54                 	db	84	;'T'
   326  0006B5  44                 	db	68	;'D'
   327  0006B6  3A                 	db	58	;':'
   328  0006B7  20                 	db	32
   329  0006B8  31                 	db	49	;'1'
   330  0006B9  32                 	db	50	;'2'
   331  0006BA  00                 	db	0
   332  0006BB                     STR_10:
   333  0006BB  51                 	db	81	;'Q'
   334  0006BC  54                 	db	84	;'T'
   335  0006BD  44                 	db	68	;'D'
   336  0006BE  3A                 	db	58	;':'
   337  0006BF  20                 	db	32
   338  0006C0  31                 	db	49	;'1'
   339  0006C1  34                 	db	52	;'4'
   340  0006C2  00                 	db	0
   341  0006C3                     STR_6:
   342  0006C3  51                 	db	81	;'Q'
   343  0006C4  54                 	db	84	;'T'
   344  0006C5  44                 	db	68	;'D'
   345  0006C6  3A                 	db	58	;':'
   346  0006C7  20                 	db	32
   347  0006C8  31                 	db	49	;'1'
   348  0006C9  39                 	db	57	;'9'
   349  0006CA  00                 	db	0
   350  0006CB                     STR_1:
   351  0006CB  54                 	db	84	;'T'
   352  0006CC  3A                 	db	58	;':'
   353  0006CD  20                 	db	32
   354  0006CE  00                 	db	0
   355  0006CF  00                 	db	0	; dummy byte at the end
   356  0000                     
   357                           ; #config settings
   358                           
   359                           	psect	cinit
   360  002064                     __pcinit:
   361                           	callstack 0
   362  002064                     start_initialization:
   363                           	callstack 0
   364  002064                     __initialization:
   365                           	callstack 0
   366                           
   367                           ; Clear objects allocated to COMRAM (28 bytes)
   368  002064  EE00  F02E         	lfsr	0,__pbssCOMRAM
   369  002068  0E1C               	movlw	28
   370  00206A                     clear_0:
   371  00206A  6AEE               	clrf	postinc0,c
   372  00206C  06E8               	decf	wreg,f,c
   373  00206E  E1FD               	bnz	clear_0
   374  002070                     end_of_initialization:
   375                           	callstack 0
   376  002070                     __end_of__initialization:
   377                           	callstack 0
   378  002070  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  002072  6EF8               	movwf	tblptru,c
   380  002074  0100               	movlb	0
   381  002076  EF81  F00B         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssCOMRAM
   384  00002E                     __pbssCOMRAM:
   385                           	callstack 0
   386  00002E                     _temperatura:
   387                           	callstack 0
   388  00002E                     	ds	4
   389  000032                     _tempMax:
   390                           	callstack 0
   391  000032                     	ds	4
   392  000036                     _tempIde:
   393                           	callstack 0
   394  000036                     	ds	2
   395  000038                     kpDebounce@oldRead:
   396                           	callstack 0
   397  000038                     	ds	2
   398  00003A                     kpDebounce@newRead:
   399                           	callstack 0
   400  00003A                     	ds	2
   401  00003C                     _keys:
   402                           	callstack 0
   403  00003C                     	ds	2
   404  00003E                     _op:
   405                           	callstack 0
   406  00003E                     	ds	1
   407  00003F                     _v3:
   408                           	callstack 0
   409  00003F                     	ds	1
   410  000040                     _v2:
   411                           	callstack 0
   412  000040                     	ds	1
   413  000041                     _v1:
   414                           	callstack 0
   415  000041                     	ds	1
   416  000042                     _v0:
   417                           	callstack 0
   418  000042                     	ds	1
   419  000043                     _display:
   420                           	callstack 0
   421  000043                     	ds	1
   422  000044                     kpDebounce@tempo:
   423                           	callstack 0
   424  000044                     	ds	1
   425  000045                     _started:
   426                           	callstack 0
   427  000045                     	ds	1
   428  000046                     _pot:
   429                           	callstack 0
   430  000046                     	ds	4
   431                           
   432                           	psect	cstackCOMRAM
   433  000001                     __pcstackCOMRAM:
   434                           	callstack 0
   435  000001                     ??_kpReadKey:
   436  000001                     ?_digitalRead:
   437                           	callstack 0
   438  000001                     ?_adcRead:
   439                           	callstack 0
   440  000001                     ?_kpRead:
   441                           	callstack 0
   442  000001                     ?___lmul:
   443                           	callstack 0
   444  000001                     serialSend@c:
   445                           	callstack 0
   446  000001                     serialRead@resp:
   447                           	callstack 0
   448  000001                     ssdDigit@pos:
   449                           	callstack 0
   450  000001                     timed@ms:
   451                           	callstack 0
   452  000001                     adcRead@channel:
   453                           	callstack 0
   454  000001                     digitalWrite@pin:
   455                           	callstack 0
   456  000001                     digitalRead@pin:
   457                           	callstack 0
   458  000001                     pinMode@pin:
   459                           	callstack 0
   460  000001                     delayMicro@a:
   461                           	callstack 0
   462  000001                     delayMili@a:
   463                           	callstack 0
   464  000001                     timerReset@tempo:
   465                           	callstack 0
   466  000001                     ___lmul@multiplier:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x0
   470  000001                     	ds	1
   471  000002                     ssdDigit@val:
   472                           	callstack 0
   473  000002                     timed@w:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1
   477  000002                     	ds	1
   478  000003                     ??_digitalRead:
   479  000003                     ??_delayMili:
   480  000003                     timed@i:
   481                           	callstack 0
   482  000003                     adcRead@ADvalor:
   483                           	callstack 0
   484  000003                     digitalWrite@value:
   485                           	callstack 0
   486  000003                     pinMode@type:
   487                           	callstack 0
   488  000003                     timerReset@ciclos:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x2
   492  000003                     	ds	1
   493  000004                     timed@j:
   494                           	callstack 0
   495  000004                     kpReadKey@i:
   496                           	callstack 0
   497  000004                     delayMili@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x3
   501  000004                     	ds	1
   502  000005                     ??_pinMode:
   503  000005                     ??_digitalWrite:
   504  000005                     timed@k:
   505                           	callstack 0
   506  000005                     ___lmul@multiplicand:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510  000005                     	ds	2
   511  000007                     soWrite@value:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x6
   515  000007                     	ds	2
   516  000009                     soWrite@i:
   517                           	callstack 0
   518  000009                     ___lmul@product:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x8
   522  000009                     	ds	1
   523  00000A                     ??_kpDebounce:
   524  00000A                     ??_ssdUpdate:
   525  00000A                     pushNibble@rs:
   526                           	callstack 0
   527  00000A                     pushByte@rs:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x9
   531  00000A                     	ds	2
   532  00000C                     ??_pushByte:
   533  00000C                     pushNibble@value:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0xB
   537  00000C                     	ds	1
   538  00000D                     ?___lldiv:
   539                           	callstack 0
   540  00000D                     pushByte@value:
   541                           	callstack 0
   542  00000D                     kpDebounce@i:
   543                           	callstack 0
   544  00000D                     ___lldiv@dividend:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0xC
   548  00000D                     	ds	1
   549  00000E                     lcdCommand@value:
   550                           	callstack 0
   551  00000E                     lcdChar@value:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xD
   555  00000E                     	ds	1
   556  00000F                     lcdPosition@line:
   557                           	callstack 0
   558  00000F                     lcdString@msg:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xE
   562  00000F                     	ds	2
   563  000011                     ??_lcdString:
   564  000011                     lcdPosition@col:
   565                           	callstack 0
   566  000011                     ___lldiv@divisor:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x10
   570  000011                     	ds	2
   571  000013                     lcdString@i:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x12
   575  000013                     	ds	2
   576  000015                     ??_leTeclado:
   577  000015                     ___lldiv@quotient:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x14
   581  000015                     	ds	2
   582  000017                     leTeclado@tecla:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x16
   586  000017                     	ds	2
   587  000019                     ___lldiv@counter:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x18
   591  000019                     	ds	1
   592  00001A                     ?___llmod:
   593                           	callstack 0
   594  00001A                     ___llmod@dividend:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x19
   598  00001A                     	ds	4
   599  00001E                     ___llmod@divisor:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x1D
   603  00001E                     	ds	4
   604  000022                     ___llmod@counter:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x21
   608  000022                     	ds	1
   609  000023                     ??_serialcom:
   610  000023                     mostraDisplay@v0:
   611                           	callstack 0
   612  000023                     leTemperatura@degree:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x22
   616  000023                     	ds	2
   617  000025                     mostraDisplay@v1:
   618                           	callstack 0
   619  000025                     _serialcom$1395:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x24
   623  000025                     	ds	2
   624  000027                     mostraDisplay@v2:
   625                           	callstack 0
   626  000027                     _leTemperatura$1394:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x26
   630  000027                     	ds	2
   631  000029                     mostraDisplay@v3:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x28
   635  000029                     	ds	2
   636  00002B                     ??_main:
   637                           
   638                           ; 1 bytes @ 0x2A
   639  00002B                     	ds	2
   640  00002D                     main@slot:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x2C
   644  00002D                     	ds	1
   645                           
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 187 in file "mainEmb.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  slot            1   44[COMRAM] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   665 ;;      Params:         0       0       0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0       0       0
   668 ;;      Totals:         3       0       0       0       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels required when called: 7
   671 ;; This function calls:
   672 ;;		_adcInit
   673 ;;		_calcula
   674 ;;		_kpInit
   675 ;;		_lcdCommand
   676 ;;		_lcdInit
   677 ;;		_lcdString
   678 ;;		_leTeclado
   679 ;;		_leTemperatura
   680 ;;		_serialInit
   681 ;;		_serialcom
   682 ;;		_ssdInit
   683 ;;		_ssdUpdate
   684 ;;		_timed
   685 ;;		_timerInit
   686 ;;		_timerReset
   687 ;;		_timerWait
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text0
   694  001702                     __ptext0:
   695                           	callstack 0
   696  001702                     _main:
   697                           	callstack 24
   698  001702                     
   699                           ;mainEmb.c: 188:     char slot;;mainEmb.c: 189:     lcdInit();
   700  001702  ECF6  F00B         	call	_lcdInit	;wreg free
   701                           
   702                           ;mainEmb.c: 190:     kpInit();
   703  001706  EC5D  F00F         	call	_kpInit	;wreg free
   704                           
   705                           ;mainEmb.c: 191:     ssdInit();
   706  00170A  EC37  F00E         	call	_ssdInit	;wreg free
   707                           
   708                           ;mainEmb.c: 192:     timerInit();
   709  00170E  EC55  F010         	call	_timerInit	;wreg free
   710                           
   711                           ;mainEmb.c: 193:     serialInit();
   712  001712  EC25  F010         	call	_serialInit	;wreg free
   713                           
   714                           ;mainEmb.c: 194:     adcInit();
   715  001716  ECDC  F00E         	call	_adcInit	;wreg free
   716  00171A                     
   717                           ;mainEmb.c: 195:     lcdString("   WELCOME TO   ");
   718  00171A  0E1B               	movlw	low STR_23
   719  00171C  6E0F               	movwf	lcdString@msg^0,c
   720  00171E  0E06               	movlw	high STR_23
   721  001720  6E10               	movwf	(lcdString@msg+1)^0,c
   722  001722  EC62  F00E         	call	_lcdString	;wreg free
   723  001726                     
   724                           ;mainEmb.c: 196:     lcdCommand(0xC0);
   725  001726  0EC0               	movlw	192
   726  001728  EC16  F010         	call	_lcdCommand
   727                           
   728                           ;mainEmb.c: 197:     lcdString("   SMART ADEGA  ");
   729  00172C  0E2C               	movlw	low STR_24
   730  00172E  6E0F               	movwf	lcdString@msg^0,c
   731  001730  0E06               	movlw	high STR_24
   732  001732  6E10               	movwf	(lcdString@msg+1)^0,c
   733  001734  EC62  F00E         	call	_lcdString	;wreg free
   734  001738                     
   735                           ;mainEmb.c: 199:     timed(10);
   736  001738  0E0A               	movlw	10
   737  00173A  EC30  F00D         	call	_timed
   738  00173E                     
   739                           ;mainEmb.c: 201:     lcdCommand(0x01);
   740  00173E  0E01               	movlw	1
   741  001740  EC16  F010         	call	_lcdCommand
   742  001744                     
   743                           ;mainEmb.c: 202:     lcdCommand(0x80);
   744  001744  0E80               	movlw	128
   745  001746  EC16  F010         	call	_lcdCommand
   746  00174A                     
   747                           ;mainEmb.c: 203:     lcdString("FERNANDO'S ADEGA");
   748  00174A  0E3D               	movlw	low STR_25
   749  00174C  6E0F               	movwf	lcdString@msg^0,c
   750  00174E  0E06               	movlw	high STR_25
   751  001750  6E10               	movwf	(lcdString@msg+1)^0,c
   752  001752  EC62  F00E         	call	_lcdString	;wreg free
   753  001756                     l546:
   754                           
   755                           ;mainEmb.c: 206:         timerReset(6000);
   756  001756  0E17               	movlw	23
   757  001758  6E02               	movwf	(timerReset@tempo+1)^0,c
   758  00175A  0E70               	movlw	112
   759  00175C  6E01               	movwf	timerReset@tempo^0,c
   760  00175E  ECF6  F00F         	call	_timerReset	;wreg free
   761                           
   762                           ;mainEmb.c: 207:         switch (slot) {
   763  001762  EFD3  F00B         	goto	l2955
   764  001766                     l2933:
   765                           
   766                           ;mainEmb.c: 209:                 leTeclado();
   767  001766  EC2E  F007         	call	_leTeclado	;wreg free
   768                           
   769                           ;mainEmb.c: 210:                 ssdUpdate();
   770  00176A  ECD8  F008         	call	_ssdUpdate	;wreg free
   771  00176E                     
   772                           ;mainEmb.c: 211:                 slot = 1;
   773  00176E  0E01               	movlw	1
   774  001770  6E2D               	movwf	main@slot^0,c
   775                           
   776                           ;mainEmb.c: 212:                 break;
   777  001772  EFF0  F00B         	goto	l2957
   778  001776                     l2937:
   779                           
   780                           ;mainEmb.c: 214:                 serialcom();
   781  001776  EC68  F003         	call	_serialcom	;wreg free
   782  00177A                     
   783                           ;mainEmb.c: 215:                 slot = 2;
   784  00177A  0E02               	movlw	2
   785  00177C  6E2D               	movwf	main@slot^0,c
   786                           
   787                           ;mainEmb.c: 216:                 break;
   788  00177E  EFF0  F00B         	goto	l2957
   789  001782                     l2941:
   790                           
   791                           ;mainEmb.c: 218:                 leTemperatura();
   792  001782  EC08  F008         	call	_leTemperatura	;wreg free
   793  001786                     
   794                           ;mainEmb.c: 219:                 slot = 3;
   795  001786  0E03               	movlw	3
   796  001788  6E2D               	movwf	main@slot^0,c
   797                           
   798                           ;mainEmb.c: 220:                 break;
   799  00178A  EFF0  F00B         	goto	l2957
   800  00178E                     l2945:
   801                           
   802                           ;mainEmb.c: 222:                 calcula();
   803  00178E  ECA2  F00C         	call	_calcula	;wreg free
   804  001792                     
   805                           ;mainEmb.c: 223:                 ssdUpdate();
   806  001792  ECD8  F008         	call	_ssdUpdate	;wreg free
   807  001796                     
   808                           ;mainEmb.c: 224:                 slot = 4;
   809  001796  0E04               	movlw	4
   810  001798  6E2D               	movwf	main@slot^0,c
   811                           
   812                           ;mainEmb.c: 225:                 break;
   813  00179A  EFF0  F00B         	goto	l2957
   814  00179E                     l2951:
   815                           
   816                           ;mainEmb.c: 227:                 slot = 0;
   817  00179E  0E00               	movlw	0
   818  0017A0  6E2D               	movwf	main@slot^0,c
   819                           
   820                           ;mainEmb.c: 228:                 break;
   821  0017A2  EFF0  F00B         	goto	l2957
   822  0017A6                     l2955:
   823  0017A6  502D               	movf	main@slot^0,w,c
   824  0017A8  6E2B               	movwf	??_main^0,c
   825  0017AA  6A2C               	clrf	(??_main+1)^0,c
   826                           
   827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   828                           ; Switch size 1, requested type "simple"
   829                           ; Number of cases is 1, Range of values is 0 to 0
   830                           ; switch strategies available:
   831                           ; Name         Instructions Cycles
   832                           ; simple_byte            4     3 (average)
   833                           ;	Chosen strategy is simple_byte
   834  0017AC  502C               	movf	(??_main+1)^0,w,c
   835  0017AE  0A00               	xorlw	0	; case 0
   836  0017B0  B4D8               	btfsc	status,2,c
   837  0017B2  EFDD  F00B         	goto	l2979
   838  0017B6  EFCF  F00B         	goto	l2951
   839  0017BA                     l2979:
   840                           
   841                           ; Switch size 1, requested type "simple"
   842                           ; Number of cases is 4, Range of values is 0 to 3
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte           13     7 (average)
   846                           ;	Chosen strategy is simple_byte
   847  0017BA  502B               	movf	??_main^0,w,c
   848  0017BC  0A00               	xorlw	0	; case 0
   849  0017BE  B4D8               	btfsc	status,2,c
   850  0017C0  EFB3  F00B         	goto	l2933
   851  0017C4  0A01               	xorlw	1	; case 1
   852  0017C6  B4D8               	btfsc	status,2,c
   853  0017C8  EFBB  F00B         	goto	l2937
   854  0017CC  0A03               	xorlw	3	; case 2
   855  0017CE  B4D8               	btfsc	status,2,c
   856  0017D0  EFC1  F00B         	goto	l2941
   857  0017D4  0A01               	xorlw	1	; case 3
   858  0017D6  B4D8               	btfsc	status,2,c
   859  0017D8  EFC7  F00B         	goto	l2945
   860  0017DC  EFCF  F00B         	goto	l2951
   861  0017E0                     l2957:
   862                           
   863                           ;mainEmb.c: 231:         timerWait();
   864  0017E0  EC48  F010         	call	_timerWait	;wreg free
   865                           
   866                           ;mainEmb.c: 232:     }
   867  0017E4  EFAB  F00B         	goto	l546
   868  0017E8  EF00  F000         	goto	start
   869  0017EC                     __end_of_main:
   870                           	callstack 0
   871                           
   872 ;; *************** function _timerWait *****************
   873 ;; Defined at:
   874 ;;		line 31 in file "timer.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		None
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   888 ;;      Params:         0       0       0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text1
   902  002090                     __ptext1:
   903                           	callstack 0
   904  002090                     _timerWait:
   905                           	callstack 30
   906  002090                     l440:
   907  002090  A4F2               	btfss	242,2,c	;volatile
   908  002092  EF4D  F010         	goto	u951
   909  002096  EF4F  F010         	goto	u950
   910  00209A                     u951:
   911  00209A  EF48  F010         	goto	l440
   912  00209E                     u950:
   913  00209E  0012               	return		;funcret
   914  0020A0                     __end_of_timerWait:
   915                           	callstack 0
   916                           
   917 ;; *************** function _timerReset *****************
   918 ;; Defined at:
   919 ;;		line 37 in file "timer.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  tempo           2    0[COMRAM] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  ciclos          2    2[COMRAM] unsigned int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         2       0       0       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text2
   947  001FEC                     __ptext2:
   948                           	callstack 0
   949  001FEC                     _timerReset:
   950                           	callstack 30
   951  001FEC                     
   952                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
   953  001FEC  90D8               	bcf	status,0,c
   954  001FEE  3401               	rlcf	timerReset@tempo^0,w,c
   955  001FF0  6E03               	movwf	timerReset@ciclos^0,c
   956  001FF2  3402               	rlcf	(timerReset@tempo+1)^0,w,c
   957  001FF4  6E04               	movwf	(timerReset@ciclos+1)^0,c
   958  001FF6                     
   959                           ;timer.c: 44:  ciclos = 65535 - ciclos;
   960  001FF6  1E03               	comf	timerReset@ciclos^0,f,c
   961  001FF8  1E04               	comf	(timerReset@ciclos+1)^0,f,c
   962  001FFA                     
   963                           ;timer.c: 47:     ciclos -=50;
   964  001FFA  0E32               	movlw	50
   965  001FFC  5E03               	subwf	timerReset@ciclos^0,f,c
   966  001FFE  0E00               	movlw	0
   967  002000  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
   968  002002                     
   969                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
   970  002002  5004               	movf	(timerReset@ciclos+1)^0,w,c
   971  002004  6ED7               	movwf	215,c	;volatile
   972  002006                     
   973                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
   974  002006  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
   975  00200A                     
   976                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
   977  00200A  94F2               	bcf	242,2,c	;volatile
   978  00200C  0012               	return		;funcret
   979  00200E                     __end_of_timerReset:
   980                           	callstack 0
   981                           
   982 ;; *************** function _timerInit *****************
   983 ;; Defined at:
   984 ;;		line 55 in file "timer.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   998 ;;      Params:         0       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text3
  1012  0020AA                     __ptext3:
  1013                           	callstack 0
  1014  0020AA                     _timerInit:
  1015                           	callstack 30
  1016  0020AA                     
  1017                           ;timer.c: 57:  T0CON = 0b00001000;
  1018  0020AA  0E08               	movlw	8
  1019  0020AC  6ED5               	movwf	213,c	;volatile
  1020  0020AE                     
  1021                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1022  0020AE  8ED5               	bsf	213,7,c	;volatile
  1023  0020B0  0012               	return		;funcret
  1024  0020B2                     __end_of_timerInit:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _timed *****************
  1028 ;; Defined at:
  1029 ;;		line 5 in file "delay.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  ms              1    wreg     unsigned char 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  ms              1    0[COMRAM] unsigned char 
  1034 ;;  k               1    4[COMRAM] volatile unsigned char 
  1035 ;;  j               1    3[COMRAM] volatile unsigned char 
  1036 ;;  i               1    2[COMRAM] volatile unsigned char 
  1037 ;;  w               1    1[COMRAM] volatile unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1047 ;;      Params:         0       0       0       0       0       0       0
  1048 ;;      Locals:         5       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0
  1050 ;;      Totals:         5       0       0       0       0       0       0
  1051 ;;Total ram usage:        5 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  001A60                     __ptext4:
  1062                           	callstack 0
  1063  001A60                     _timed:
  1064                           	callstack 30
  1065                           
  1066                           ;incstack = 0
  1067                           ;timed@ms stored from wreg
  1068  001A60  6E01               	movwf	timed@ms^0,c
  1069  001A62                     
  1070                           ;delay.c: 6:     volatile unsigned char i, j, k, w;;delay.c: 8:     for (w = 0; w < ms; 
      +                          w++) {
  1071  001A62  0E00               	movlw	0
  1072  001A64  6E02               	movwf	timed@w^0,c	;volatile
  1073  001A66  EF63  F00D         	goto	l1955
  1074  001A6A                     l1923:
  1075                           
  1076                           ;delay.c: 9:         for (i = 0; i < 100; i++) {
  1077  001A6A  0E00               	movlw	0
  1078  001A6C  6E03               	movwf	timed@i^0,c	;volatile
  1079  001A6E                     l1925:
  1080  001A6E  0E63               	movlw	99
  1081  001A70  6403               	cpfsgt	timed@i^0,c	;volatile
  1082  001A72  EF3D  F00D         	goto	u1021
  1083  001A76  EF3F  F00D         	goto	u1020
  1084  001A7A                     u1021:
  1085  001A7A  EF41  F00D         	goto	l1929
  1086  001A7E                     u1020:
  1087  001A7E  EF62  F00D         	goto	l1953
  1088  001A82                     l1929:
  1089                           
  1090                           ;delay.c: 10:             for (j = 0; j < 41; j++) {
  1091  001A82  0E00               	movlw	0
  1092  001A84  6E04               	movwf	timed@j^0,c	;volatile
  1093  001A86                     l1931:
  1094  001A86  0E28               	movlw	40
  1095  001A88  6404               	cpfsgt	timed@j^0,c	;volatile
  1096  001A8A  EF49  F00D         	goto	u1031
  1097  001A8E  EF4B  F00D         	goto	u1030
  1098  001A92                     u1031:
  1099  001A92  EF4D  F00D         	goto	l1935
  1100  001A96                     u1030:
  1101  001A96  EF5F  F00D         	goto	l1949
  1102  001A9A                     l1935:
  1103                           
  1104                           ;delay.c: 11:                 for (k = 0; k < 3; k++);
  1105  001A9A  0E00               	movlw	0
  1106  001A9C  6E05               	movwf	timed@k^0,c	;volatile
  1107  001A9E                     l1937:
  1108  001A9E  0E02               	movlw	2
  1109  001AA0  6405               	cpfsgt	timed@k^0,c	;volatile
  1110  001AA2  EF55  F00D         	goto	u1041
  1111  001AA6  EF57  F00D         	goto	u1040
  1112  001AAA                     u1041:
  1113  001AAA  EF59  F00D         	goto	l1941
  1114  001AAE                     u1040:
  1115  001AAE  EF5C  F00D         	goto	l1945
  1116  001AB2                     l1941:
  1117  001AB2  2A05               	incf	timed@k^0,f,c	;volatile
  1118  001AB4  EF4F  F00D         	goto	l1937
  1119  001AB8                     l1945:
  1120                           
  1121                           ;delay.c: 12:             }
  1122  001AB8  2A04               	incf	timed@j^0,f,c	;volatile
  1123  001ABA  EF43  F00D         	goto	l1931
  1124  001ABE                     l1949:
  1125                           
  1126                           ;delay.c: 13:         }
  1127  001ABE  2A03               	incf	timed@i^0,f,c	;volatile
  1128  001AC0  EF37  F00D         	goto	l1925
  1129  001AC4                     l1953:
  1130                           
  1131                           ;delay.c: 14:     }
  1132  001AC4  2A02               	incf	timed@w^0,f,c	;volatile
  1133  001AC6                     l1955:
  1134  001AC6  5001               	movf	timed@ms^0,w,c
  1135  001AC8  5C02               	subwf	timed@w^0,w,c	;volatile
  1136  001ACA  A0D8               	btfss	status,0,c
  1137  001ACC  EF6A  F00D         	goto	u1051
  1138  001AD0  EF6C  F00D         	goto	u1050
  1139  001AD4                     u1051:
  1140  001AD4  EF35  F00D         	goto	l1923
  1141  001AD8                     u1050:
  1142  001AD8  0012               	return		;funcret
  1143  001ADA                     __end_of_timed:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _ssdUpdate *****************
  1147 ;; Defined at:
  1148 ;;		line 50 in file "ssd.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1162 ;;      Params:         0       0       0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0
  1164 ;;      Temps:          2       0       0       0       0       0       0
  1165 ;;      Totals:         2       0       0       0       0       0       0
  1166 ;;Total ram usage:        2 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 3
  1169 ;; This function calls:
  1170 ;;		_digitalWrite
  1171 ;;		_soWrite
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text5
  1178  0011B0                     __ptext5:
  1179                           	callstack 0
  1180  0011B0                     _ssdUpdate:
  1181                           	callstack 27
  1182  0011B0                     
  1183                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1184  0011B0  0E00               	movlw	0
  1185  0011B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1186  0011B4  0E18               	movlw	24
  1187  0011B6  6E01               	movwf	digitalWrite@pin^0,c
  1188  0011B8  0E00               	movlw	0
  1189  0011BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1190  0011BC  0E00               	movlw	0
  1191  0011BE  6E03               	movwf	digitalWrite@value^0,c
  1192  0011C0  ECE0  F004         	call	_digitalWrite	;wreg free
  1193                           
  1194                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1195  0011C4  0E00               	movlw	0
  1196  0011C6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1197  0011C8  0E19               	movlw	25
  1198  0011CA  6E01               	movwf	digitalWrite@pin^0,c
  1199  0011CC  0E00               	movlw	0
  1200  0011CE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1201  0011D0  0E00               	movlw	0
  1202  0011D2  6E03               	movwf	digitalWrite@value^0,c
  1203  0011D4  ECE0  F004         	call	_digitalWrite	;wreg free
  1204                           
  1205                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1206  0011D8  0E00               	movlw	0
  1207  0011DA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1208  0011DC  0E1A               	movlw	26
  1209  0011DE  6E01               	movwf	digitalWrite@pin^0,c
  1210  0011E0  0E00               	movlw	0
  1211  0011E2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1212  0011E4  0E00               	movlw	0
  1213  0011E6  6E03               	movwf	digitalWrite@value^0,c
  1214  0011E8  ECE0  F004         	call	_digitalWrite	;wreg free
  1215                           
  1216                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1217  0011EC  0E00               	movlw	0
  1218  0011EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1219  0011F0  0E1B               	movlw	27
  1220  0011F2  6E01               	movwf	digitalWrite@pin^0,c
  1221  0011F4  0E00               	movlw	0
  1222  0011F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1223  0011F8  0E00               	movlw	0
  1224  0011FA  6E03               	movwf	digitalWrite@value^0,c
  1225  0011FC  ECE0  F004         	call	_digitalWrite	;wreg free
  1226                           
  1227                           ;ssd.c: 60:     soWrite(0x00);
  1228  001200  0E00               	movlw	0
  1229  001202  6E08               	movwf	(soWrite@value+1)^0,c
  1230  001204  0E00               	movlw	0
  1231  001206  6E07               	movwf	soWrite@value^0,c
  1232  001208  ECB5  F00E         	call	_soWrite	;wreg free
  1233                           
  1234                           ;ssd.c: 62:     switch (display)
  1235  00120C  EF70  F009         	goto	l2611
  1236  001210                     l2583:
  1237                           
  1238                           ;ssd.c: 65:             soWrite(valor[v0]);
  1239  001210  0E01               	movlw	low _valor
  1240  001212  2442               	addwf	_v0^0,w,c
  1241  001214  6EF6               	movwf	tblptrl,c
  1242  001216  6AF7               	clrf	tblptrh,c
  1243  001218  0E06               	movlw	high _valor
  1244  00121A  22F7               	addwfc	tblptrh,f,c
  1245  00121C                     	if	0	;There are less than 3 active tblptr bytes
  1246  00121C                     	endif
  1247  00121C  0008               	tblrd		*
  1248  00121E  50F5               	movf	tablat,w,c
  1249  001220  6E07               	movwf	soWrite@value^0,c
  1250  001222  6A08               	clrf	(soWrite@value+1)^0,c
  1251  001224  ECB5  F00E         	call	_soWrite	;wreg free
  1252  001228                     
  1253                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1254  001228  0E00               	movlw	0
  1255  00122A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1256  00122C  0E18               	movlw	24
  1257  00122E  6E01               	movwf	digitalWrite@pin^0,c
  1258  001230  0E00               	movlw	0
  1259  001232  6E04               	movwf	(digitalWrite@value+1)^0,c
  1260  001234  0E01               	movlw	1
  1261  001236  6E03               	movwf	digitalWrite@value^0,c
  1262  001238  ECE0  F004         	call	_digitalWrite	;wreg free
  1263  00123C                     
  1264                           ;ssd.c: 67:             display = 1;
  1265  00123C  0E01               	movlw	1
  1266  00123E  6E43               	movwf	_display^0,c
  1267                           
  1268                           ;ssd.c: 68:             break;
  1269  001240  EF8D  F009         	goto	l423
  1270  001244                     l2589:
  1271                           
  1272                           ;ssd.c: 71:             soWrite(valor[v1]);
  1273  001244  0E01               	movlw	low _valor
  1274  001246  2441               	addwf	_v1^0,w,c
  1275  001248  6EF6               	movwf	tblptrl,c
  1276  00124A  6AF7               	clrf	tblptrh,c
  1277  00124C  0E06               	movlw	high _valor
  1278  00124E  22F7               	addwfc	tblptrh,f,c
  1279  001250                     	if	0	;There are less than 3 active tblptr bytes
  1280  001250                     	endif
  1281  001250  0008               	tblrd		*
  1282  001252  50F5               	movf	tablat,w,c
  1283  001254  6E07               	movwf	soWrite@value^0,c
  1284  001256  6A08               	clrf	(soWrite@value+1)^0,c
  1285  001258  ECB5  F00E         	call	_soWrite	;wreg free
  1286  00125C                     
  1287                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1288  00125C  0E00               	movlw	0
  1289  00125E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1290  001260  0E19               	movlw	25
  1291  001262  6E01               	movwf	digitalWrite@pin^0,c
  1292  001264  0E00               	movlw	0
  1293  001266  6E04               	movwf	(digitalWrite@value+1)^0,c
  1294  001268  0E01               	movlw	1
  1295  00126A  6E03               	movwf	digitalWrite@value^0,c
  1296  00126C  ECE0  F004         	call	_digitalWrite	;wreg free
  1297  001270                     
  1298                           ;ssd.c: 73:             display = 2;
  1299  001270  0E02               	movlw	2
  1300  001272  6E43               	movwf	_display^0,c
  1301                           
  1302                           ;ssd.c: 74:             break;
  1303  001274  EF8D  F009         	goto	l423
  1304  001278                     l2595:
  1305                           
  1306                           ;ssd.c: 77:             soWrite(valor[v2]);
  1307  001278  0E01               	movlw	low _valor
  1308  00127A  2440               	addwf	_v2^0,w,c
  1309  00127C  6EF6               	movwf	tblptrl,c
  1310  00127E  6AF7               	clrf	tblptrh,c
  1311  001280  0E06               	movlw	high _valor
  1312  001282  22F7               	addwfc	tblptrh,f,c
  1313  001284                     	if	0	;There are less than 3 active tblptr bytes
  1314  001284                     	endif
  1315  001284  0008               	tblrd		*
  1316  001286  50F5               	movf	tablat,w,c
  1317  001288  6E07               	movwf	soWrite@value^0,c
  1318  00128A  6A08               	clrf	(soWrite@value+1)^0,c
  1319  00128C  ECB5  F00E         	call	_soWrite	;wreg free
  1320  001290                     
  1321                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1322  001290  0E00               	movlw	0
  1323  001292  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1324  001294  0E1A               	movlw	26
  1325  001296  6E01               	movwf	digitalWrite@pin^0,c
  1326  001298  0E00               	movlw	0
  1327  00129A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1328  00129C  0E01               	movlw	1
  1329  00129E  6E03               	movwf	digitalWrite@value^0,c
  1330  0012A0  ECE0  F004         	call	_digitalWrite	;wreg free
  1331  0012A4                     
  1332                           ;ssd.c: 79:             display = 3;
  1333  0012A4  0E03               	movlw	3
  1334  0012A6  6E43               	movwf	_display^0,c
  1335                           
  1336                           ;ssd.c: 80:             break;
  1337  0012A8  EF8D  F009         	goto	l423
  1338  0012AC                     l2601:
  1339                           
  1340                           ;ssd.c: 83:             soWrite(valor[v3]);
  1341  0012AC  0E01               	movlw	low _valor
  1342  0012AE  243F               	addwf	_v3^0,w,c
  1343  0012B0  6EF6               	movwf	tblptrl,c
  1344  0012B2  6AF7               	clrf	tblptrh,c
  1345  0012B4  0E06               	movlw	high _valor
  1346  0012B6  22F7               	addwfc	tblptrh,f,c
  1347  0012B8                     	if	0	;There are less than 3 active tblptr bytes
  1348  0012B8                     	endif
  1349  0012B8  0008               	tblrd		*
  1350  0012BA  50F5               	movf	tablat,w,c
  1351  0012BC  6E07               	movwf	soWrite@value^0,c
  1352  0012BE  6A08               	clrf	(soWrite@value+1)^0,c
  1353  0012C0  ECB5  F00E         	call	_soWrite	;wreg free
  1354  0012C4                     
  1355                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1356  0012C4  0E00               	movlw	0
  1357  0012C6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1358  0012C8  0E1B               	movlw	27
  1359  0012CA  6E01               	movwf	digitalWrite@pin^0,c
  1360  0012CC  0E00               	movlw	0
  1361  0012CE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1362  0012D0  0E01               	movlw	1
  1363  0012D2  6E03               	movwf	digitalWrite@value^0,c
  1364  0012D4  ECE0  F004         	call	_digitalWrite	;wreg free
  1365  0012D8                     l2605:
  1366                           
  1367                           ;ssd.c: 85:             display = 0;
  1368  0012D8  0E00               	movlw	0
  1369  0012DA  6E43               	movwf	_display^0,c
  1370                           
  1371                           ;ssd.c: 86:             break;
  1372  0012DC  EF8D  F009         	goto	l423
  1373  0012E0                     l2611:
  1374  0012E0  5043               	movf	_display^0,w,c
  1375  0012E2  6E0A               	movwf	??_ssdUpdate^0,c
  1376  0012E4  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1377                           
  1378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 1, Range of values is 0 to 0
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte            4     3 (average)
  1384                           ;	Chosen strategy is simple_byte
  1385  0012E6  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1386  0012E8  0A00               	xorlw	0	; case 0
  1387  0012EA  B4D8               	btfsc	status,2,c
  1388  0012EC  EF7A  F009         	goto	l2981
  1389  0012F0  EF6C  F009         	goto	l2605
  1390  0012F4                     l2981:
  1391                           
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 4, Range of values is 0 to 3
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           13     7 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398  0012F4  500A               	movf	??_ssdUpdate^0,w,c
  1399  0012F6  0A00               	xorlw	0	; case 0
  1400  0012F8  B4D8               	btfsc	status,2,c
  1401  0012FA  EF08  F009         	goto	l2583
  1402  0012FE  0A01               	xorlw	1	; case 1
  1403  001300  B4D8               	btfsc	status,2,c
  1404  001302  EF22  F009         	goto	l2589
  1405  001306  0A03               	xorlw	3	; case 2
  1406  001308  B4D8               	btfsc	status,2,c
  1407  00130A  EF3C  F009         	goto	l2595
  1408  00130E  0A01               	xorlw	1	; case 3
  1409  001310  B4D8               	btfsc	status,2,c
  1410  001312  EF56  F009         	goto	l2601
  1411  001316  EF6C  F009         	goto	l2605
  1412  00131A                     l423:
  1413  00131A  0012               	return		;funcret
  1414  00131C                     __end_of_ssdUpdate:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _ssdInit *****************
  1418 ;; Defined at:
  1419 ;;		line 94 in file "ssd.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 2
  1440 ;; This function calls:
  1441 ;;		_pinMode
  1442 ;;		_soInit
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text6
  1449  001C6E                     __ptext6:
  1450                           	callstack 0
  1451  001C6E                     _ssdInit:
  1452                           	callstack 28
  1453  001C6E                     
  1454                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1455  001C6E  0E00               	movlw	0
  1456  001C70  6E02               	movwf	(pinMode@pin+1)^0,c
  1457  001C72  0E18               	movlw	24
  1458  001C74  6E01               	movwf	pinMode@pin^0,c
  1459  001C76  0E00               	movlw	0
  1460  001C78  6E04               	movwf	(pinMode@type+1)^0,c
  1461  001C7A  0E00               	movlw	0
  1462  001C7C  6E03               	movwf	pinMode@type^0,c
  1463  001C7E  EC07  F006         	call	_pinMode	;wreg free
  1464                           
  1465                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1466  001C82  0E00               	movlw	0
  1467  001C84  6E02               	movwf	(pinMode@pin+1)^0,c
  1468  001C86  0E19               	movlw	25
  1469  001C88  6E01               	movwf	pinMode@pin^0,c
  1470  001C8A  0E00               	movlw	0
  1471  001C8C  6E04               	movwf	(pinMode@type+1)^0,c
  1472  001C8E  0E00               	movlw	0
  1473  001C90  6E03               	movwf	pinMode@type^0,c
  1474  001C92  EC07  F006         	call	_pinMode	;wreg free
  1475                           
  1476                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1477  001C96  0E00               	movlw	0
  1478  001C98  6E02               	movwf	(pinMode@pin+1)^0,c
  1479  001C9A  0E1A               	movlw	26
  1480  001C9C  6E01               	movwf	pinMode@pin^0,c
  1481  001C9E  0E00               	movlw	0
  1482  001CA0  6E04               	movwf	(pinMode@type+1)^0,c
  1483  001CA2  0E00               	movlw	0
  1484  001CA4  6E03               	movwf	pinMode@type^0,c
  1485  001CA6  EC07  F006         	call	_pinMode	;wreg free
  1486                           
  1487                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1488  001CAA  0E00               	movlw	0
  1489  001CAC  6E02               	movwf	(pinMode@pin+1)^0,c
  1490  001CAE  0E1B               	movlw	27
  1491  001CB0  6E01               	movwf	pinMode@pin^0,c
  1492  001CB2  0E00               	movlw	0
  1493  001CB4  6E04               	movwf	(pinMode@type+1)^0,c
  1494  001CB6  0E00               	movlw	0
  1495  001CB8  6E03               	movwf	pinMode@type^0,c
  1496  001CBA  EC07  F006         	call	_pinMode	;wreg free
  1497                           
  1498                           ;ssd.c: 102:     soInit();
  1499  001CBE  EC21  F00F         	call	_soInit	;wreg free
  1500  001CC2  0012               	return		;funcret
  1501  001CC4                     __end_of_ssdInit:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _serialcom *****************
  1505 ;; Defined at:
  1506 ;;		line 116 in file "mainEmb.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2  525[None  ] int 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1520 ;;      Params:         0       0       0       0       0       0       0
  1521 ;;      Locals:         4       0       0       0       0       0       0
  1522 ;;      Temps:          2       0       0       0       0       0       0
  1523 ;;      Totals:         6       0       0       0       0       0       0
  1524 ;;Total ram usage:        6 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 6
  1527 ;; This function calls:
  1528 ;;		___lldiv
  1529 ;;		___llmod
  1530 ;;		___lmul
  1531 ;;		_adcRead
  1532 ;;		_lcdCommand
  1533 ;;		_lcdString
  1534 ;;		_serialRead
  1535 ;;		_serialSend
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text7
  1542  0006D0                     __ptext7:
  1543                           	callstack 0
  1544  0006D0                     _serialcom:
  1545                           	callstack 24
  1546  0006D0                     
  1547                           ;mainEmb.c: 117:     op = serialRead();
  1548  0006D0  EC8E  F00F         	call	_serialRead	;wreg free
  1549  0006D4  6E3E               	movwf	_op^0,c
  1550  0006D6                     
  1551                           ;mainEmb.c: 118:     if(op != 0){
  1552  0006D6  503E               	movf	_op^0,w,c
  1553  0006D8  B4D8               	btfsc	status,2,c
  1554  0006DA  EF71  F003         	goto	u2161
  1555  0006DE  EF73  F003         	goto	u2160
  1556  0006E2                     u2161:
  1557  0006E2  EF36  F004         	goto	l2777
  1558  0006E6                     u2160:
  1559  0006E6  EF15  F004         	goto	l2775
  1560  0006EA                     l2721:
  1561                           
  1562                           ;mainEmb.c: 122:                 lcdCommand(0x80);
  1563  0006EA  0E80               	movlw	128
  1564  0006EC  EC16  F010         	call	_lcdCommand
  1565  0006F0                     
  1566                           ;mainEmb.c: 123:                 lcdString("MALBEC   I: 12 C");
  1567  0006F0  0E5F               	movlw	low STR_3
  1568  0006F2  6E0F               	movwf	lcdString@msg^0,c
  1569  0006F4  0E06               	movlw	high STR_3
  1570  0006F6  6E10               	movwf	(lcdString@msg+1)^0,c
  1571  0006F8  EC62  F00E         	call	_lcdString	;wreg free
  1572  0006FC                     
  1573                           ;mainEmb.c: 124:                 lcdCommand(0xC0);
  1574  0006FC  0EC0               	movlw	192
  1575  0006FE  EC16  F010         	call	_lcdCommand
  1576  000702                     
  1577                           ;mainEmb.c: 125:                 lcdString("QTD: 12");
  1578  000702  0EB3               	movlw	low STR_4
  1579  000704  6E0F               	movwf	lcdString@msg^0,c
  1580  000706  0E06               	movlw	high STR_4
  1581  000708  6E10               	movwf	(lcdString@msg+1)^0,c
  1582  00070A  EC62  F00E         	call	_lcdString	;wreg free
  1583  00070E                     
  1584                           ;mainEmb.c: 126:                 tempMax = 24;
  1585  00070E  0E18               	movlw	24
  1586  000710  6E32               	movwf	_tempMax^0,c
  1587  000712  0E00               	movlw	0
  1588  000714  6E33               	movwf	(_tempMax+1)^0,c
  1589  000716  0E00               	movlw	0
  1590  000718  6E34               	movwf	(_tempMax+2)^0,c
  1591  00071A  0E00               	movlw	0
  1592  00071C  6E35               	movwf	(_tempMax+3)^0,c
  1593  00071E                     
  1594                           ;mainEmb.c: 127:                 tempIde = 12;
  1595  00071E  0E00               	movlw	0
  1596  000720  6E37               	movwf	(_tempIde+1)^0,c
  1597  000722  0E0C               	movlw	12
  1598  000724  6E36               	movwf	_tempIde^0,c
  1599                           
  1600                           ;mainEmb.c: 128:                 break;
  1601  000726  EF36  F004         	goto	l2777
  1602  00072A                     l2733:
  1603                           
  1604                           ;mainEmb.c: 130:                 lcdCommand(0x80);
  1605  00072A  0E80               	movlw	128
  1606  00072C  EC16  F010         	call	_lcdCommand
  1607  000730                     
  1608                           ;mainEmb.c: 131:                 lcdString("MERLOT   I:  9 C");
  1609  000730  0E81               	movlw	low STR_5
  1610  000732  6E0F               	movwf	lcdString@msg^0,c
  1611  000734  0E06               	movlw	high STR_5
  1612  000736  6E10               	movwf	(lcdString@msg+1)^0,c
  1613  000738  EC62  F00E         	call	_lcdString	;wreg free
  1614  00073C                     
  1615                           ;mainEmb.c: 132:                 lcdCommand(0xC0);
  1616  00073C  0EC0               	movlw	192
  1617  00073E  EC16  F010         	call	_lcdCommand
  1618                           
  1619                           ;mainEmb.c: 133:                 lcdString("QTD: 19");
  1620  000742  0EC3               	movlw	low STR_6
  1621  000744  6E0F               	movwf	lcdString@msg^0,c
  1622  000746  0E06               	movlw	high STR_6
  1623  000748  6E10               	movwf	(lcdString@msg+1)^0,c
  1624  00074A  EC62  F00E         	call	_lcdString	;wreg free
  1625  00074E                     
  1626                           ;mainEmb.c: 134:                 tempMax = 22;
  1627  00074E  0E16               	movlw	22
  1628  000750  6E32               	movwf	_tempMax^0,c
  1629  000752  0E00               	movlw	0
  1630  000754  6E33               	movwf	(_tempMax+1)^0,c
  1631  000756  0E00               	movlw	0
  1632  000758  6E34               	movwf	(_tempMax+2)^0,c
  1633  00075A  0E00               	movlw	0
  1634  00075C  6E35               	movwf	(_tempMax+3)^0,c
  1635  00075E                     
  1636                           ;mainEmb.c: 135:                 tempIde = 9;
  1637  00075E  0E00               	movlw	0
  1638  000760  6E37               	movwf	(_tempIde+1)^0,c
  1639  000762  0E09               	movlw	9
  1640  000764  6E36               	movwf	_tempIde^0,c
  1641                           
  1642                           ;mainEmb.c: 136:                 break;
  1643  000766  EF36  F004         	goto	l2777
  1644  00076A                     l2743:
  1645                           
  1646                           ;mainEmb.c: 138:                 lcdCommand(0x80);
  1647  00076A  0E80               	movlw	128
  1648  00076C  EC16  F010         	call	_lcdCommand
  1649  000770                     
  1650                           ;mainEmb.c: 139:                 lcdString("RIESLING I:  9 C");
  1651  000770  0E92               	movlw	low STR_7
  1652  000772  6E0F               	movwf	lcdString@msg^0,c
  1653  000774  0E06               	movlw	high STR_7
  1654  000776  6E10               	movwf	(lcdString@msg+1)^0,c
  1655  000778  EC62  F00E         	call	_lcdString	;wreg free
  1656  00077C                     
  1657                           ;mainEmb.c: 140:                 lcdCommand(0xC0);
  1658  00077C  0EC0               	movlw	192
  1659  00077E  EC16  F010         	call	_lcdCommand
  1660                           
  1661                           ;mainEmb.c: 141:                 lcdString("QTD: 5 ");
  1662  000782  0EA3               	movlw	low STR_8
  1663  000784  6E0F               	movwf	lcdString@msg^0,c
  1664  000786  0E06               	movlw	high STR_8
  1665  000788  6E10               	movwf	(lcdString@msg+1)^0,c
  1666  00078A  EC62  F00E         	call	_lcdString	;wreg free
  1667  00078E                     
  1668                           ;mainEmb.c: 142:                 tempMax = 9;
  1669  00078E  0E09               	movlw	9
  1670  000790  6E32               	movwf	_tempMax^0,c
  1671  000792  0E00               	movlw	0
  1672  000794  6E33               	movwf	(_tempMax+1)^0,c
  1673  000796  0E00               	movlw	0
  1674  000798  6E34               	movwf	(_tempMax+2)^0,c
  1675  00079A  0E00               	movlw	0
  1676  00079C  6E35               	movwf	(_tempMax+3)^0,c
  1677  00079E                     
  1678                           ;mainEmb.c: 143:                 tempIde = 7;
  1679  00079E  0E00               	movlw	0
  1680  0007A0  6E37               	movwf	(_tempIde+1)^0,c
  1681  0007A2  0E07               	movlw	7
  1682  0007A4  6E36               	movwf	_tempIde^0,c
  1683                           
  1684                           ;mainEmb.c: 144:                 break;
  1685  0007A6  EF36  F004         	goto	l2777
  1686  0007AA                     l2753:
  1687                           
  1688                           ;mainEmb.c: 146:                 lcdCommand(0x80);
  1689  0007AA  0E80               	movlw	128
  1690  0007AC  EC16  F010         	call	_lcdCommand
  1691  0007B0                     
  1692                           ;mainEmb.c: 147:                 lcdString("ROSE     I: 10 C");
  1693  0007B0  0E4E               	movlw	low STR_9
  1694  0007B2  6E0F               	movwf	lcdString@msg^0,c
  1695  0007B4  0E06               	movlw	high STR_9
  1696  0007B6  6E10               	movwf	(lcdString@msg+1)^0,c
  1697  0007B8  EC62  F00E         	call	_lcdString	;wreg free
  1698  0007BC                     
  1699                           ;mainEmb.c: 148:                 lcdCommand(0xC0);
  1700  0007BC  0EC0               	movlw	192
  1701  0007BE  EC16  F010         	call	_lcdCommand
  1702                           
  1703                           ;mainEmb.c: 149:                 lcdString("QTD: 14");
  1704  0007C2  0EBB               	movlw	low STR_10
  1705  0007C4  6E0F               	movwf	lcdString@msg^0,c
  1706  0007C6  0E06               	movlw	high STR_10
  1707  0007C8  6E10               	movwf	(lcdString@msg+1)^0,c
  1708  0007CA  EC62  F00E         	call	_lcdString	;wreg free
  1709  0007CE                     
  1710                           ;mainEmb.c: 150:                 tempMax = 21;
  1711  0007CE  0E15               	movlw	21
  1712  0007D0  6E32               	movwf	_tempMax^0,c
  1713  0007D2  0E00               	movlw	0
  1714  0007D4  6E33               	movwf	(_tempMax+1)^0,c
  1715  0007D6  0E00               	movlw	0
  1716  0007D8  6E34               	movwf	(_tempMax+2)^0,c
  1717  0007DA  0E00               	movlw	0
  1718  0007DC  6E35               	movwf	(_tempMax+3)^0,c
  1719  0007DE                     
  1720                           ;mainEmb.c: 151:                 tempIde = 10;
  1721  0007DE  0E00               	movlw	0
  1722  0007E0  6E37               	movwf	(_tempIde+1)^0,c
  1723  0007E2  0E0A               	movlw	10
  1724  0007E4  6E36               	movwf	_tempIde^0,c
  1725                           
  1726                           ;mainEmb.c: 152:                 break;
  1727  0007E6  EF36  F004         	goto	l2777
  1728  0007EA                     l2763:
  1729                           
  1730                           ;mainEmb.c: 154:                 lcdCommand(0x80);
  1731  0007EA  0E80               	movlw	128
  1732  0007EC  EC16  F010         	call	_lcdCommand
  1733  0007F0                     
  1734                           ;mainEmb.c: 155:                 lcdString("CABERNET I:  6 C");
  1735  0007F0  0E70               	movlw	low STR_11
  1736  0007F2  6E0F               	movwf	lcdString@msg^0,c
  1737  0007F4  0E06               	movlw	high STR_11
  1738  0007F6  6E10               	movwf	(lcdString@msg+1)^0,c
  1739  0007F8  EC62  F00E         	call	_lcdString	;wreg free
  1740  0007FC                     
  1741                           ;mainEmb.c: 156:                 lcdCommand(0xC0);
  1742  0007FC  0EC0               	movlw	192
  1743  0007FE  EC16  F010         	call	_lcdCommand
  1744                           
  1745                           ;mainEmb.c: 157:                 lcdString("QTD: 8 ");
  1746  000802  0EAB               	movlw	low STR_12
  1747  000804  6E0F               	movwf	lcdString@msg^0,c
  1748  000806  0E06               	movlw	high STR_12
  1749  000808  6E10               	movwf	(lcdString@msg+1)^0,c
  1750  00080A  EC62  F00E         	call	_lcdString	;wreg free
  1751  00080E                     
  1752                           ;mainEmb.c: 158:                 tempMax = 8;
  1753  00080E  0E08               	movlw	8
  1754  000810  6E32               	movwf	_tempMax^0,c
  1755  000812  0E00               	movlw	0
  1756  000814  6E33               	movwf	(_tempMax+1)^0,c
  1757  000816  0E00               	movlw	0
  1758  000818  6E34               	movwf	(_tempMax+2)^0,c
  1759  00081A  0E00               	movlw	0
  1760  00081C  6E35               	movwf	(_tempMax+3)^0,c
  1761  00081E                     
  1762                           ;mainEmb.c: 159:                 tempIde = 6;
  1763  00081E  0E00               	movlw	0
  1764  000820  6E37               	movwf	(_tempIde+1)^0,c
  1765  000822  0E06               	movlw	6
  1766  000824  6E36               	movwf	_tempIde^0,c
  1767                           
  1768                           ;mainEmb.c: 160:                 break;
  1769  000826  EF36  F004         	goto	l2777
  1770  00082A                     l2775:
  1771  00082A  503E               	movf	_op^0,w,c
  1772  00082C  6E23               	movwf	??_serialcom^0,c
  1773  00082E  6A24               	clrf	(??_serialcom+1)^0,c
  1774                           
  1775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1776                           ; Switch size 1, requested type "simple"
  1777                           ; Number of cases is 1, Range of values is 0 to 0
  1778                           ; switch strategies available:
  1779                           ; Name         Instructions Cycles
  1780                           ; simple_byte            4     3 (average)
  1781                           ;	Chosen strategy is simple_byte
  1782  000830  5024               	movf	(??_serialcom+1)^0,w,c
  1783  000832  0A00               	xorlw	0	; case 0
  1784  000834  B4D8               	btfsc	status,2,c
  1785  000836  EF1F  F004         	goto	l2983
  1786  00083A  EF36  F004         	goto	l2777
  1787  00083E                     l2983:
  1788                           
  1789                           ; Switch size 1, requested type "simple"
  1790                           ; Number of cases is 5, Range of values is 68 to 85
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte           16     9 (average)
  1794                           ;	Chosen strategy is simple_byte
  1795  00083E  5023               	movf	??_serialcom^0,w,c
  1796  000840  0A44               	xorlw	68	; case 68
  1797  000842  B4D8               	btfsc	status,2,c
  1798  000844  EFB5  F003         	goto	l2743
  1799  000848  0A08               	xorlw	8	; case 76
  1800  00084A  B4D8               	btfsc	status,2,c
  1801  00084C  EF95  F003         	goto	l2733
  1802  000850  0A1E               	xorlw	30	; case 82
  1803  000852  B4D8               	btfsc	status,2,c
  1804  000854  EFD5  F003         	goto	l2753
  1805  000858  0A01               	xorlw	1	; case 83
  1806  00085A  B4D8               	btfsc	status,2,c
  1807  00085C  EFF5  F003         	goto	l2763
  1808  000860  0A06               	xorlw	6	; case 85
  1809  000862  B4D8               	btfsc	status,2,c
  1810  000864  EF75  F003         	goto	l2721
  1811  000868  EF36  F004         	goto	l2777
  1812  00086C                     l2777:
  1813                           
  1814                           ;mainEmb.c: 166:     pot = adcRead(0);
  1815  00086C  0E00               	movlw	0
  1816  00086E  6E02               	movwf	(adcRead@channel+1)^0,c
  1817  000870  0E00               	movlw	0
  1818  000872  6E01               	movwf	adcRead@channel^0,c
  1819  000874  EC8D  F00E         	call	_adcRead	;wreg free
  1820  000878  C001  F046         	movff	?_adcRead,_pot
  1821  00087C  C002  F047         	movff	?_adcRead+1,_pot+1
  1822  000880  0E00               	movlw	0
  1823  000882  BE47               	btfsc	(_pot+1)^0,7,c
  1824  000884  0EFF               	movlw	-1
  1825  000886  6E48               	movwf	(_pot+2)^0,c
  1826  000888  6E49               	movwf	(_pot+3)^0,c
  1827  00088A                     
  1828                           ;mainEmb.c: 167:     serialSend('T');
  1829  00088A  0E54               	movlw	84
  1830  00088C  EC3D  F010         	call	_serialSend
  1831  000890                     
  1832                           ;mainEmb.c: 168:     serialSend(':');
  1833  000890  0E3A               	movlw	58
  1834  000892  EC3D  F010         	call	_serialSend
  1835  000896                     
  1836                           ;mainEmb.c: 169:     serialSend(' ');
  1837  000896  0E20               	movlw	32
  1838  000898  EC3D  F010         	call	_serialSend
  1839  00089C                     
  1840                           ;mainEmb.c: 170:     serialSend((((30*pot)/1023))/10 %10 + 48);
  1841  00089C  0EFF               	movlw	255
  1842  00089E  6E11               	movwf	___lldiv@divisor^0,c
  1843  0008A0  0E03               	movlw	3
  1844  0008A2  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1845  0008A4  0E00               	movlw	0
  1846  0008A6  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1847  0008A8  0E00               	movlw	0
  1848  0008AA  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1849  0008AC  C046  F001         	movff	_pot,___lmul@multiplier
  1850  0008B0  C047  F002         	movff	_pot+1,___lmul@multiplier+1
  1851  0008B4  C048  F003         	movff	_pot+2,___lmul@multiplier+2
  1852  0008B8  C049  F004         	movff	_pot+3,___lmul@multiplier+3
  1853  0008BC  0E1E               	movlw	30
  1854  0008BE  6E05               	movwf	___lmul@multiplicand^0,c
  1855  0008C0  0E00               	movlw	0
  1856  0008C2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1857  0008C4  0E00               	movlw	0
  1858  0008C6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1859  0008C8  0E00               	movlw	0
  1860  0008CA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1861  0008CC  ECA9  F00D         	call	___lmul	;wreg free
  1862  0008D0  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1863  0008D4  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1864  0008D8  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1865  0008DC  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1866  0008E0  EC50  F00C         	call	___lldiv	;wreg free
  1867  0008E4  C00D  F025         	movff	?___lldiv,_serialcom$1395
  1868  0008E8  C00E  F026         	movff	?___lldiv+1,_serialcom$1395+1
  1869  0008EC  C00F  F027         	movff	?___lldiv+2,_serialcom$1395+2
  1870  0008F0  C010  F028         	movff	?___lldiv+3,_serialcom$1395+3
  1871  0008F4                     
  1872                           ;mainEmb.c: 170:     serialSend((((30*pot)/1023))/10 %10 + 48);
  1873  0008F4  0E0A               	movlw	10
  1874  0008F6  6E11               	movwf	___lldiv@divisor^0,c
  1875  0008F8  0E00               	movlw	0
  1876  0008FA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1877  0008FC  0E00               	movlw	0
  1878  0008FE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1879  000900  0E00               	movlw	0
  1880  000902  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1881  000904  C025  F00D         	movff	_serialcom$1395,___lldiv@dividend
  1882  000908  C026  F00E         	movff	_serialcom$1395+1,___lldiv@dividend+1
  1883  00090C  C027  F00F         	movff	_serialcom$1395+2,___lldiv@dividend+2
  1884  000910  C028  F010         	movff	_serialcom$1395+3,___lldiv@dividend+3
  1885  000914  EC50  F00C         	call	___lldiv	;wreg free
  1886  000918  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1887  00091C  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1888  000920  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1889  000924  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1890  000928  0E0A               	movlw	10
  1891  00092A  6E1E               	movwf	___llmod@divisor^0,c
  1892  00092C  0E00               	movlw	0
  1893  00092E  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1894  000930  0E00               	movlw	0
  1895  000932  6E20               	movwf	(___llmod@divisor+2)^0,c
  1896  000934  0E00               	movlw	0
  1897  000936  6E21               	movwf	(___llmod@divisor+3)^0,c
  1898  000938  ECEC  F00C         	call	___llmod	;wreg free
  1899  00093C  501A               	movf	?___llmod^0,w,c
  1900  00093E  0F30               	addlw	48
  1901  000940  EC3D  F010         	call	_serialSend
  1902  000944                     
  1903                           ;mainEmb.c: 171:     serialSend((((30*pot)/1023)) %10 + 48);
  1904  000944  0EFF               	movlw	255
  1905  000946  6E11               	movwf	___lldiv@divisor^0,c
  1906  000948  0E03               	movlw	3
  1907  00094A  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1908  00094C  0E00               	movlw	0
  1909  00094E  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1910  000950  0E00               	movlw	0
  1911  000952  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1912  000954  C046  F001         	movff	_pot,___lmul@multiplier
  1913  000958  C047  F002         	movff	_pot+1,___lmul@multiplier+1
  1914  00095C  C048  F003         	movff	_pot+2,___lmul@multiplier+2
  1915  000960  C049  F004         	movff	_pot+3,___lmul@multiplier+3
  1916  000964  0E1E               	movlw	30
  1917  000966  6E05               	movwf	___lmul@multiplicand^0,c
  1918  000968  0E00               	movlw	0
  1919  00096A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1920  00096C  0E00               	movlw	0
  1921  00096E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1922  000970  0E00               	movlw	0
  1923  000972  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1924  000974  ECA9  F00D         	call	___lmul	;wreg free
  1925  000978  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1926  00097C  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1927  000980  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1928  000984  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1929  000988  EC50  F00C         	call	___lldiv	;wreg free
  1930  00098C  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1931  000990  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1932  000994  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1933  000998  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1934  00099C  0E0A               	movlw	10
  1935  00099E  6E1E               	movwf	___llmod@divisor^0,c
  1936  0009A0  0E00               	movlw	0
  1937  0009A2  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1938  0009A4  0E00               	movlw	0
  1939  0009A6  6E20               	movwf	(___llmod@divisor+2)^0,c
  1940  0009A8  0E00               	movlw	0
  1941  0009AA  6E21               	movwf	(___llmod@divisor+3)^0,c
  1942  0009AC  ECEC  F00C         	call	___llmod	;wreg free
  1943  0009B0  501A               	movf	?___llmod^0,w,c
  1944  0009B2  0F30               	addlw	48
  1945  0009B4  EC3D  F010         	call	_serialSend
  1946                           
  1947                           ;mainEmb.c: 172:     serialSend('\n');
  1948  0009B8  0E0A               	movlw	10
  1949  0009BA  EC3D  F010         	call	_serialSend
  1950  0009BE  0012               	return		;funcret
  1951  0009C0                     __end_of_serialcom:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _serialSend *****************
  1955 ;; Defined at:
  1956 ;;		line 25 in file "serial.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  c               1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  c               1    0[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1970 ;;      Params:         0       0       0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0
  1973 ;;      Totals:         1       0       0       0       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_serialcom
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text8
  1984  00207A                     __ptext8:
  1985                           	callstack 0
  1986  00207A                     _serialSend:
  1987                           	callstack 29
  1988                           
  1989                           ;incstack = 0
  1990                           ;serialSend@c stored from wreg
  1991  00207A  6E01               	movwf	serialSend@c^0,c
  1992  00207C                     l357:
  1993  00207C  A89E               	btfss	158,4,c	;volatile
  1994  00207E  EF43  F010         	goto	u2021
  1995  002082  EF45  F010         	goto	u2020
  1996  002086                     u2021:
  1997  002086  EF3E  F010         	goto	l357
  1998  00208A                     u2020:
  1999  00208A                     
  2000                           ;serial.c: 27:     TXREG = c;
  2001  00208A  C001  FFAD         	movff	serialSend@c,4013	;volatile
  2002  00208E  0012               	return		;funcret
  2003  002090                     __end_of_serialSend:
  2004                           	callstack 0
  2005                           
  2006 ;; *************** function _serialRead *****************
  2007 ;; Defined at:
  2008 ;;		line 30 in file "serial.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  resp            1    0[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      unsigned char 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2022 ;;      Params:         0       0       0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0
  2025 ;;      Totals:         1       0       0       0       0       0       0
  2026 ;;Total ram usage:        1 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_serialcom
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text9
  2036  001F1C                     __ptext9:
  2037                           	callstack 0
  2038  001F1C                     _serialRead:
  2039                           	callstack 29
  2040  001F1C                     
  2041                           ;serial.c: 31:     char resp = 0;
  2042  001F1C  0E00               	movlw	0
  2043  001F1E  6E01               	movwf	serialRead@resp^0,c
  2044  001F20                     
  2045                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  2046  001F20  A2AB               	btfss	171,1,c	;volatile
  2047  001F22  EF95  F00F         	goto	u2031
  2048  001F26  EF97  F00F         	goto	u2030
  2049  001F2A                     u2031:
  2050  001F2A  EF99  F00F         	goto	l2461
  2051  001F2E                     u2030:
  2052  001F2E                     
  2053                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  2054  001F2E  98AB               	bcf	171,4,c	;volatile
  2055                           
  2056                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  2057  001F30  88AB               	bsf	171,4,c	;volatile
  2058  001F32                     l2461:
  2059                           
  2060                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  2061  001F32  AA9E               	btfss	158,5,c	;volatile
  2062  001F34  EF9E  F00F         	goto	u2041
  2063  001F38  EFA0  F00F         	goto	u2040
  2064  001F3C                     u2041:
  2065  001F3C  EFA2  F00F         	goto	l2465
  2066  001F40                     u2040:
  2067  001F40                     
  2068                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  2069  001F40  CFAE F001          	movff	4014,serialRead@resp	;volatile
  2070  001F44                     l2465:
  2071                           
  2072                           ;serial.c: 43:     return resp;
  2073  001F44  5001               	movf	serialRead@resp^0,w,c
  2074  001F46  0012               	return		;funcret
  2075  001F48                     __end_of_serialRead:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _serialInit *****************
  2079 ;; Defined at:
  2080 ;;		line 48 in file "serial.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2094 ;;      Params:         0       0       0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text10
  2108  00204A                     __ptext10:
  2109                           	callstack 0
  2110  00204A                     _serialInit:
  2111                           	callstack 30
  2112  00204A                     
  2113                           ;serial.c: 49:     TXSTA = 0b00101100;
  2114  00204A  0E2C               	movlw	44
  2115  00204C  6EAC               	movwf	172,c	;volatile
  2116                           
  2117                           ;serial.c: 50:     RCSTA = 0b10010000;
  2118  00204E  0E90               	movlw	144
  2119  002050  6EAB               	movwf	171,c	;volatile
  2120                           
  2121                           ;serial.c: 51:     BAUDCON = 0b00001000;
  2122  002052  0E08               	movlw	8
  2123  002054  6EB8               	movwf	184,c	;volatile
  2124                           
  2125                           ;serial.c: 52:     SPBRGH = 0;
  2126  002056  0E00               	movlw	0
  2127  002058  6EB0               	movwf	176,c	;volatile
  2128                           
  2129                           ;serial.c: 53:     SPBRG = 34;
  2130  00205A  0E22               	movlw	34
  2131  00205C  6EAF               	movwf	175,c	;volatile
  2132  00205E                     
  2133                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  2134  00205E  8C94               	bsf	148,6,c	;volatile
  2135  002060                     
  2136                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  2137  002060  8E94               	bsf	148,7,c	;volatile
  2138  002062  0012               	return		;funcret
  2139  002064                     __end_of_serialInit:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _leTemperatura *****************
  2143 ;; Defined at:
  2144 ;;		line 30 in file "mainEmb.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  degree          4   34[COMRAM] unsigned long 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         0       0       0       0       0       0       0
  2159 ;;      Locals:         8       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0
  2161 ;;      Totals:         8       0       0       0       0       0       0
  2162 ;;Total ram usage:        8 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 6
  2165 ;; This function calls:
  2166 ;;		___lldiv
  2167 ;;		___llmod
  2168 ;;		___lmul
  2169 ;;		_adcRead
  2170 ;;		_lcdChar
  2171 ;;		_lcdPosition
  2172 ;;		_lcdString
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text11
  2179  001010                     __ptext11:
  2180                           	callstack 0
  2181  001010                     _leTemperatura:
  2182                           	callstack 24
  2183  001010                     
  2184                           ;mainEmb.c: 31:     unsigned long int degree;;mainEmb.c: 32:     pot = adcRead(0);
  2185  001010  0E00               	movlw	0
  2186  001012  6E02               	movwf	(adcRead@channel+1)^0,c
  2187  001014  0E00               	movlw	0
  2188  001016  6E01               	movwf	adcRead@channel^0,c
  2189  001018  EC8D  F00E         	call	_adcRead	;wreg free
  2190  00101C  C001  F046         	movff	?_adcRead,_pot
  2191  001020  C002  F047         	movff	?_adcRead+1,_pot+1
  2192  001024  0E00               	movlw	0
  2193  001026  BE47               	btfsc	(_pot+1)^0,7,c
  2194  001028  0EFF               	movlw	-1
  2195  00102A  6E48               	movwf	(_pot+2)^0,c
  2196  00102C  6E49               	movwf	(_pot+3)^0,c
  2197  00102E                     
  2198                           ;mainEmb.c: 33:     if(degree != pot){
  2199  00102E  5046               	movf	_pot^0,w,c
  2200  001030  1823               	xorwf	leTemperatura@degree^0,w,c
  2201  001032  E10F               	bnz	u2140
  2202  001034  5047               	movf	(_pot+1)^0,w,c
  2203  001036  1824               	xorwf	(leTemperatura@degree+1)^0,w,c
  2204  001038  E10C               	bnz	u2140
  2205  00103A  5048               	movf	(_pot+2)^0,w,c
  2206  00103C  1825               	xorwf	(leTemperatura@degree+2)^0,w,c
  2207  00103E  E109               	bnz	u2140
  2208  001040  5049               	movf	(_pot+3)^0,w,c
  2209  001042  1826               	xorwf	(leTemperatura@degree+3)^0,w,c
  2210  001044  B4D8               	btfsc	status,2,c
  2211  001046  EF27  F008         	goto	u2141
  2212  00104A  EF29  F008         	goto	u2140
  2213  00104E                     u2141:
  2214  00104E  EFD7  F008         	goto	l2649
  2215  001052                     u2140:
  2216  001052                     
  2217                           ;mainEmb.c: 35:         lcdPosition(1, 9);
  2218  001052  0E00               	movlw	0
  2219  001054  6E10               	movwf	(lcdPosition@line+1)^0,c
  2220  001056  0E01               	movlw	1
  2221  001058  6E0F               	movwf	lcdPosition@line^0,c
  2222  00105A  0E00               	movlw	0
  2223  00105C  6E12               	movwf	(lcdPosition@col+1)^0,c
  2224  00105E  0E09               	movlw	9
  2225  001060  6E11               	movwf	lcdPosition@col^0,c
  2226  001062  EC40  F00F         	call	_lcdPosition	;wreg free
  2227  001066                     
  2228                           ;mainEmb.c: 36:         lcdString("T: ");
  2229  001066  0ECB               	movlw	low STR_1
  2230  001068  6E0F               	movwf	lcdString@msg^0,c
  2231  00106A  0E06               	movlw	high STR_1
  2232  00106C  6E10               	movwf	(lcdString@msg+1)^0,c
  2233  00106E  EC62  F00E         	call	_lcdString	;wreg free
  2234  001072                     
  2235                           ;mainEmb.c: 37:         lcdChar((((30*pot)/1023))/10 %10 + 48);
  2236  001072  0EFF               	movlw	255
  2237  001074  6E11               	movwf	___lldiv@divisor^0,c
  2238  001076  0E03               	movlw	3
  2239  001078  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2240  00107A  0E00               	movlw	0
  2241  00107C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2242  00107E  0E00               	movlw	0
  2243  001080  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2244  001082  C046  F001         	movff	_pot,___lmul@multiplier
  2245  001086  C047  F002         	movff	_pot+1,___lmul@multiplier+1
  2246  00108A  C048  F003         	movff	_pot+2,___lmul@multiplier+2
  2247  00108E  C049  F004         	movff	_pot+3,___lmul@multiplier+3
  2248  001092  0E1E               	movlw	30
  2249  001094  6E05               	movwf	___lmul@multiplicand^0,c
  2250  001096  0E00               	movlw	0
  2251  001098  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2252  00109A  0E00               	movlw	0
  2253  00109C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2254  00109E  0E00               	movlw	0
  2255  0010A0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2256  0010A2  ECA9  F00D         	call	___lmul	;wreg free
  2257  0010A6  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2258  0010AA  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2259  0010AE  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2260  0010B2  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2261  0010B6  EC50  F00C         	call	___lldiv	;wreg free
  2262  0010BA  C00D  F027         	movff	?___lldiv,_leTemperatura$1394
  2263  0010BE  C00E  F028         	movff	?___lldiv+1,_leTemperatura$1394+1
  2264  0010C2  C00F  F029         	movff	?___lldiv+2,_leTemperatura$1394+2
  2265  0010C6  C010  F02A         	movff	?___lldiv+3,_leTemperatura$1394+3
  2266  0010CA                     
  2267                           ;mainEmb.c: 37:         lcdChar((((30*pot)/1023))/10 %10 + 48);
  2268  0010CA  0E0A               	movlw	10
  2269  0010CC  6E11               	movwf	___lldiv@divisor^0,c
  2270  0010CE  0E00               	movlw	0
  2271  0010D0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2272  0010D2  0E00               	movlw	0
  2273  0010D4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2274  0010D6  0E00               	movlw	0
  2275  0010D8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2276  0010DA  C027  F00D         	movff	_leTemperatura$1394,___lldiv@dividend
  2277  0010DE  C028  F00E         	movff	_leTemperatura$1394+1,___lldiv@dividend+1
  2278  0010E2  C029  F00F         	movff	_leTemperatura$1394+2,___lldiv@dividend+2
  2279  0010E6  C02A  F010         	movff	_leTemperatura$1394+3,___lldiv@dividend+3
  2280  0010EA  EC50  F00C         	call	___lldiv	;wreg free
  2281  0010EE  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  2282  0010F2  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  2283  0010F6  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  2284  0010FA  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  2285  0010FE  0E0A               	movlw	10
  2286  001100  6E1E               	movwf	___llmod@divisor^0,c
  2287  001102  0E00               	movlw	0
  2288  001104  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2289  001106  0E00               	movlw	0
  2290  001108  6E20               	movwf	(___llmod@divisor+2)^0,c
  2291  00110A  0E00               	movlw	0
  2292  00110C  6E21               	movwf	(___llmod@divisor+3)^0,c
  2293  00110E  ECEC  F00C         	call	___llmod	;wreg free
  2294  001112  501A               	movf	?___llmod^0,w,c
  2295  001114  0F30               	addlw	48
  2296  001116  EC07  F010         	call	_lcdChar
  2297  00111A                     
  2298                           ;mainEmb.c: 38:         lcdChar((((30*pot)/1023)) %10 + 48);
  2299  00111A  0EFF               	movlw	255
  2300  00111C  6E11               	movwf	___lldiv@divisor^0,c
  2301  00111E  0E03               	movlw	3
  2302  001120  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2303  001122  0E00               	movlw	0
  2304  001124  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2305  001126  0E00               	movlw	0
  2306  001128  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2307  00112A  C046  F001         	movff	_pot,___lmul@multiplier
  2308  00112E  C047  F002         	movff	_pot+1,___lmul@multiplier+1
  2309  001132  C048  F003         	movff	_pot+2,___lmul@multiplier+2
  2310  001136  C049  F004         	movff	_pot+3,___lmul@multiplier+3
  2311  00113A  0E1E               	movlw	30
  2312  00113C  6E05               	movwf	___lmul@multiplicand^0,c
  2313  00113E  0E00               	movlw	0
  2314  001140  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2315  001142  0E00               	movlw	0
  2316  001144  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2317  001146  0E00               	movlw	0
  2318  001148  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2319  00114A  ECA9  F00D         	call	___lmul	;wreg free
  2320  00114E  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2321  001152  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2322  001156  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2323  00115A  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2324  00115E  EC50  F00C         	call	___lldiv	;wreg free
  2325  001162  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  2326  001166  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  2327  00116A  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  2328  00116E  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  2329  001172  0E0A               	movlw	10
  2330  001174  6E1E               	movwf	___llmod@divisor^0,c
  2331  001176  0E00               	movlw	0
  2332  001178  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2333  00117A  0E00               	movlw	0
  2334  00117C  6E20               	movwf	(___llmod@divisor+2)^0,c
  2335  00117E  0E00               	movlw	0
  2336  001180  6E21               	movwf	(___llmod@divisor+3)^0,c
  2337  001182  ECEC  F00C         	call	___llmod	;wreg free
  2338  001186  501A               	movf	?___llmod^0,w,c
  2339  001188  0F30               	addlw	48
  2340  00118A  EC07  F010         	call	_lcdChar
  2341  00118E                     
  2342                           ;mainEmb.c: 39:         lcdPosition(1,15);
  2343  00118E  0E00               	movlw	0
  2344  001190  6E10               	movwf	(lcdPosition@line+1)^0,c
  2345  001192  0E01               	movlw	1
  2346  001194  6E0F               	movwf	lcdPosition@line^0,c
  2347  001196  0E00               	movlw	0
  2348  001198  6E12               	movwf	(lcdPosition@col+1)^0,c
  2349  00119A  0E0F               	movlw	15
  2350  00119C  6E11               	movwf	lcdPosition@col^0,c
  2351  00119E  EC40  F00F         	call	_lcdPosition	;wreg free
  2352  0011A2                     
  2353                           ;mainEmb.c: 40:         lcdString("C");
  2354  0011A2  0E5D               	movlw	low (STR_9+15)
  2355  0011A4  6E0F               	movwf	lcdString@msg^0,c
  2356  0011A6  0E06               	movlw	high (STR_9+15)
  2357  0011A8  6E10               	movwf	(lcdString@msg+1)^0,c
  2358  0011AA  EC62  F00E         	call	_lcdString	;wreg free
  2359  0011AE                     l2649:
  2360  0011AE  0012               	return		;funcret
  2361  0011B0                     __end_of_leTemperatura:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _lcdPosition *****************
  2365 ;; Defined at:
  2366 ;;		line 44 in file "lcd.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  line            2   14[COMRAM] int 
  2369 ;;  col             2   16[COMRAM] int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2381 ;;      Params:         4       0       0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0
  2384 ;;      Totals:         4       0       0       0       0       0       0
  2385 ;;Total ram usage:        4 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 5
  2388 ;; This function calls:
  2389 ;;		_lcdCommand
  2390 ;; This function is called by:
  2391 ;;		_leTemperatura
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text12
  2396  001E80                     __ptext12:
  2397                           	callstack 0
  2398  001E80                     _lcdPosition:
  2399                           	callstack 24
  2400  001E80                     
  2401                           ;lcd.c: 45:  if (line == 0) {
  2402  001E80  500F               	movf	lcdPosition@line^0,w,c
  2403  001E82  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2404  001E84  A4D8               	btfss	status,2,c
  2405  001E86  EF47  F00F         	goto	u1991
  2406  001E8A  EF49  F00F         	goto	u1990
  2407  001E8E                     u1991:
  2408  001E8E  EF4E  F00F         	goto	l2439
  2409  001E92                     u1990:
  2410  001E92                     
  2411                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2412  001E92  5011               	movf	lcdPosition@col^0,w,c
  2413  001E94  0B0F               	andlw	15
  2414  001E96  0F80               	addlw	128
  2415  001E98  EC16  F010         	call	_lcdCommand
  2416  001E9C                     l2439:
  2417                           
  2418                           ;lcd.c: 48:  if (line == 1) {
  2419  001E9C  040F               	decf	lcdPosition@line^0,w,c
  2420  001E9E  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2421  001EA0  A4D8               	btfss	status,2,c
  2422  001EA2  EF55  F00F         	goto	u2001
  2423  001EA6  EF57  F00F         	goto	u2000
  2424  001EAA                     u2001:
  2425  001EAA  EF5C  F00F         	goto	l271
  2426  001EAE                     u2000:
  2427  001EAE                     
  2428                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2429  001EAE  5011               	movf	lcdPosition@col^0,w,c
  2430  001EB0  0B0F               	andlw	15
  2431  001EB2  0FC0               	addlw	192
  2432  001EB4  EC16  F010         	call	_lcdCommand
  2433  001EB8                     l271:
  2434  001EB8  0012               	return		;funcret
  2435  001EBA                     __end_of_lcdPosition:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _adcRead *****************
  2439 ;; Defined at:
  2440 ;;		line 38 in file "adc.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  channel         2    0[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  ADvalor         2    2[COMRAM] unsigned int 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  2    0[COMRAM] int 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2454 ;;      Params:         2       0       0       0       0       0       0
  2455 ;;      Locals:         2       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0
  2457 ;;      Totals:         4       0       0       0       0       0       0
  2458 ;;Total ram usage:        4 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_leTemperatura
  2464 ;;		_serialcom
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text13
  2469  001D1A                     __ptext13:
  2470                           	callstack 0
  2471  001D1A                     _adcRead:
  2472                           	callstack 29
  2473  001D1A                     
  2474                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  2475  001D1A  0EC3               	movlw	195
  2476  001D1C  16C2               	andwf	194,f,c	;volatile
  2477                           
  2478                           ;adc.c: 41:     if (channel < 3) {
  2479  001D1E  5002               	movf	(adcRead@channel+1)^0,w,c
  2480  001D20  E107               	bnz	u1851
  2481  001D22  0E03               	movlw	3
  2482  001D24  5C01               	subwf	adcRead@channel^0,w,c
  2483  001D26  B0D8               	btfsc	status,0,c
  2484  001D28  EF98  F00E         	goto	u1851
  2485  001D2C  EF9A  F00E         	goto	u1850
  2486  001D30                     u1851:
  2487  001D30  EF9E  F00E         	goto	l2379
  2488  001D34                     u1850:
  2489  001D34                     
  2490                           ;adc.c: 42:         ADCON0 |= channel << 2;
  2491  001D34  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  2492  001D36  46E8               	rlncf	wreg,f,c
  2493  001D38  0BFC               	andlw	252
  2494  001D3A  12C2               	iorwf	194,f,c	;volatile
  2495  001D3C                     l2379:
  2496                           
  2497                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  2498  001D3C  82C2               	bsf	194,1,c	;volatile
  2499  001D3E                     l19:
  2500  001D3E  B2C2               	btfsc	194,1,c	;volatile
  2501  001D40  EFA4  F00E         	goto	u1861
  2502  001D44  EFA6  F00E         	goto	u1860
  2503  001D48                     u1861:
  2504  001D48  EF9F  F00E         	goto	l19
  2505  001D4C                     u1860:
  2506  001D4C                     
  2507                           ;adc.c: 49:     ADvalor = ADRESH;
  2508  001D4C  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  2509  001D50  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  2510  001D52                     
  2511                           ;adc.c: 50:     ADvalor <<= 8;
  2512  001D52  5003               	movf	adcRead@ADvalor^0,w,c
  2513  001D54  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  2514  001D56  6A03               	clrf	adcRead@ADvalor^0,c
  2515  001D58                     
  2516                           ;adc.c: 51:     ADvalor += ADRESL;
  2517  001D58  50C3               	movf	195,w,c	;volatile
  2518  001D5A  2603               	addwf	adcRead@ADvalor^0,f,c
  2519  001D5C  0E00               	movlw	0
  2520  001D5E  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2521  001D60                     
  2522                           ;adc.c: 52:     return ADvalor;
  2523  001D60  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  2524  001D64  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  2525  001D68  0012               	return		;funcret
  2526  001D6A                     __end_of_adcRead:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _leTeclado *****************
  2530 ;; Defined at:
  2531 ;;		line 64 in file "mainEmb.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  tecla           1   22[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2545 ;;      Params:         0       0       0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0       0       0
  2547 ;;      Temps:          2       0       0       0       0       0       0
  2548 ;;      Totals:         3       0       0       0       0       0       0
  2549 ;;Total ram usage:        3 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 6
  2552 ;; This function calls:
  2553 ;;		_kpDebounce
  2554 ;;		_kpRead
  2555 ;;		_kpReadKey
  2556 ;;		_lcdCommand
  2557 ;;		_lcdString
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text14
  2564  000E5C                     __ptext14:
  2565                           	callstack 0
  2566  000E5C                     _leTeclado:
  2567                           	callstack 24
  2568  000E5C                     
  2569                           ;mainEmb.c: 65:     unsigned char tecla;;mainEmb.c: 66:     kpDebounce();
  2570  000E5C  ECE6  F00A         	call	_kpDebounce	;wreg free
  2571                           
  2572                           ;mainEmb.c: 67:     if (kpRead() != tecla) {
  2573  000E60  5017               	movf	leTeclado@tecla^0,w,c
  2574  000E62  6E15               	movwf	??_leTeclado^0,c
  2575  000E64  6A16               	clrf	(??_leTeclado+1)^0,c
  2576  000E66  EC50  F010         	call	_kpRead	;wreg free
  2577  000E6A  5015               	movf	??_leTeclado^0,w,c
  2578  000E6C  1801               	xorwf	?_kpRead^0,w,c
  2579  000E6E  E109               	bnz	u2150
  2580  000E70  5016               	movf	(??_leTeclado+1)^0,w,c
  2581  000E72  1802               	xorwf	(?_kpRead+1)^0,w,c
  2582  000E74  B4D8               	btfsc	status,2,c
  2583  000E76  EF3F  F007         	goto	u2151
  2584  000E7A  EF41  F007         	goto	u2150
  2585  000E7E                     u2151:
  2586  000E7E  EF07  F008         	goto	l523
  2587  000E82                     u2150:
  2588  000E82  EC50  F010         	call	_kpRead	;wreg free
  2589                           
  2590                           ;mainEmb.c: 69:         switch (kpReadKey()) {
  2591  000E86  EFE5  F007         	goto	l2707
  2592  000E8A                     l2655:
  2593                           
  2594                           ;mainEmb.c: 71:                 lcdCommand(0x80);
  2595  000E8A  0E80               	movlw	128
  2596  000E8C  EC16  F010         	call	_lcdCommand
  2597  000E90                     
  2598                           ;mainEmb.c: 72:                 lcdString("MALBEC   I: 12 C");
  2599  000E90  0E5F               	movlw	low STR_3
  2600  000E92  6E0F               	movwf	lcdString@msg^0,c
  2601  000E94  0E06               	movlw	high STR_3
  2602  000E96  6E10               	movwf	(lcdString@msg+1)^0,c
  2603  000E98  EC62  F00E         	call	_lcdString	;wreg free
  2604  000E9C                     
  2605                           ;mainEmb.c: 73:                 lcdCommand(0xC0);
  2606  000E9C  0EC0               	movlw	192
  2607  000E9E  EC16  F010         	call	_lcdCommand
  2608                           
  2609                           ;mainEmb.c: 74:                 lcdString("QTD: 12");
  2610  000EA2  0EB3               	movlw	low STR_4
  2611  000EA4  6E0F               	movwf	lcdString@msg^0,c
  2612  000EA6  0E06               	movlw	high STR_4
  2613  000EA8  6E10               	movwf	(lcdString@msg+1)^0,c
  2614  000EAA  EC62  F00E         	call	_lcdString	;wreg free
  2615  000EAE                     
  2616                           ;mainEmb.c: 75:                 tempMax = 24;
  2617  000EAE  0E18               	movlw	24
  2618  000EB0  6E32               	movwf	_tempMax^0,c
  2619  000EB2  0E00               	movlw	0
  2620  000EB4  6E33               	movwf	(_tempMax+1)^0,c
  2621  000EB6  0E00               	movlw	0
  2622  000EB8  6E34               	movwf	(_tempMax+2)^0,c
  2623  000EBA  0E00               	movlw	0
  2624  000EBC  6E35               	movwf	(_tempMax+3)^0,c
  2625  000EBE                     
  2626                           ;mainEmb.c: 76:                 tempIde = 12;
  2627  000EBE  0E00               	movlw	0
  2628  000EC0  6E37               	movwf	(_tempIde+1)^0,c
  2629  000EC2  0E0C               	movlw	12
  2630  000EC4  6E36               	movwf	_tempIde^0,c
  2631                           
  2632                           ;mainEmb.c: 77:                 break;
  2633  000EC6  EF07  F008         	goto	l523
  2634  000ECA                     l2665:
  2635                           
  2636                           ;mainEmb.c: 79:                 lcdCommand(0x80);
  2637  000ECA  0E80               	movlw	128
  2638  000ECC  EC16  F010         	call	_lcdCommand
  2639  000ED0                     
  2640                           ;mainEmb.c: 80:                 lcdString("MERLOT   I:  9 C");
  2641  000ED0  0E81               	movlw	low STR_5
  2642  000ED2  6E0F               	movwf	lcdString@msg^0,c
  2643  000ED4  0E06               	movlw	high STR_5
  2644  000ED6  6E10               	movwf	(lcdString@msg+1)^0,c
  2645  000ED8  EC62  F00E         	call	_lcdString	;wreg free
  2646  000EDC                     
  2647                           ;mainEmb.c: 81:                 lcdCommand(0xC0);
  2648  000EDC  0EC0               	movlw	192
  2649  000EDE  EC16  F010         	call	_lcdCommand
  2650                           
  2651                           ;mainEmb.c: 82:                 lcdString("QTD: 19");
  2652  000EE2  0EC3               	movlw	low STR_6
  2653  000EE4  6E0F               	movwf	lcdString@msg^0,c
  2654  000EE6  0E06               	movlw	high STR_6
  2655  000EE8  6E10               	movwf	(lcdString@msg+1)^0,c
  2656  000EEA  EC62  F00E         	call	_lcdString	;wreg free
  2657  000EEE                     
  2658                           ;mainEmb.c: 83:                 tempMax = 22;
  2659  000EEE  0E16               	movlw	22
  2660  000EF0  6E32               	movwf	_tempMax^0,c
  2661  000EF2  0E00               	movlw	0
  2662  000EF4  6E33               	movwf	(_tempMax+1)^0,c
  2663  000EF6  0E00               	movlw	0
  2664  000EF8  6E34               	movwf	(_tempMax+2)^0,c
  2665  000EFA  0E00               	movlw	0
  2666  000EFC  6E35               	movwf	(_tempMax+3)^0,c
  2667  000EFE                     
  2668                           ;mainEmb.c: 84:                 tempIde = 9;
  2669  000EFE  0E00               	movlw	0
  2670  000F00  6E37               	movwf	(_tempIde+1)^0,c
  2671  000F02  0E09               	movlw	9
  2672  000F04  6E36               	movwf	_tempIde^0,c
  2673                           
  2674                           ;mainEmb.c: 85:                 break;
  2675  000F06  EF07  F008         	goto	l523
  2676  000F0A                     l2675:
  2677                           
  2678                           ;mainEmb.c: 87:                 lcdCommand(0x80);
  2679  000F0A  0E80               	movlw	128
  2680  000F0C  EC16  F010         	call	_lcdCommand
  2681  000F10                     
  2682                           ;mainEmb.c: 88:                 lcdString("RIESLING I:  9 C");
  2683  000F10  0E92               	movlw	low STR_7
  2684  000F12  6E0F               	movwf	lcdString@msg^0,c
  2685  000F14  0E06               	movlw	high STR_7
  2686  000F16  6E10               	movwf	(lcdString@msg+1)^0,c
  2687  000F18  EC62  F00E         	call	_lcdString	;wreg free
  2688  000F1C                     
  2689                           ;mainEmb.c: 89:                 lcdCommand(0xC0);
  2690  000F1C  0EC0               	movlw	192
  2691  000F1E  EC16  F010         	call	_lcdCommand
  2692                           
  2693                           ;mainEmb.c: 90:                 lcdString("QTD: 5 ");
  2694  000F22  0EA3               	movlw	low STR_8
  2695  000F24  6E0F               	movwf	lcdString@msg^0,c
  2696  000F26  0E06               	movlw	high STR_8
  2697  000F28  6E10               	movwf	(lcdString@msg+1)^0,c
  2698  000F2A  EC62  F00E         	call	_lcdString	;wreg free
  2699  000F2E                     
  2700                           ;mainEmb.c: 91:                 tempMax = 9;
  2701  000F2E  0E09               	movlw	9
  2702  000F30  6E32               	movwf	_tempMax^0,c
  2703  000F32  0E00               	movlw	0
  2704  000F34  6E33               	movwf	(_tempMax+1)^0,c
  2705  000F36  0E00               	movlw	0
  2706  000F38  6E34               	movwf	(_tempMax+2)^0,c
  2707  000F3A  0E00               	movlw	0
  2708  000F3C  6E35               	movwf	(_tempMax+3)^0,c
  2709  000F3E                     
  2710                           ;mainEmb.c: 92:                 tempIde = 7;
  2711  000F3E  0E00               	movlw	0
  2712  000F40  6E37               	movwf	(_tempIde+1)^0,c
  2713  000F42  0E07               	movlw	7
  2714  000F44  6E36               	movwf	_tempIde^0,c
  2715                           
  2716                           ;mainEmb.c: 93:                 break;
  2717  000F46  EF07  F008         	goto	l523
  2718  000F4A                     l2685:
  2719                           
  2720                           ;mainEmb.c: 95:                 lcdCommand(0x80);
  2721  000F4A  0E80               	movlw	128
  2722  000F4C  EC16  F010         	call	_lcdCommand
  2723  000F50                     
  2724                           ;mainEmb.c: 96:                 lcdString("ROSE     I: 10 C");
  2725  000F50  0E4E               	movlw	low STR_9
  2726  000F52  6E0F               	movwf	lcdString@msg^0,c
  2727  000F54  0E06               	movlw	high STR_9
  2728  000F56  6E10               	movwf	(lcdString@msg+1)^0,c
  2729  000F58  EC62  F00E         	call	_lcdString	;wreg free
  2730  000F5C                     
  2731                           ;mainEmb.c: 97:                 lcdCommand(0xC0);
  2732  000F5C  0EC0               	movlw	192
  2733  000F5E  EC16  F010         	call	_lcdCommand
  2734                           
  2735                           ;mainEmb.c: 98:                 lcdString("QTD: 14");
  2736  000F62  0EBB               	movlw	low STR_10
  2737  000F64  6E0F               	movwf	lcdString@msg^0,c
  2738  000F66  0E06               	movlw	high STR_10
  2739  000F68  6E10               	movwf	(lcdString@msg+1)^0,c
  2740  000F6A  EC62  F00E         	call	_lcdString	;wreg free
  2741  000F6E                     
  2742                           ;mainEmb.c: 99:                 tempMax = 21;
  2743  000F6E  0E15               	movlw	21
  2744  000F70  6E32               	movwf	_tempMax^0,c
  2745  000F72  0E00               	movlw	0
  2746  000F74  6E33               	movwf	(_tempMax+1)^0,c
  2747  000F76  0E00               	movlw	0
  2748  000F78  6E34               	movwf	(_tempMax+2)^0,c
  2749  000F7A  0E00               	movlw	0
  2750  000F7C  6E35               	movwf	(_tempMax+3)^0,c
  2751  000F7E                     
  2752                           ;mainEmb.c: 100:                 tempIde = 10;
  2753  000F7E  0E00               	movlw	0
  2754  000F80  6E37               	movwf	(_tempIde+1)^0,c
  2755  000F82  0E0A               	movlw	10
  2756  000F84  6E36               	movwf	_tempIde^0,c
  2757                           
  2758                           ;mainEmb.c: 101:                 break;
  2759  000F86  EF07  F008         	goto	l523
  2760  000F8A                     l2695:
  2761                           
  2762                           ;mainEmb.c: 103:                 lcdCommand(0x80);
  2763  000F8A  0E80               	movlw	128
  2764  000F8C  EC16  F010         	call	_lcdCommand
  2765  000F90                     
  2766                           ;mainEmb.c: 104:                 lcdString("CABERNET I:  6 C");
  2767  000F90  0E70               	movlw	low STR_11
  2768  000F92  6E0F               	movwf	lcdString@msg^0,c
  2769  000F94  0E06               	movlw	high STR_11
  2770  000F96  6E10               	movwf	(lcdString@msg+1)^0,c
  2771  000F98  EC62  F00E         	call	_lcdString	;wreg free
  2772  000F9C                     
  2773                           ;mainEmb.c: 105:                 lcdCommand(0xC0);
  2774  000F9C  0EC0               	movlw	192
  2775  000F9E  EC16  F010         	call	_lcdCommand
  2776                           
  2777                           ;mainEmb.c: 106:                 lcdString("QTD: 8 ");
  2778  000FA2  0EAB               	movlw	low STR_12
  2779  000FA4  6E0F               	movwf	lcdString@msg^0,c
  2780  000FA6  0E06               	movlw	high STR_12
  2781  000FA8  6E10               	movwf	(lcdString@msg+1)^0,c
  2782  000FAA  EC62  F00E         	call	_lcdString	;wreg free
  2783  000FAE                     
  2784                           ;mainEmb.c: 107:                 tempMax = 8;
  2785  000FAE  0E08               	movlw	8
  2786  000FB0  6E32               	movwf	_tempMax^0,c
  2787  000FB2  0E00               	movlw	0
  2788  000FB4  6E33               	movwf	(_tempMax+1)^0,c
  2789  000FB6  0E00               	movlw	0
  2790  000FB8  6E34               	movwf	(_tempMax+2)^0,c
  2791  000FBA  0E00               	movlw	0
  2792  000FBC  6E35               	movwf	(_tempMax+3)^0,c
  2793  000FBE                     
  2794                           ;mainEmb.c: 108:                 tempIde = 6;
  2795  000FBE  0E00               	movlw	0
  2796  000FC0  6E37               	movwf	(_tempIde+1)^0,c
  2797  000FC2  0E06               	movlw	6
  2798  000FC4  6E36               	movwf	_tempIde^0,c
  2799                           
  2800                           ;mainEmb.c: 109:                 break;
  2801  000FC6  EF07  F008         	goto	l523
  2802  000FCA                     l2707:
  2803  000FCA  EC6D  F00D         	call	_kpReadKey	;wreg free
  2804  000FCE  6E15               	movwf	??_leTeclado^0,c
  2805  000FD0  6A16               	clrf	(??_leTeclado+1)^0,c
  2806                           
  2807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2808                           ; Switch size 1, requested type "simple"
  2809                           ; Number of cases is 1, Range of values is 0 to 0
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; simple_byte            4     3 (average)
  2813                           ;	Chosen strategy is simple_byte
  2814  000FD2  5016               	movf	(??_leTeclado+1)^0,w,c
  2815  000FD4  0A00               	xorlw	0	; case 0
  2816  000FD6  B4D8               	btfsc	status,2,c
  2817  000FD8  EFF0  F007         	goto	l2985
  2818  000FDC  EF07  F008         	goto	l523
  2819  000FE0                     l2985:
  2820                           
  2821                           ; Switch size 1, requested type "simple"
  2822                           ; Number of cases is 5, Range of values is 68 to 85
  2823                           ; switch strategies available:
  2824                           ; Name         Instructions Cycles
  2825                           ; simple_byte           16     9 (average)
  2826                           ;	Chosen strategy is simple_byte
  2827  000FE0  5015               	movf	??_leTeclado^0,w,c
  2828  000FE2  0A44               	xorlw	68	; case 68
  2829  000FE4  B4D8               	btfsc	status,2,c
  2830  000FE6  EF85  F007         	goto	l2675
  2831  000FEA  0A08               	xorlw	8	; case 76
  2832  000FEC  B4D8               	btfsc	status,2,c
  2833  000FEE  EF65  F007         	goto	l2665
  2834  000FF2  0A1E               	xorlw	30	; case 82
  2835  000FF4  B4D8               	btfsc	status,2,c
  2836  000FF6  EFA5  F007         	goto	l2685
  2837  000FFA  0A01               	xorlw	1	; case 83
  2838  000FFC  B4D8               	btfsc	status,2,c
  2839  000FFE  EFC5  F007         	goto	l2695
  2840  001002  0A06               	xorlw	6	; case 85
  2841  001004  B4D8               	btfsc	status,2,c
  2842  001006  EF45  F007         	goto	l2655
  2843  00100A  EF07  F008         	goto	l523
  2844  00100E                     l523:
  2845  00100E  0012               	return		;funcret
  2846  001010                     __end_of_leTeclado:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _lcdString *****************
  2850 ;; Defined at:
  2851 ;;		line 57 in file "lcd.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2854 ;;		 -> STR_25(17), STR_24(17), STR_23(17), STR_22(8), 
  2855 ;;		 -> STR_21(17), STR_20(8), STR_19(17), STR_18(8), 
  2856 ;;		 -> STR_17(17), STR_16(8), STR_15(17), STR_14(8), 
  2857 ;;		 -> STR_13(17), STR_12(8), STR_11(17), STR_10(8), 
  2858 ;;		 -> STR_9(17), STR_8(8), STR_7(17), STR_6(8), 
  2859 ;;		 -> STR_5(17), STR_4(8), STR_3(17), STR_2(2), 
  2860 ;;		 -> STR_1(4), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2   18[COMRAM] int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2872 ;;      Params:         2       0       0       0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0       0       0
  2874 ;;      Temps:          2       0       0       0       0       0       0
  2875 ;;      Totals:         6       0       0       0       0       0       0
  2876 ;;Total ram usage:        6 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 5
  2879 ;; This function calls:
  2880 ;;		_lcdChar
  2881 ;; This function is called by:
  2882 ;;		_leTemperatura
  2883 ;;		_leTeclado
  2884 ;;		_serialcom
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text15
  2890  001CC4                     __ptext15:
  2891                           	callstack 0
  2892  001CC4                     _lcdString:
  2893                           	callstack 24
  2894  001CC4                     
  2895                           ;lcd.c: 58:  int i = 0;
  2896  001CC4  0E00               	movlw	0
  2897  001CC6  6E14               	movwf	(lcdString@i+1)^0,c
  2898  001CC8  0E00               	movlw	0
  2899  001CCA  6E13               	movwf	lcdString@i^0,c
  2900                           
  2901                           ;lcd.c: 59:  while (msg[i] != 0) {
  2902  001CCC  EF78  F00E         	goto	l2449
  2903  001CD0                     l2445:
  2904                           
  2905                           ;lcd.c: 60:   lcdChar(msg[i]);
  2906  001CD0  5013               	movf	lcdString@i^0,w,c
  2907  001CD2  240F               	addwf	lcdString@msg^0,w,c
  2908  001CD4  6E11               	movwf	??_lcdString^0,c
  2909  001CD6  5014               	movf	(lcdString@i+1)^0,w,c
  2910  001CD8  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2911  001CDA  6E12               	movwf	(??_lcdString+1)^0,c
  2912  001CDC  C011  FFF6         	movff	??_lcdString,tblptrl
  2913  001CE0  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2914  001CE4                     	if	0	;tblptru may be non-zero
  2915  001CE4                     	endif
  2916  001CE4                     	if	0	;tblptru may be non-zero
  2917  001CE4                     	endif
  2918  001CE4  0008               	tblrd		*
  2919  001CE6  50F5               	movf	tablat,w,c
  2920  001CE8  EC07  F010         	call	_lcdChar
  2921  001CEC                     
  2922                           ;lcd.c: 61:   i++;
  2923  001CEC  4A13               	infsnz	lcdString@i^0,f,c
  2924  001CEE  2A14               	incf	(lcdString@i+1)^0,f,c
  2925  001CF0                     l2449:
  2926                           
  2927                           ;lcd.c: 59:  while (msg[i] != 0) {
  2928  001CF0  5013               	movf	lcdString@i^0,w,c
  2929  001CF2  240F               	addwf	lcdString@msg^0,w,c
  2930  001CF4  6E11               	movwf	??_lcdString^0,c
  2931  001CF6  5014               	movf	(lcdString@i+1)^0,w,c
  2932  001CF8  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2933  001CFA  6E12               	movwf	(??_lcdString+1)^0,c
  2934  001CFC  C011  FFF6         	movff	??_lcdString,tblptrl
  2935  001D00  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2936  001D04                     	if	0	;tblptru may be non-zero
  2937  001D04                     	endif
  2938  001D04                     	if	0	;tblptru may be non-zero
  2939  001D04                     	endif
  2940  001D04  0008               	tblrd		*
  2941  001D06  50F5               	movf	tablat,w,c
  2942  001D08  0900               	iorlw	0
  2943  001D0A  A4D8               	btfss	status,2,c
  2944  001D0C  EF8A  F00E         	goto	u2011
  2945  001D10  EF8C  F00E         	goto	u2010
  2946  001D14                     u2011:
  2947  001D14  EF68  F00E         	goto	l2445
  2948  001D18                     u2010:
  2949  001D18  0012               	return		;funcret
  2950  001D1A                     __end_of_lcdString:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _lcdChar *****************
  2954 ;; Defined at:
  2955 ;;		line 52 in file "lcd.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  value           1    wreg     unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  value           1   13[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       0       0       0       0       0       0
  2970 ;;      Locals:         1       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0
  2972 ;;      Totals:         1       0       0       0       0       0       0
  2973 ;;Total ram usage:        1 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 4
  2976 ;; This function calls:
  2977 ;;		_delayMicro
  2978 ;;		_pushByte
  2979 ;; This function is called by:
  2980 ;;		_lcdString
  2981 ;;		_leTemperatura
  2982 ;;		_lcdNumber
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text16
  2987  00200E                     __ptext16:
  2988                           	callstack 0
  2989  00200E                     _lcdChar:
  2990                           	callstack 24
  2991                           
  2992                           ;incstack = 0
  2993                           ;lcdChar@value stored from wreg
  2994  00200E  6E0E               	movwf	lcdChar@value^0,c
  2995  002010                     
  2996                           ;lcd.c: 53:  pushByte(value, 1);
  2997  002010  0E00               	movlw	0
  2998  002012  6E0B               	movwf	(pushByte@rs+1)^0,c
  2999  002014  0E01               	movlw	1
  3000  002016  6E0A               	movwf	pushByte@rs^0,c
  3001  002018  500E               	movf	lcdChar@value^0,w,c
  3002  00201A  ECDE  F00D         	call	_pushByte
  3003  00201E                     
  3004                           ;lcd.c: 54:  delayMicro(80);
  3005  00201E  0E00               	movlw	0
  3006  002020  6E02               	movwf	(delayMicro@a+1)^0,c
  3007  002022  0E50               	movlw	80
  3008  002024  6E01               	movwf	delayMicro@a^0,c
  3009  002026  EC59  F010         	call	_delayMicro	;wreg free
  3010  00202A  0012               	return		;funcret
  3011  00202C                     __end_of_lcdChar:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _kpReadKey *****************
  3015 ;; Defined at:
  3016 ;;		line 17 in file "keypad.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               2    3[COMRAM] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3030 ;;      Params:         0       0       0       0       0       0       0
  3031 ;;      Locals:         2       0       0       0       0       0       0
  3032 ;;      Temps:          3       0       0       0       0       0       0
  3033 ;;      Totals:         5       0       0       0       0       0       0
  3034 ;;Total ram usage:        5 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_leTeclado
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text17
  3044  001ADA                     __ptext17:
  3045                           	callstack 0
  3046  001ADA                     _kpReadKey:
  3047                           	callstack 29
  3048  001ADA                     
  3049                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3050  001ADA  0E00               	movlw	0
  3051  001ADC  6E05               	movwf	(kpReadKey@i+1)^0,c
  3052  001ADE  0E00               	movlw	0
  3053  001AE0  6E04               	movwf	kpReadKey@i^0,c
  3054  001AE2                     l1491:
  3055                           
  3056                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3057  001AE2  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  3058  001AE6  0E01               	movlw	1
  3059  001AE8  6E02               	movwf	(??_kpReadKey+1)^0,c
  3060  001AEA  0E00               	movlw	0
  3061  001AEC  6E03               	movwf	(??_kpReadKey+2)^0,c
  3062  001AEE  2A01               	incf	??_kpReadKey^0,f,c
  3063  001AF0  EF7D  F00D         	goto	u694
  3064  001AF4                     u695:
  3065  001AF4  90D8               	bcf	status,0,c
  3066  001AF6  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  3067  001AF8  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  3068  001AFA                     u694:
  3069  001AFA  2E01               	decfsz	??_kpReadKey^0,f,c
  3070  001AFC  EF7A  F00D         	goto	u695
  3071  001B00  503C               	movf	_keys^0,w,c
  3072  001B02  1602               	andwf	(??_kpReadKey+1)^0,f,c
  3073  001B04  503D               	movf	(_keys+1)^0,w,c
  3074  001B06  1603               	andwf	(??_kpReadKey+2)^0,f,c
  3075  001B08  5002               	movf	(??_kpReadKey+1)^0,w,c
  3076  001B0A  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  3077  001B0C  B4D8               	btfsc	status,2,c
  3078  001B0E  EF8B  F00D         	goto	u701
  3079  001B12  EF8D  F00D         	goto	u700
  3080  001B16                     u701:
  3081  001B16  EF97  F00D         	goto	l1497
  3082  001B1A                     u700:
  3083  001B1A                     
  3084                           ;keypad.c: 21:    return charKey[i];
  3085  001B1A  0E11               	movlw	low _charKey
  3086  001B1C  2404               	addwf	kpReadKey@i^0,w,c
  3087  001B1E  6EF6               	movwf	tblptrl,c
  3088  001B20  0E06               	movlw	high _charKey
  3089  001B22  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  3090  001B24  6EF7               	movwf	tblptrh,c
  3091  001B26                     	if	0	;There are less than 3 active tblptr bytes
  3092  001B26                     	endif
  3093  001B26  0008               	tblrd		*
  3094  001B28  50F5               	movf	tablat,w,c
  3095  001B2A  EFA8  F00D         	goto	l218
  3096  001B2E                     l1497:
  3097                           
  3098                           ;keypad.c: 23:  }
  3099  001B2E  4A04               	infsnz	kpReadKey@i^0,f,c
  3100  001B30  2A05               	incf	(kpReadKey@i+1)^0,f,c
  3101  001B32  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  3102  001B34  EFA5  F00D         	goto	u711
  3103  001B38  5005               	movf	(kpReadKey@i+1)^0,w,c
  3104  001B3A  E109               	bnz	u710
  3105  001B3C  0E0A               	movlw	10
  3106  001B3E  5C04               	subwf	kpReadKey@i^0,w,c
  3107  001B40  A0D8               	btfss	status,0,c
  3108  001B42  EFA5  F00D         	goto	u711
  3109  001B46  EFA7  F00D         	goto	u710
  3110  001B4A                     u711:
  3111  001B4A  EF71  F00D         	goto	l1491
  3112  001B4E                     u710:
  3113  001B4E                     
  3114                           ;keypad.c: 25:  return 0;
  3115  001B4E  0E00               	movlw	0
  3116  001B50                     l218:
  3117  001B50  0012               	return		;funcret
  3118  001B52                     __end_of_kpReadKey:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _kpRead *****************
  3122 ;; Defined at:
  3123 ;;		line 14 in file "keypad.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2    0[COMRAM] unsigned int 
  3130 ;; Registers used:
  3131 ;;		None
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3137 ;;      Params:         2       0       0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0
  3140 ;;      Totals:         2       0       0       0       0       0       0
  3141 ;;Total ram usage:        2 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_leTeclado
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text18
  3151  0020A0                     __ptext18:
  3152                           	callstack 0
  3153  0020A0                     _kpRead:
  3154                           	callstack 29
  3155  0020A0                     
  3156                           ;keypad.c: 15:     return keys;
  3157  0020A0  C03C  F001         	movff	_keys,?_kpRead
  3158  0020A4  C03D  F002         	movff	_keys+1,?_kpRead+1
  3159  0020A8  0012               	return		;funcret
  3160  0020AA                     __end_of_kpRead:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _kpDebounce *****************
  3164 ;; Defined at:
  3165 ;;		line 27 in file "keypad.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  i               2   12[COMRAM] int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3179 ;;      Params:         0       0       0       0       0       0       0
  3180 ;;      Locals:         2       0       0       0       0       0       0
  3181 ;;      Temps:          3       0       0       0       0       0       0
  3182 ;;      Totals:         5       0       0       0       0       0       0
  3183 ;;Total ram usage:        5 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 3
  3186 ;; This function calls:
  3187 ;;		_digitalRead
  3188 ;;		_soWrite
  3189 ;; This function is called by:
  3190 ;;		_leTeclado
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text19
  3195  0015CC                     __ptext19:
  3196                           	callstack 0
  3197  0015CC                     _kpDebounce:
  3198                           	callstack 26
  3199  0015CC                     
  3200                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3201  0015CC  0E00               	movlw	0
  3202  0015CE  6E3B               	movwf	(kpDebounce@newRead+1)^0,c
  3203  0015D0  0E00               	movlw	0
  3204  0015D2  6E3A               	movwf	kpDebounce@newRead^0,c
  3205                           
  3206                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3207  0015D4  0E00               	movlw	0
  3208  0015D6  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3209  0015D8  0E00               	movlw	0
  3210  0015DA  6E0D               	movwf	kpDebounce@i^0,c
  3211  0015DC                     l2405:
  3212  0015DC  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3213  0015DE  EFFA  F00A         	goto	u1911
  3214  0015E2  500E               	movf	(kpDebounce@i+1)^0,w,c
  3215  0015E4  E109               	bnz	u1910
  3216  0015E6  0E05               	movlw	5
  3217  0015E8  5C0D               	subwf	kpDebounce@i^0,w,c
  3218  0015EA  A0D8               	btfss	status,0,c
  3219  0015EC  EFFA  F00A         	goto	u1911
  3220  0015F0  EFFC  F00A         	goto	u1910
  3221  0015F4                     u1911:
  3222  0015F4  EFFE  F00A         	goto	l2409
  3223  0015F8                     u1910:
  3224  0015F8  EF5F  F00B         	goto	l2421
  3225  0015FC                     l2409:
  3226                           
  3227                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3228  0015FC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3229  001600  0E03               	movlw	3
  3230  001602  260A               	addwf	??_kpDebounce^0,f,c
  3231  001604  0E01               	movlw	1
  3232  001606  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3233  001608  0E00               	movlw	0
  3234  00160A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3235  00160C  2A0A               	incf	??_kpDebounce^0,f,c
  3236  00160E  EF0C  F00B         	goto	u1924
  3237  001612                     u1925:
  3238  001612  90D8               	bcf	status,0,c
  3239  001614  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3240  001616  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3241  001618                     u1924:
  3242  001618  2E0A               	decfsz	??_kpDebounce^0,f,c
  3243  00161A  EF09  F00B         	goto	u1925
  3244  00161E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3245  001622  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3246  001626  ECB5  F00E         	call	_soWrite	;wreg free
  3247                           
  3248                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3249  00162A  0E00               	movlw	0
  3250  00162C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3251  00162E  0E0A               	movlw	10
  3252  001630  6E01               	movwf	digitalRead@pin^0,c
  3253  001632  EC8E  F009         	call	_digitalRead	;wreg free
  3254  001636  5001               	movf	?_digitalRead^0,w,c
  3255  001638  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3256  00163A  B4D8               	btfsc	status,2,c
  3257  00163C  EF22  F00B         	goto	u1931
  3258  001640  EF24  F00B         	goto	u1930
  3259  001644                     u1931:
  3260  001644  EF37  F00B         	goto	l2413
  3261  001648                     u1930:
  3262  001648                     
  3263                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3264  001648  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3265  00164C  0E01               	movlw	1
  3266  00164E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3267  001650  0E00               	movlw	0
  3268  001652  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3269  001654  2A0A               	incf	??_kpDebounce^0,f,c
  3270  001656  EF30  F00B         	goto	u1944
  3271  00165A                     u1945:
  3272  00165A  90D8               	bcf	status,0,c
  3273  00165C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3274  00165E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3275  001660                     u1944:
  3276  001660  2E0A               	decfsz	??_kpDebounce^0,f,c
  3277  001662  EF2D  F00B         	goto	u1945
  3278  001666  500B               	movf	(??_kpDebounce+1)^0,w,c
  3279  001668  123A               	iorwf	kpDebounce@newRead^0,f,c
  3280  00166A  500C               	movf	(??_kpDebounce+2)^0,w,c
  3281  00166C  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3282  00166E                     l2413:
  3283                           
  3284                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3285  00166E  0E00               	movlw	0
  3286  001670  6E02               	movwf	(digitalRead@pin+1)^0,c
  3287  001672  0E09               	movlw	9
  3288  001674  6E01               	movwf	digitalRead@pin^0,c
  3289  001676  EC8E  F009         	call	_digitalRead	;wreg free
  3290  00167A  5001               	movf	?_digitalRead^0,w,c
  3291  00167C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3292  00167E  B4D8               	btfsc	status,2,c
  3293  001680  EF44  F00B         	goto	u1951
  3294  001684  EF46  F00B         	goto	u1950
  3295  001688                     u1951:
  3296  001688  EF5B  F00B         	goto	l2417
  3297  00168C                     u1950:
  3298  00168C                     
  3299                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3300  00168C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3301  001690  0E05               	movlw	5
  3302  001692  260A               	addwf	??_kpDebounce^0,f,c
  3303  001694  0E01               	movlw	1
  3304  001696  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3305  001698  0E00               	movlw	0
  3306  00169A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3307  00169C  2A0A               	incf	??_kpDebounce^0,f,c
  3308  00169E  EF54  F00B         	goto	u1964
  3309  0016A2                     u1965:
  3310  0016A2  90D8               	bcf	status,0,c
  3311  0016A4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3312  0016A6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3313  0016A8                     u1964:
  3314  0016A8  2E0A               	decfsz	??_kpDebounce^0,f,c
  3315  0016AA  EF51  F00B         	goto	u1965
  3316  0016AE  500B               	movf	(??_kpDebounce+1)^0,w,c
  3317  0016B0  123A               	iorwf	kpDebounce@newRead^0,f,c
  3318  0016B2  500C               	movf	(??_kpDebounce+2)^0,w,c
  3319  0016B4  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3320  0016B6                     l2417:
  3321                           
  3322                           ;keypad.c: 42:     }
  3323  0016B6  4A0D               	infsnz	kpDebounce@i^0,f,c
  3324  0016B8  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3325  0016BA  EFEE  F00A         	goto	l2405
  3326  0016BE                     l2421:
  3327                           
  3328                           ;keypad.c: 43:     if (oldRead == newRead) {
  3329  0016BE  503A               	movf	kpDebounce@newRead^0,w,c
  3330  0016C0  1838               	xorwf	kpDebounce@oldRead^0,w,c
  3331  0016C2  E107               	bnz	u1971
  3332  0016C4  503B               	movf	(kpDebounce@newRead+1)^0,w,c
  3333  0016C6  1839               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3334  0016C8  A4D8               	btfss	status,2,c
  3335  0016CA  EF69  F00B         	goto	u1971
  3336  0016CE  EF6B  F00B         	goto	u1970
  3337  0016D2                     u1971:
  3338  0016D2  EF6E  F00B         	goto	l2425
  3339  0016D6                     u1970:
  3340  0016D6                     
  3341                           ;keypad.c: 44:         tempo--;
  3342  0016D6  0644               	decf	kpDebounce@tempo^0,f,c
  3343                           
  3344                           ;keypad.c: 45:     } else {
  3345  0016D8  EF74  F00B         	goto	l232
  3346  0016DC                     l2425:
  3347                           
  3348                           ;keypad.c: 46:         tempo = 1;
  3349  0016DC  0E01               	movlw	1
  3350  0016DE  6E44               	movwf	kpDebounce@tempo^0,c
  3351  0016E0                     
  3352                           ;keypad.c: 47:         oldRead = newRead;
  3353  0016E0  C03A  F038         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3354  0016E4  C03B  F039         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3355  0016E8                     l232:
  3356                           
  3357                           ;keypad.c: 49:     if (tempo == 0) {
  3358  0016E8  5044               	movf	kpDebounce@tempo^0,w,c
  3359  0016EA  A4D8               	btfss	status,2,c
  3360  0016EC  EF7A  F00B         	goto	u1981
  3361  0016F0  EF7C  F00B         	goto	u1980
  3362  0016F4                     u1981:
  3363  0016F4  EF80  F00B         	goto	l234
  3364  0016F8                     u1980:
  3365  0016F8                     
  3366                           ;keypad.c: 50:         keys = oldRead;
  3367  0016F8  C038  F03C         	movff	kpDebounce@oldRead,_keys
  3368  0016FC  C039  F03D         	movff	kpDebounce@oldRead+1,_keys+1
  3369  001700                     l234:
  3370  001700  0012               	return		;funcret
  3371  001702                     __end_of_kpDebounce:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _digitalRead *****************
  3375 ;; Defined at:
  3376 ;;		line 39 in file "io.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  pin             2    0[COMRAM] int 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2    0[COMRAM] int 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3390 ;;      Params:         2       0       0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0
  3392 ;;      Temps:          3       0       0       0       0       0       0
  3393 ;;      Totals:         5       0       0       0       0       0       0
  3394 ;;Total ram usage:        5 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_kpDebounce
  3400 ;;		_read_SCL
  3401 ;;		_read_SDA
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text20
  3406  00131C                     __ptext20:
  3407                           	callstack 0
  3408  00131C                     _digitalRead:
  3409                           	callstack 28
  3410  00131C                     
  3411                           ;io.c: 40:     if(pin <8){
  3412  00131C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3413  00131E  EF9C  F009         	goto	u1650
  3414  001322  5002               	movf	(digitalRead@pin+1)^0,w,c
  3415  001324  E107               	bnz	u1651
  3416  001326  0E08               	movlw	8
  3417  001328  5C01               	subwf	digitalRead@pin^0,w,c
  3418  00132A  B0D8               	btfsc	status,0,c
  3419  00132C  EF9A  F009         	goto	u1651
  3420  001330  EF9C  F009         	goto	u1650
  3421  001334                     u1651:
  3422  001334  EFB0  F009         	goto	l2285
  3423  001338                     u1650:
  3424  001338                     
  3425                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  3426  001338  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3427  00133C  0E01               	movlw	1
  3428  00133E  6E04               	movwf	(??_digitalRead+1)^0,c
  3429  001340  2A03               	incf	??_digitalRead^0,f,c
  3430  001342  EFA5  F009         	goto	u1664
  3431  001346                     u1665:
  3432  001346  90D8               	bcf	status,0,c
  3433  001348  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3434  00134A                     u1664:
  3435  00134A  2E03               	decfsz	??_digitalRead^0,f,c
  3436  00134C  EFA3  F009         	goto	u1665
  3437  001350  5004               	movf	(??_digitalRead+1)^0,w,c
  3438  001352  1480               	andwf	128,w,c	;volatile
  3439  001354  6E05               	movwf	(??_digitalRead+2)^0,c
  3440  001356  5005               	movf	(??_digitalRead+2)^0,w,c
  3441  001358  6E01               	movwf	?_digitalRead^0,c
  3442  00135A  6A02               	clrf	(?_digitalRead+1)^0,c
  3443  00135C  EF42  F00A         	goto	l165
  3444  001360                     l2285:
  3445  001360  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3446  001362  EFBE  F009         	goto	u1670
  3447  001366  5002               	movf	(digitalRead@pin+1)^0,w,c
  3448  001368  E107               	bnz	u1671
  3449  00136A  0E10               	movlw	16
  3450  00136C  5C01               	subwf	digitalRead@pin^0,w,c
  3451  00136E  B0D8               	btfsc	status,0,c
  3452  001370  EFBC  F009         	goto	u1671
  3453  001374  EFBE  F009         	goto	u1670
  3454  001378                     u1671:
  3455  001378  EFD4  F009         	goto	l2293
  3456  00137C                     u1670:
  3457  00137C                     
  3458                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  3459  00137C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3460  001380  0EF8               	movlw	-8
  3461  001382  2603               	addwf	??_digitalRead^0,f,c
  3462  001384  0E01               	movlw	1
  3463  001386  6E04               	movwf	(??_digitalRead+1)^0,c
  3464  001388  2A03               	incf	??_digitalRead^0,f,c
  3465  00138A  EFC9  F009         	goto	u1684
  3466  00138E                     u1685:
  3467  00138E  90D8               	bcf	status,0,c
  3468  001390  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3469  001392                     u1684:
  3470  001392  2E03               	decfsz	??_digitalRead^0,f,c
  3471  001394  EFC7  F009         	goto	u1685
  3472  001398  5004               	movf	(??_digitalRead+1)^0,w,c
  3473  00139A  1481               	andwf	129,w,c	;volatile
  3474  00139C  6E05               	movwf	(??_digitalRead+2)^0,c
  3475  00139E  5005               	movf	(??_digitalRead+2)^0,w,c
  3476  0013A0  6E01               	movwf	?_digitalRead^0,c
  3477  0013A2  6A02               	clrf	(?_digitalRead+1)^0,c
  3478  0013A4  EF42  F00A         	goto	l165
  3479  0013A8                     l2293:
  3480  0013A8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3481  0013AA  EFE2  F009         	goto	u1690
  3482  0013AE  5002               	movf	(digitalRead@pin+1)^0,w,c
  3483  0013B0  E107               	bnz	u1691
  3484  0013B2  0E18               	movlw	24
  3485  0013B4  5C01               	subwf	digitalRead@pin^0,w,c
  3486  0013B6  B0D8               	btfsc	status,0,c
  3487  0013B8  EFE0  F009         	goto	u1691
  3488  0013BC  EFE2  F009         	goto	u1690
  3489  0013C0                     u1691:
  3490  0013C0  EFF8  F009         	goto	l2301
  3491  0013C4                     u1690:
  3492  0013C4                     
  3493                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  3494  0013C4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3495  0013C8  0EF0               	movlw	-16
  3496  0013CA  2603               	addwf	??_digitalRead^0,f,c
  3497  0013CC  0E01               	movlw	1
  3498  0013CE  6E04               	movwf	(??_digitalRead+1)^0,c
  3499  0013D0  2A03               	incf	??_digitalRead^0,f,c
  3500  0013D2  EFED  F009         	goto	u1704
  3501  0013D6                     u1705:
  3502  0013D6  90D8               	bcf	status,0,c
  3503  0013D8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3504  0013DA                     u1704:
  3505  0013DA  2E03               	decfsz	??_digitalRead^0,f,c
  3506  0013DC  EFEB  F009         	goto	u1705
  3507  0013E0  5004               	movf	(??_digitalRead+1)^0,w,c
  3508  0013E2  1482               	andwf	130,w,c	;volatile
  3509  0013E4  6E05               	movwf	(??_digitalRead+2)^0,c
  3510  0013E6  5005               	movf	(??_digitalRead+2)^0,w,c
  3511  0013E8  6E01               	movwf	?_digitalRead^0,c
  3512  0013EA  6A02               	clrf	(?_digitalRead+1)^0,c
  3513  0013EC  EF42  F00A         	goto	l165
  3514  0013F0                     l2301:
  3515  0013F0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3516  0013F2  EF06  F00A         	goto	u1710
  3517  0013F6  5002               	movf	(digitalRead@pin+1)^0,w,c
  3518  0013F8  E107               	bnz	u1711
  3519  0013FA  0E20               	movlw	32
  3520  0013FC  5C01               	subwf	digitalRead@pin^0,w,c
  3521  0013FE  B0D8               	btfsc	status,0,c
  3522  001400  EF04  F00A         	goto	u1711
  3523  001404  EF06  F00A         	goto	u1710
  3524  001408                     u1711:
  3525  001408  EF1C  F00A         	goto	l2309
  3526  00140C                     u1710:
  3527  00140C                     
  3528                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  3529  00140C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3530  001410  0EE8               	movlw	-24
  3531  001412  2603               	addwf	??_digitalRead^0,f,c
  3532  001414  0E01               	movlw	1
  3533  001416  6E04               	movwf	(??_digitalRead+1)^0,c
  3534  001418  2A03               	incf	??_digitalRead^0,f,c
  3535  00141A  EF11  F00A         	goto	u1724
  3536  00141E                     u1725:
  3537  00141E  90D8               	bcf	status,0,c
  3538  001420  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3539  001422                     u1724:
  3540  001422  2E03               	decfsz	??_digitalRead^0,f,c
  3541  001424  EF0F  F00A         	goto	u1725
  3542  001428  5004               	movf	(??_digitalRead+1)^0,w,c
  3543  00142A  1483               	andwf	131,w,c	;volatile
  3544  00142C  6E05               	movwf	(??_digitalRead+2)^0,c
  3545  00142E  5005               	movf	(??_digitalRead+2)^0,w,c
  3546  001430  6E01               	movwf	?_digitalRead^0,c
  3547  001432  6A02               	clrf	(?_digitalRead+1)^0,c
  3548  001434  EF42  F00A         	goto	l165
  3549  001438                     l2309:
  3550  001438  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3551  00143A  EF2A  F00A         	goto	u1730
  3552  00143E  5002               	movf	(digitalRead@pin+1)^0,w,c
  3553  001440  E107               	bnz	u1731
  3554  001442  0E28               	movlw	40
  3555  001444  5C01               	subwf	digitalRead@pin^0,w,c
  3556  001446  B0D8               	btfsc	status,0,c
  3557  001448  EF28  F00A         	goto	u1731
  3558  00144C  EF2A  F00A         	goto	u1730
  3559  001450                     u1731:
  3560  001450  EF40  F00A         	goto	l170
  3561  001454                     u1730:
  3562  001454                     
  3563                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  3564  001454  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3565  001458  0EE0               	movlw	-32
  3566  00145A  2603               	addwf	??_digitalRead^0,f,c
  3567  00145C  0E01               	movlw	1
  3568  00145E  6E04               	movwf	(??_digitalRead+1)^0,c
  3569  001460  2A03               	incf	??_digitalRead^0,f,c
  3570  001462  EF35  F00A         	goto	u1744
  3571  001466                     u1745:
  3572  001466  90D8               	bcf	status,0,c
  3573  001468  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3574  00146A                     u1744:
  3575  00146A  2E03               	decfsz	??_digitalRead^0,f,c
  3576  00146C  EF33  F00A         	goto	u1745
  3577  001470  5004               	movf	(??_digitalRead+1)^0,w,c
  3578  001472  1484               	andwf	132,w,c	;volatile
  3579  001474  6E05               	movwf	(??_digitalRead+2)^0,c
  3580  001476  5005               	movf	(??_digitalRead+2)^0,w,c
  3581  001478  6E01               	movwf	?_digitalRead^0,c
  3582  00147A  6A02               	clrf	(?_digitalRead+1)^0,c
  3583  00147C  EF42  F00A         	goto	l165
  3584  001480                     l170:
  3585  001480                     
  3586                           ;io.c: 51:     return -1;
  3587  001480  6801               	setf	?_digitalRead^0,c
  3588  001482  6802               	setf	(?_digitalRead+1)^0,c
  3589  001484                     l165:
  3590  001484  0012               	return		;funcret
  3591  001486                     __end_of_digitalRead:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _lcdInit *****************
  3595 ;; Defined at:
  3596 ;;		line 72 in file "lcd.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3610 ;;      Params:         0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 5
  3617 ;; This function calls:
  3618 ;;		_delayMicro
  3619 ;;		_delayMili
  3620 ;;		_lcdCommand
  3621 ;;		_pinMode
  3622 ;;		_pushNibble
  3623 ;;		_soInit
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text21
  3630  0017EC                     __ptext21:
  3631                           	callstack 0
  3632  0017EC                     _lcdInit:
  3633                           	callstack 25
  3634  0017EC                     
  3635                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3636  0017EC  0E00               	movlw	0
  3637  0017EE  6E02               	movwf	(pinMode@pin+1)^0,c
  3638  0017F0  0E1C               	movlw	28
  3639  0017F2  6E01               	movwf	pinMode@pin^0,c
  3640  0017F4  0E00               	movlw	0
  3641  0017F6  6E04               	movwf	(pinMode@type+1)^0,c
  3642  0017F8  0E00               	movlw	0
  3643  0017FA  6E03               	movwf	pinMode@type^0,c
  3644  0017FC  EC07  F006         	call	_pinMode	;wreg free
  3645                           
  3646                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3647  001800  0E00               	movlw	0
  3648  001802  6E02               	movwf	(pinMode@pin+1)^0,c
  3649  001804  0E1D               	movlw	29
  3650  001806  6E01               	movwf	pinMode@pin^0,c
  3651  001808  0E00               	movlw	0
  3652  00180A  6E04               	movwf	(pinMode@type+1)^0,c
  3653  00180C  0E00               	movlw	0
  3654  00180E  6E03               	movwf	pinMode@type^0,c
  3655  001810  EC07  F006         	call	_pinMode	;wreg free
  3656                           
  3657                           ;lcd.c: 75:  soInit();
  3658  001814  EC21  F00F         	call	_soInit	;wreg free
  3659                           
  3660                           ;lcd.c: 76:  delayMili(15);
  3661  001818  0E00               	movlw	0
  3662  00181A  6E02               	movwf	(delayMili@a+1)^0,c
  3663  00181C  0E0F               	movlw	15
  3664  00181E  6E01               	movwf	delayMili@a^0,c
  3665  001820  EC76  F00F         	call	_delayMili	;wreg free
  3666                           
  3667                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3668  001824  0E00               	movlw	0
  3669  001826  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3670  001828  0E00               	movlw	0
  3671  00182A  6E0A               	movwf	pushNibble@rs^0,c
  3672  00182C  0E03               	movlw	3
  3673  00182E  ECE3  F00F         	call	_pushNibble
  3674                           
  3675                           ;lcd.c: 79:  delayMili(5);
  3676  001832  0E00               	movlw	0
  3677  001834  6E02               	movwf	(delayMili@a+1)^0,c
  3678  001836  0E05               	movlw	5
  3679  001838  6E01               	movwf	delayMili@a^0,c
  3680  00183A  EC76  F00F         	call	_delayMili	;wreg free
  3681                           
  3682                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3683  00183E  0E00               	movlw	0
  3684  001840  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3685  001842  0E00               	movlw	0
  3686  001844  6E0A               	movwf	pushNibble@rs^0,c
  3687  001846  0E03               	movlw	3
  3688  001848  ECE3  F00F         	call	_pushNibble
  3689  00184C                     
  3690                           ;lcd.c: 81:  delayMicro(160);
  3691  00184C  0E00               	movlw	0
  3692  00184E  6E02               	movwf	(delayMicro@a+1)^0,c
  3693  001850  0EA0               	movlw	160
  3694  001852  6E01               	movwf	delayMicro@a^0,c
  3695  001854  EC59  F010         	call	_delayMicro	;wreg free
  3696  001858                     
  3697                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3698  001858  0E00               	movlw	0
  3699  00185A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3700  00185C  0E00               	movlw	0
  3701  00185E  6E0A               	movwf	pushNibble@rs^0,c
  3702  001860  0E03               	movlw	3
  3703  001862  ECE3  F00F         	call	_pushNibble
  3704                           
  3705                           ;lcd.c: 83:  delayMicro(160);
  3706  001866  0E00               	movlw	0
  3707  001868  6E02               	movwf	(delayMicro@a+1)^0,c
  3708  00186A  0EA0               	movlw	160
  3709  00186C  6E01               	movwf	delayMicro@a^0,c
  3710  00186E  EC59  F010         	call	_delayMicro	;wreg free
  3711  001872                     
  3712                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3713  001872  0E00               	movlw	0
  3714  001874  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3715  001876  0E00               	movlw	0
  3716  001878  6E0A               	movwf	pushNibble@rs^0,c
  3717  00187A  0E02               	movlw	2
  3718  00187C  ECE3  F00F         	call	_pushNibble
  3719  001880                     
  3720                           ;lcd.c: 86:  delayMili(10);
  3721  001880  0E00               	movlw	0
  3722  001882  6E02               	movwf	(delayMili@a+1)^0,c
  3723  001884  0E0A               	movlw	10
  3724  001886  6E01               	movwf	delayMili@a^0,c
  3725  001888  EC76  F00F         	call	_delayMili	;wreg free
  3726  00188C                     
  3727                           ;lcd.c: 88:  lcdCommand(0x28);
  3728  00188C  0E28               	movlw	40
  3729  00188E  EC16  F010         	call	_lcdCommand
  3730  001892                     
  3731                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3732  001892  0E0C               	movlw	12
  3733  001894  EC16  F010         	call	_lcdCommand
  3734  001898                     
  3735                           ;lcd.c: 90:  lcdCommand(0x01);
  3736  001898  0E01               	movlw	1
  3737  00189A  EC16  F010         	call	_lcdCommand
  3738  00189E  0012               	return		;funcret
  3739  0018A0                     __end_of_lcdInit:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function _pushNibble *****************
  3743 ;; Defined at:
  3744 ;;		line 25 in file "lcd.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  value           1    wreg     unsigned char 
  3747 ;;  rs              2    9[COMRAM] int 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  value           1   11[COMRAM] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3759 ;;      Params:         2       0       0       0       0       0       0
  3760 ;;      Locals:         1       0       0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0
  3762 ;;      Totals:         3       0       0       0       0       0       0
  3763 ;;Total ram usage:        3 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 3
  3766 ;; This function calls:
  3767 ;;		_digitalWrite
  3768 ;;		_pulseEnablePin
  3769 ;;		_soWrite
  3770 ;; This function is called by:
  3771 ;;		_lcdInit
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text22
  3776  001FC6                     __ptext22:
  3777                           	callstack 0
  3778  001FC6                     _pushNibble:
  3779                           	callstack 26
  3780                           
  3781                           ;incstack = 0
  3782                           ;pushNibble@value stored from wreg
  3783  001FC6  6E0C               	movwf	pushNibble@value^0,c
  3784  001FC8                     
  3785                           ;lcd.c: 26:  soWrite(value);
  3786  001FC8  C00C  F007         	movff	pushNibble@value,soWrite@value
  3787  001FCC  6A08               	clrf	(soWrite@value+1)^0,c
  3788  001FCE  ECB5  F00E         	call	_soWrite	;wreg free
  3789                           
  3790                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3791  001FD2  0E00               	movlw	0
  3792  001FD4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3793  001FD6  0E1D               	movlw	29
  3794  001FD8  6E01               	movwf	digitalWrite@pin^0,c
  3795  001FDA  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3796  001FDE  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3797  001FE2  ECE0  F004         	call	_digitalWrite	;wreg free
  3798                           
  3799                           ;lcd.c: 28:  pulseEnablePin();
  3800  001FE6  EC00  F00F         	call	_pulseEnablePin	;wreg free
  3801  001FEA  0012               	return		;funcret
  3802  001FEC                     __end_of_pushNibble:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _lcdCommand *****************
  3806 ;; Defined at:
  3807 ;;		line 40 in file "lcd.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  value           1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  value           1   13[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3821 ;;      Params:         0       0       0       0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0
  3824 ;;      Totals:         1       0       0       0       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 4
  3828 ;; This function calls:
  3829 ;;		_delayMili
  3830 ;;		_pushByte
  3831 ;; This function is called by:
  3832 ;;		_lcdPosition
  3833 ;;		_lcdInit
  3834 ;;		_leTeclado
  3835 ;;		_serialcom
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text23
  3841  00202C                     __ptext23:
  3842                           	callstack 0
  3843  00202C                     _lcdCommand:
  3844                           	callstack 25
  3845                           
  3846                           ;incstack = 0
  3847                           ;lcdCommand@value stored from wreg
  3848  00202C  6E0E               	movwf	lcdCommand@value^0,c
  3849  00202E                     
  3850                           ;lcd.c: 41:  pushByte(value, 0);
  3851  00202E  0E00               	movlw	0
  3852  002030  6E0B               	movwf	(pushByte@rs+1)^0,c
  3853  002032  0E00               	movlw	0
  3854  002034  6E0A               	movwf	pushByte@rs^0,c
  3855  002036  500E               	movf	lcdCommand@value^0,w,c
  3856  002038  ECDE  F00D         	call	_pushByte
  3857                           
  3858                           ;lcd.c: 42:  delayMili(2);
  3859  00203C  0E00               	movlw	0
  3860  00203E  6E02               	movwf	(delayMili@a+1)^0,c
  3861  002040  0E02               	movlw	2
  3862  002042  6E01               	movwf	delayMili@a^0,c
  3863  002044  EC76  F00F         	call	_delayMili	;wreg free
  3864  002048  0012               	return		;funcret
  3865  00204A                     __end_of_lcdCommand:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _pushByte *****************
  3869 ;; Defined at:
  3870 ;;		line 31 in file "lcd.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  value           1    wreg     unsigned char 
  3873 ;;  rs              2    9[COMRAM] int 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  value           1   12[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         2       0       0       0       0       0       0
  3886 ;;      Locals:         1       0       0       0       0       0       0
  3887 ;;      Temps:          1       0       0       0       0       0       0
  3888 ;;      Totals:         4       0       0       0       0       0       0
  3889 ;;Total ram usage:        4 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 3
  3892 ;; This function calls:
  3893 ;;		_digitalWrite
  3894 ;;		_pulseEnablePin
  3895 ;;		_soWrite
  3896 ;; This function is called by:
  3897 ;;		_lcdCommand
  3898 ;;		_lcdChar
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text24
  3903  001BBC                     __ptext24:
  3904                           	callstack 0
  3905  001BBC                     _pushByte:
  3906                           	callstack 24
  3907                           
  3908                           ;incstack = 0
  3909                           ;pushByte@value stored from wreg
  3910  001BBC  6E0D               	movwf	pushByte@value^0,c
  3911  001BBE                     
  3912                           ;lcd.c: 32:  soWrite(value >> 4);
  3913  001BBE  C00D  F00C         	movff	pushByte@value,??_pushByte
  3914  001BC2  3A0C               	swapf	??_pushByte^0,f,c
  3915  001BC4  0E0F               	movlw	15
  3916  001BC6  160C               	andwf	??_pushByte^0,f,c
  3917  001BC8  500C               	movf	??_pushByte^0,w,c
  3918  001BCA  6E07               	movwf	soWrite@value^0,c
  3919  001BCC  6A08               	clrf	(soWrite@value+1)^0,c
  3920  001BCE  ECB5  F00E         	call	_soWrite	;wreg free
  3921                           
  3922                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3923  001BD2  0E00               	movlw	0
  3924  001BD4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3925  001BD6  0E1D               	movlw	29
  3926  001BD8  6E01               	movwf	digitalWrite@pin^0,c
  3927  001BDA  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3928  001BDE  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3929  001BE2  ECE0  F004         	call	_digitalWrite	;wreg free
  3930                           
  3931                           ;lcd.c: 34:  pulseEnablePin();
  3932  001BE6  EC00  F00F         	call	_pulseEnablePin	;wreg free
  3933                           
  3934                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3935  001BEA  C00D  F00C         	movff	pushByte@value,??_pushByte
  3936  001BEE  0E0F               	movlw	15
  3937  001BF0  160C               	andwf	??_pushByte^0,f,c
  3938  001BF2  500C               	movf	??_pushByte^0,w,c
  3939  001BF4  6E07               	movwf	soWrite@value^0,c
  3940  001BF6  6A08               	clrf	(soWrite@value+1)^0,c
  3941  001BF8  ECB5  F00E         	call	_soWrite	;wreg free
  3942                           
  3943                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3944  001BFC  0E00               	movlw	0
  3945  001BFE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3946  001C00  0E1D               	movlw	29
  3947  001C02  6E01               	movwf	digitalWrite@pin^0,c
  3948  001C04  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3949  001C08  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3950  001C0C  ECE0  F004         	call	_digitalWrite	;wreg free
  3951                           
  3952                           ;lcd.c: 38:  pulseEnablePin();
  3953  001C10  EC00  F00F         	call	_pulseEnablePin	;wreg free
  3954  001C14  0012               	return		;funcret
  3955  001C16                     __end_of_pushByte:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _soWrite *****************
  3959 ;; Defined at:
  3960 ;;		line 18 in file "so.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  value           2    6[COMRAM] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  i               1    8[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         2       0       0       0       0       0       0
  3975 ;;      Locals:         1       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0
  3977 ;;      Totals:         3       0       0       0       0       0       0
  3978 ;;Total ram usage:        3 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 2
  3981 ;; This function calls:
  3982 ;;		_PulseClockData
  3983 ;;		_PulseEnClock
  3984 ;;		_digitalWrite
  3985 ;; This function is called by:
  3986 ;;		_kpDebounce
  3987 ;;		_pushNibble
  3988 ;;		_pushByte
  3989 ;;		_ssdUpdate
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text25
  3994  001D6A                     __ptext25:
  3995                           	callstack 0
  3996  001D6A                     _soWrite:
  3997                           	callstack 27
  3998  001D6A                     
  3999                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4000  001D6A  0E00               	movlw	0
  4001  001D6C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4002  001D6E  0E08               	movlw	8
  4003  001D70  6E01               	movwf	digitalWrite@pin^0,c
  4004  001D72  0E00               	movlw	0
  4005  001D74  6E04               	movwf	(digitalWrite@value+1)^0,c
  4006  001D76  0E00               	movlw	0
  4007  001D78  6E03               	movwf	digitalWrite@value^0,c
  4008  001D7A  ECE0  F004         	call	_digitalWrite	;wreg free
  4009  001D7E                     
  4010                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4011  001D7E  0E00               	movlw	0
  4012  001D80  6E09               	movwf	soWrite@i^0,c
  4013  001D82                     l2213:
  4014                           
  4015                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4016  001D82  0E00               	movlw	0
  4017  001D84  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4018  001D86  0E1E               	movlw	30
  4019  001D88  6E01               	movwf	digitalWrite@pin^0,c
  4020  001D8A  0E80               	movlw	128
  4021  001D8C  1407               	andwf	soWrite@value^0,w,c
  4022  001D8E  6E03               	movwf	digitalWrite@value^0,c
  4023  001D90  6A04               	clrf	(digitalWrite@value+1)^0,c
  4024  001D92  ECE0  F004         	call	_digitalWrite	;wreg free
  4025                           
  4026                           ;so.c: 23:   PulseClockData();
  4027  001D96  ECB9  F00F         	call	_PulseClockData	;wreg free
  4028  001D9A                     
  4029                           ;so.c: 24:   value <<= 1;
  4030  001D9A  90D8               	bcf	status,0,c
  4031  001D9C  3607               	rlcf	soWrite@value^0,f,c
  4032  001D9E  3608               	rlcf	(soWrite@value+1)^0,f,c
  4033  001DA0                     
  4034                           ;so.c: 25:  }
  4035  001DA0  2A09               	incf	soWrite@i^0,f,c
  4036  001DA2  0E07               	movlw	7
  4037  001DA4  6409               	cpfsgt	soWrite@i^0,c
  4038  001DA6  EFD7  F00E         	goto	u1431
  4039  001DAA  EFD9  F00E         	goto	u1430
  4040  001DAE                     u1431:
  4041  001DAE  EFC1  F00E         	goto	l2213
  4042  001DB2                     u1430:
  4043  001DB2                     
  4044                           ;so.c: 26:  PulseEnClock();
  4045  001DB2  ECA4  F00F         	call	_PulseEnClock	;wreg free
  4046  001DB6  0012               	return		;funcret
  4047  001DB8                     __end_of_soWrite:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _PulseEnClock *****************
  4051 ;; Defined at:
  4052 ;;		line 9 in file "so.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4066 ;;      Params:         0       0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 1
  4073 ;; This function calls:
  4074 ;;		_digitalWrite
  4075 ;; This function is called by:
  4076 ;;		_soWrite
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text26
  4081  001F48                     __ptext26:
  4082                           	callstack 0
  4083  001F48                     _PulseEnClock:
  4084                           	callstack 27
  4085  001F48                     
  4086                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4087  001F48  0E00               	movlw	0
  4088  001F4A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4089  001F4C  0E1F               	movlw	31
  4090  001F4E  6E01               	movwf	digitalWrite@pin^0,c
  4091  001F50  0E00               	movlw	0
  4092  001F52  6E04               	movwf	(digitalWrite@value+1)^0,c
  4093  001F54  0E01               	movlw	1
  4094  001F56  6E03               	movwf	digitalWrite@value^0,c
  4095  001F58  ECE0  F004         	call	_digitalWrite	;wreg free
  4096                           
  4097                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4098  001F5C  0E00               	movlw	0
  4099  001F5E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4100  001F60  0E1F               	movlw	31
  4101  001F62  6E01               	movwf	digitalWrite@pin^0,c
  4102  001F64  0E00               	movlw	0
  4103  001F66  6E04               	movwf	(digitalWrite@value+1)^0,c
  4104  001F68  0E00               	movlw	0
  4105  001F6A  6E03               	movwf	digitalWrite@value^0,c
  4106  001F6C  ECE0  F004         	call	_digitalWrite	;wreg free
  4107  001F70  0012               	return		;funcret
  4108  001F72                     __end_of_PulseEnClock:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function _PulseClockData *****************
  4112 ;; Defined at:
  4113 ;;		line 14 in file "so.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4127 ;;      Params:         0       0       0       0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; Hardware stack levels required when called: 1
  4134 ;; This function calls:
  4135 ;;		_digitalWrite
  4136 ;; This function is called by:
  4137 ;;		_soWrite
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text27
  4142  001F72                     __ptext27:
  4143                           	callstack 0
  4144  001F72                     _PulseClockData:
  4145                           	callstack 27
  4146  001F72                     
  4147                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4148  001F72  0E00               	movlw	0
  4149  001F74  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4150  001F76  0E08               	movlw	8
  4151  001F78  6E01               	movwf	digitalWrite@pin^0,c
  4152  001F7A  0E00               	movlw	0
  4153  001F7C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4154  001F7E  0E01               	movlw	1
  4155  001F80  6E03               	movwf	digitalWrite@value^0,c
  4156  001F82  ECE0  F004         	call	_digitalWrite	;wreg free
  4157                           
  4158                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4159  001F86  0E00               	movlw	0
  4160  001F88  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4161  001F8A  0E08               	movlw	8
  4162  001F8C  6E01               	movwf	digitalWrite@pin^0,c
  4163  001F8E  0E00               	movlw	0
  4164  001F90  6E04               	movwf	(digitalWrite@value+1)^0,c
  4165  001F92  0E00               	movlw	0
  4166  001F94  6E03               	movwf	digitalWrite@value^0,c
  4167  001F96  ECE0  F004         	call	_digitalWrite	;wreg free
  4168  001F9A  0012               	return		;funcret
  4169  001F9C                     __end_of_PulseClockData:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _pulseEnablePin *****************
  4173 ;; Defined at:
  4174 ;;		line 18 in file "lcd.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4188 ;;      Params:         0       0       0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 1
  4195 ;; This function calls:
  4196 ;;		_delayMicro
  4197 ;;		_digitalWrite
  4198 ;; This function is called by:
  4199 ;;		_pushNibble
  4200 ;;		_pushByte
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text28
  4205  001E00                     __ptext28:
  4206                           	callstack 0
  4207  001E00                     _pulseEnablePin:
  4208                           	callstack 25
  4209  001E00                     
  4210                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4211  001E00  0E00               	movlw	0
  4212  001E02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4213  001E04  0E1C               	movlw	28
  4214  001E06  6E01               	movwf	digitalWrite@pin^0,c
  4215  001E08  0E00               	movlw	0
  4216  001E0A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4217  001E0C  0E01               	movlw	1
  4218  001E0E  6E03               	movwf	digitalWrite@value^0,c
  4219  001E10  ECE0  F004         	call	_digitalWrite	;wreg free
  4220  001E14                     
  4221                           ;lcd.c: 20:  delayMicro(5);
  4222  001E14  0E00               	movlw	0
  4223  001E16  6E02               	movwf	(delayMicro@a+1)^0,c
  4224  001E18  0E05               	movlw	5
  4225  001E1A  6E01               	movwf	delayMicro@a^0,c
  4226  001E1C  EC59  F010         	call	_delayMicro	;wreg free
  4227  001E20                     
  4228                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4229  001E20  0E00               	movlw	0
  4230  001E22  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4231  001E24  0E1C               	movlw	28
  4232  001E26  6E01               	movwf	digitalWrite@pin^0,c
  4233  001E28  0E00               	movlw	0
  4234  001E2A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4235  001E2C  0E00               	movlw	0
  4236  001E2E  6E03               	movwf	digitalWrite@value^0,c
  4237  001E30  ECE0  F004         	call	_digitalWrite	;wreg free
  4238                           
  4239                           ;lcd.c: 22:  delayMicro(5);
  4240  001E34  0E00               	movlw	0
  4241  001E36  6E02               	movwf	(delayMicro@a+1)^0,c
  4242  001E38  0E05               	movlw	5
  4243  001E3A  6E01               	movwf	delayMicro@a^0,c
  4244  001E3C  EC59  F010         	call	_delayMicro	;wreg free
  4245  001E40  0012               	return		;funcret
  4246  001E42                     __end_of_pulseEnablePin:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _digitalWrite *****************
  4250 ;; Defined at:
  4251 ;;		line 14 in file "io.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  pin             2    0[COMRAM] int 
  4254 ;;  value           2    2[COMRAM] int 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4266 ;;      Params:         4       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0
  4268 ;;      Temps:          2       0       0       0       0       0       0
  4269 ;;      Totals:         6       0       0       0       0       0       0
  4270 ;;Total ram usage:        6 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_pulseEnablePin
  4276 ;;		_pushNibble
  4277 ;;		_pushByte
  4278 ;;		_PulseEnClock
  4279 ;;		_PulseClockData
  4280 ;;		_soWrite
  4281 ;;		_ssdUpdate
  4282 ;;		_clear_SCL
  4283 ;;		_clear_SDA
  4284 ;;		_rgbColor
  4285 ;;		_turnOn
  4286 ;;		_turnOff
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text29
  4291  0009C0                     __ptext29:
  4292                           	callstack 0
  4293  0009C0                     _digitalWrite:
  4294                           	callstack 28
  4295  0009C0                     
  4296                           ;io.c: 16:     if(pin <8){
  4297  0009C0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4298  0009C2  EFEE  F004         	goto	u1230
  4299  0009C6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4300  0009C8  E107               	bnz	u1231
  4301  0009CA  0E08               	movlw	8
  4302  0009CC  5C01               	subwf	digitalWrite@pin^0,w,c
  4303  0009CE  B0D8               	btfsc	status,0,c
  4304  0009D0  EFEC  F004         	goto	u1231
  4305  0009D4  EFEE  F004         	goto	u1230
  4306  0009D8                     u1231:
  4307  0009D8  EF18  F005         	goto	l2169
  4308  0009DC                     u1230:
  4309  0009DC                     
  4310                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4311  0009DC  5003               	movf	digitalWrite@value^0,w,c
  4312  0009DE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4313  0009E0  B4D8               	btfsc	status,2,c
  4314  0009E2  EFF5  F004         	goto	u1241
  4315  0009E6  EFF7  F004         	goto	u1240
  4316  0009EA                     u1241:
  4317  0009EA  EF07  F005         	goto	l2167
  4318  0009EE                     u1240:
  4319  0009EE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4320  0009F2  0E01               	movlw	1
  4321  0009F4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4322  0009F6  2A05               	incf	??_digitalWrite^0,f,c
  4323  0009F8  EF00  F005         	goto	u1254
  4324  0009FC                     u1255:
  4325  0009FC  90D8               	bcf	status,0,c
  4326  0009FE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4327  000A00                     u1254:
  4328  000A00  2E05               	decfsz	??_digitalWrite^0,f,c
  4329  000A02  EFFE  F004         	goto	u1255
  4330  000A06  5006               	movf	(??_digitalWrite+1)^0,w,c
  4331  000A08  1280               	iorwf	128,f,c	;volatile
  4332  000A0A  EF06  F006         	goto	l161
  4333  000A0E                     l2167:
  4334  000A0E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4335  000A12  0E01               	movlw	1
  4336  000A14  6E06               	movwf	(??_digitalWrite+1)^0,c
  4337  000A16  2A05               	incf	??_digitalWrite^0,f,c
  4338  000A18  EF10  F005         	goto	u1264
  4339  000A1C                     u1265:
  4340  000A1C  90D8               	bcf	status,0,c
  4341  000A1E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4342  000A20                     u1264:
  4343  000A20  2E05               	decfsz	??_digitalWrite^0,f,c
  4344  000A22  EF0E  F005         	goto	u1265
  4345  000A26  5006               	movf	(??_digitalWrite+1)^0,w,c
  4346  000A28  0AFF               	xorlw	255
  4347  000A2A  1680               	andwf	128,f,c	;volatile
  4348  000A2C  EF06  F006         	goto	l161
  4349  000A30                     l2169:
  4350  000A30  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4351  000A32  EF26  F005         	goto	u1270
  4352  000A36  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4353  000A38  E107               	bnz	u1271
  4354  000A3A  0E10               	movlw	16
  4355  000A3C  5C01               	subwf	digitalWrite@pin^0,w,c
  4356  000A3E  B0D8               	btfsc	status,0,c
  4357  000A40  EF24  F005         	goto	u1271
  4358  000A44  EF26  F005         	goto	u1270
  4359  000A48                     u1271:
  4360  000A48  EF54  F005         	goto	l2177
  4361  000A4C                     u1270:
  4362  000A4C                     
  4363                           ;io.c: 20:         pin -=8;
  4364  000A4C  0EF8               	movlw	248
  4365  000A4E  2601               	addwf	digitalWrite@pin^0,f,c
  4366  000A50  0EFF               	movlw	255
  4367  000A52  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4368                           
  4369                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4370  000A54  5003               	movf	digitalWrite@value^0,w,c
  4371  000A56  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4372  000A58  B4D8               	btfsc	status,2,c
  4373  000A5A  EF31  F005         	goto	u1281
  4374  000A5E  EF33  F005         	goto	u1280
  4375  000A62                     u1281:
  4376  000A62  EF43  F005         	goto	l2175
  4377  000A66                     u1280:
  4378  000A66  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4379  000A6A  0E01               	movlw	1
  4380  000A6C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4381  000A6E  2A05               	incf	??_digitalWrite^0,f,c
  4382  000A70  EF3C  F005         	goto	u1294
  4383  000A74                     u1295:
  4384  000A74  90D8               	bcf	status,0,c
  4385  000A76  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4386  000A78                     u1294:
  4387  000A78  2E05               	decfsz	??_digitalWrite^0,f,c
  4388  000A7A  EF3A  F005         	goto	u1295
  4389  000A7E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4390  000A80  1281               	iorwf	129,f,c	;volatile
  4391  000A82  EF06  F006         	goto	l161
  4392  000A86                     l2175:
  4393  000A86  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4394  000A8A  0E01               	movlw	1
  4395  000A8C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4396  000A8E  2A05               	incf	??_digitalWrite^0,f,c
  4397  000A90  EF4C  F005         	goto	u1304
  4398  000A94                     u1305:
  4399  000A94  90D8               	bcf	status,0,c
  4400  000A96  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4401  000A98                     u1304:
  4402  000A98  2E05               	decfsz	??_digitalWrite^0,f,c
  4403  000A9A  EF4A  F005         	goto	u1305
  4404  000A9E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4405  000AA0  0AFF               	xorlw	255
  4406  000AA2  1681               	andwf	129,f,c	;volatile
  4407  000AA4  EF06  F006         	goto	l161
  4408  000AA8                     l2177:
  4409  000AA8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4410  000AAA  EF62  F005         	goto	u1310
  4411  000AAE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4412  000AB0  E107               	bnz	u1311
  4413  000AB2  0E18               	movlw	24
  4414  000AB4  5C01               	subwf	digitalWrite@pin^0,w,c
  4415  000AB6  B0D8               	btfsc	status,0,c
  4416  000AB8  EF60  F005         	goto	u1311
  4417  000ABC  EF62  F005         	goto	u1310
  4418  000AC0                     u1311:
  4419  000AC0  EF90  F005         	goto	l2185
  4420  000AC4                     u1310:
  4421  000AC4                     
  4422                           ;io.c: 24:         pin -=16;
  4423  000AC4  0EF0               	movlw	240
  4424  000AC6  2601               	addwf	digitalWrite@pin^0,f,c
  4425  000AC8  0EFF               	movlw	255
  4426  000ACA  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4427                           
  4428                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4429  000ACC  5003               	movf	digitalWrite@value^0,w,c
  4430  000ACE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4431  000AD0  B4D8               	btfsc	status,2,c
  4432  000AD2  EF6D  F005         	goto	u1321
  4433  000AD6  EF6F  F005         	goto	u1320
  4434  000ADA                     u1321:
  4435  000ADA  EF7F  F005         	goto	l2183
  4436  000ADE                     u1320:
  4437  000ADE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4438  000AE2  0E01               	movlw	1
  4439  000AE4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4440  000AE6  2A05               	incf	??_digitalWrite^0,f,c
  4441  000AE8  EF78  F005         	goto	u1334
  4442  000AEC                     u1335:
  4443  000AEC  90D8               	bcf	status,0,c
  4444  000AEE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4445  000AF0                     u1334:
  4446  000AF0  2E05               	decfsz	??_digitalWrite^0,f,c
  4447  000AF2  EF76  F005         	goto	u1335
  4448  000AF6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4449  000AF8  1282               	iorwf	130,f,c	;volatile
  4450  000AFA  EF06  F006         	goto	l161
  4451  000AFE                     l2183:
  4452  000AFE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4453  000B02  0E01               	movlw	1
  4454  000B04  6E06               	movwf	(??_digitalWrite+1)^0,c
  4455  000B06  2A05               	incf	??_digitalWrite^0,f,c
  4456  000B08  EF88  F005         	goto	u1344
  4457  000B0C                     u1345:
  4458  000B0C  90D8               	bcf	status,0,c
  4459  000B0E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4460  000B10                     u1344:
  4461  000B10  2E05               	decfsz	??_digitalWrite^0,f,c
  4462  000B12  EF86  F005         	goto	u1345
  4463  000B16  5006               	movf	(??_digitalWrite+1)^0,w,c
  4464  000B18  0AFF               	xorlw	255
  4465  000B1A  1682               	andwf	130,f,c	;volatile
  4466  000B1C  EF06  F006         	goto	l161
  4467  000B20                     l2185:
  4468  000B20  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4469  000B22  EF9E  F005         	goto	u1350
  4470  000B26  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4471  000B28  E107               	bnz	u1351
  4472  000B2A  0E20               	movlw	32
  4473  000B2C  5C01               	subwf	digitalWrite@pin^0,w,c
  4474  000B2E  B0D8               	btfsc	status,0,c
  4475  000B30  EF9C  F005         	goto	u1351
  4476  000B34  EF9E  F005         	goto	u1350
  4477  000B38                     u1351:
  4478  000B38  EFCC  F005         	goto	l2193
  4479  000B3C                     u1350:
  4480  000B3C                     
  4481                           ;io.c: 28:         pin -=24;
  4482  000B3C  0EE8               	movlw	232
  4483  000B3E  2601               	addwf	digitalWrite@pin^0,f,c
  4484  000B40  0EFF               	movlw	255
  4485  000B42  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4486                           
  4487                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4488  000B44  5003               	movf	digitalWrite@value^0,w,c
  4489  000B46  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4490  000B48  B4D8               	btfsc	status,2,c
  4491  000B4A  EFA9  F005         	goto	u1361
  4492  000B4E  EFAB  F005         	goto	u1360
  4493  000B52                     u1361:
  4494  000B52  EFBB  F005         	goto	l2191
  4495  000B56                     u1360:
  4496  000B56  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4497  000B5A  0E01               	movlw	1
  4498  000B5C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4499  000B5E  2A05               	incf	??_digitalWrite^0,f,c
  4500  000B60  EFB4  F005         	goto	u1374
  4501  000B64                     u1375:
  4502  000B64  90D8               	bcf	status,0,c
  4503  000B66  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4504  000B68                     u1374:
  4505  000B68  2E05               	decfsz	??_digitalWrite^0,f,c
  4506  000B6A  EFB2  F005         	goto	u1375
  4507  000B6E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4508  000B70  1283               	iorwf	131,f,c	;volatile
  4509  000B72  EF06  F006         	goto	l161
  4510  000B76                     l2191:
  4511  000B76  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4512  000B7A  0E01               	movlw	1
  4513  000B7C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4514  000B7E  2A05               	incf	??_digitalWrite^0,f,c
  4515  000B80  EFC4  F005         	goto	u1384
  4516  000B84                     u1385:
  4517  000B84  90D8               	bcf	status,0,c
  4518  000B86  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4519  000B88                     u1384:
  4520  000B88  2E05               	decfsz	??_digitalWrite^0,f,c
  4521  000B8A  EFC2  F005         	goto	u1385
  4522  000B8E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4523  000B90  0AFF               	xorlw	255
  4524  000B92  1683               	andwf	131,f,c	;volatile
  4525  000B94  EF06  F006         	goto	l161
  4526  000B98                     l2193:
  4527  000B98  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4528  000B9A  EFDA  F005         	goto	u1390
  4529  000B9E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4530  000BA0  E107               	bnz	u1391
  4531  000BA2  0E28               	movlw	40
  4532  000BA4  5C01               	subwf	digitalWrite@pin^0,w,c
  4533  000BA6  B0D8               	btfsc	status,0,c
  4534  000BA8  EFD8  F005         	goto	u1391
  4535  000BAC  EFDA  F005         	goto	u1390
  4536  000BB0                     u1391:
  4537  000BB0  EF06  F006         	goto	l161
  4538  000BB4                     u1390:
  4539  000BB4                     
  4540                           ;io.c: 32:         pin -=32;
  4541  000BB4  0EE0               	movlw	224
  4542  000BB6  2601               	addwf	digitalWrite@pin^0,f,c
  4543  000BB8  0EFF               	movlw	255
  4544  000BBA  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4545                           
  4546                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4547  000BBC  5003               	movf	digitalWrite@value^0,w,c
  4548  000BBE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4549  000BC0  B4D8               	btfsc	status,2,c
  4550  000BC2  EFE5  F005         	goto	u1401
  4551  000BC6  EFE7  F005         	goto	u1400
  4552  000BCA                     u1401:
  4553  000BCA  EFF7  F005         	goto	l2199
  4554  000BCE                     u1400:
  4555  000BCE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4556  000BD2  0E01               	movlw	1
  4557  000BD4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4558  000BD6  2A05               	incf	??_digitalWrite^0,f,c
  4559  000BD8  EFF0  F005         	goto	u1414
  4560  000BDC                     u1415:
  4561  000BDC  90D8               	bcf	status,0,c
  4562  000BDE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4563  000BE0                     u1414:
  4564  000BE0  2E05               	decfsz	??_digitalWrite^0,f,c
  4565  000BE2  EFEE  F005         	goto	u1415
  4566  000BE6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4567  000BE8  1284               	iorwf	132,f,c	;volatile
  4568  000BEA  EF06  F006         	goto	l161
  4569  000BEE                     l2199:
  4570  000BEE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4571  000BF2  0E01               	movlw	1
  4572  000BF4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4573  000BF6  2A05               	incf	??_digitalWrite^0,f,c
  4574  000BF8  EF00  F006         	goto	u1424
  4575  000BFC                     u1425:
  4576  000BFC  90D8               	bcf	status,0,c
  4577  000BFE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4578  000C00                     u1424:
  4579  000C00  2E05               	decfsz	??_digitalWrite^0,f,c
  4580  000C02  EFFE  F005         	goto	u1425
  4581  000C06  5006               	movf	(??_digitalWrite+1)^0,w,c
  4582  000C08  0AFF               	xorlw	255
  4583  000C0A  1684               	andwf	132,f,c	;volatile
  4584  000C0C                     l161:
  4585  000C0C  0012               	return		;funcret
  4586  000C0E                     __end_of_digitalWrite:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _delayMicro *****************
  4590 ;; Defined at:
  4591 ;;		line 5 in file "lcd.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  a               2    0[COMRAM] int 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  i               2    0        volatile int 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		None
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4605 ;;      Params:         2       0       0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0
  4608 ;;      Totals:         2       0       0       0       0       0       0
  4609 ;;Total ram usage:        2 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_pulseEnablePin
  4615 ;;		_lcdChar
  4616 ;;		_lcdInit
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text30
  4621  0020B2                     __ptext30:
  4622                           	callstack 0
  4623  0020B2                     _delayMicro:
  4624                           	callstack 25
  4625  0020B2  0012               	return		;funcret
  4626  0020B4                     __end_of_delayMicro:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _delayMili *****************
  4630 ;; Defined at:
  4631 ;;		line 10 in file "lcd.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  a               2    0[COMRAM] int 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  i               2    3[COMRAM] volatile int 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4645 ;;      Params:         2       0       0       0       0       0       0
  4646 ;;      Locals:         2       0       0       0       0       0       0
  4647 ;;      Temps:          1       0       0       0       0       0       0
  4648 ;;      Totals:         5       0       0       0       0       0       0
  4649 ;;Total ram usage:        5 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_lcdCommand
  4655 ;;		_lcdInit
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text31
  4660  001EEC                     __ptext31:
  4661                           	callstack 0
  4662  001EEC                     _delayMili:
  4663                           	callstack 28
  4664  001EEC                     
  4665                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4666  001EEC  0E00               	movlw	0
  4667  001EEE  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4668  001EF0  0E00               	movlw	0
  4669  001EF2  6E04               	movwf	delayMili@i^0,c	;volatile
  4670  001EF4  EF7E  F00F         	goto	l2233
  4671  001EF8                     l2231:
  4672                           
  4673                           ;lcd.c: 15:  }
  4674  001EF8  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4675  001EFA  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4676  001EFC                     l2233:
  4677  001EFC  5001               	movf	delayMili@a^0,w,c
  4678  001EFE  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4679  001F00  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4680  001F02  0A80               	xorlw	128
  4681  001F04  6E03               	movwf	??_delayMili^0,c
  4682  001F06  5002               	movf	(delayMili@a+1)^0,w,c
  4683  001F08  0A80               	xorlw	128
  4684  001F0A  5803               	subwfb	??_delayMili^0,w,c
  4685  001F0C  A0D8               	btfss	status,0,c
  4686  001F0E  EF8B  F00F         	goto	u1441
  4687  001F12  EF8D  F00F         	goto	u1440
  4688  001F16                     u1441:
  4689  001F16  EF7C  F00F         	goto	l2231
  4690  001F1A                     u1440:
  4691  001F1A  0012               	return		;funcret
  4692  001F1C                     __end_of_delayMili:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _kpInit *****************
  4696 ;; Defined at:
  4697 ;;		line 54 in file "keypad.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4711 ;;      Params:         0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 2
  4718 ;; This function calls:
  4719 ;;		_pinMode
  4720 ;;		_soInit
  4721 ;; This function is called by:
  4722 ;;		_main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text32
  4727  001EBA                     __ptext32:
  4728                           	callstack 0
  4729  001EBA                     _kpInit:
  4730                           	callstack 28
  4731  001EBA                     
  4732                           ;keypad.c: 55:   soInit();
  4733  001EBA  EC21  F00F         	call	_soInit	;wreg free
  4734                           
  4735                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  4736  001EBE  0E00               	movlw	0
  4737  001EC0  6E02               	movwf	(pinMode@pin+1)^0,c
  4738  001EC2  0E0A               	movlw	10
  4739  001EC4  6E01               	movwf	pinMode@pin^0,c
  4740  001EC6  0E00               	movlw	0
  4741  001EC8  6E04               	movwf	(pinMode@type+1)^0,c
  4742  001ECA  0E01               	movlw	1
  4743  001ECC  6E03               	movwf	pinMode@type^0,c
  4744  001ECE  EC07  F006         	call	_pinMode	;wreg free
  4745                           
  4746                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  4747  001ED2  0E00               	movlw	0
  4748  001ED4  6E02               	movwf	(pinMode@pin+1)^0,c
  4749  001ED6  0E09               	movlw	9
  4750  001ED8  6E01               	movwf	pinMode@pin^0,c
  4751  001EDA  0E00               	movlw	0
  4752  001EDC  6E04               	movwf	(pinMode@type+1)^0,c
  4753  001EDE  0E01               	movlw	1
  4754  001EE0  6E03               	movwf	pinMode@type^0,c
  4755  001EE2  EC07  F006         	call	_pinMode	;wreg free
  4756  001EE6                     
  4757                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  4758  001EE6  0E0C               	movlw	12
  4759  001EE8  6EC1               	movwf	193,c	;volatile
  4760  001EEA  0012               	return		;funcret
  4761  001EEC                     __end_of_kpInit:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _soInit *****************
  4765 ;; Defined at:
  4766 ;;		line 3 in file "so.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         0       0       0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0
  4783 ;;      Totals:         0       0       0       0       0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 1
  4787 ;; This function calls:
  4788 ;;		_pinMode
  4789 ;; This function is called by:
  4790 ;;		_kpInit
  4791 ;;		_lcdInit
  4792 ;;		_ssdInit
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text33
  4797  001E42                     __ptext33:
  4798                           	callstack 0
  4799  001E42                     _soInit:
  4800                           	callstack 28
  4801  001E42                     
  4802                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4803  001E42  0E00               	movlw	0
  4804  001E44  6E02               	movwf	(pinMode@pin+1)^0,c
  4805  001E46  0E1F               	movlw	31
  4806  001E48  6E01               	movwf	pinMode@pin^0,c
  4807  001E4A  0E00               	movlw	0
  4808  001E4C  6E04               	movwf	(pinMode@type+1)^0,c
  4809  001E4E  0E00               	movlw	0
  4810  001E50  6E03               	movwf	pinMode@type^0,c
  4811  001E52  EC07  F006         	call	_pinMode	;wreg free
  4812                           
  4813                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4814  001E56  0E00               	movlw	0
  4815  001E58  6E02               	movwf	(pinMode@pin+1)^0,c
  4816  001E5A  0E08               	movlw	8
  4817  001E5C  6E01               	movwf	pinMode@pin^0,c
  4818  001E5E  0E00               	movlw	0
  4819  001E60  6E04               	movwf	(pinMode@type+1)^0,c
  4820  001E62  0E00               	movlw	0
  4821  001E64  6E03               	movwf	pinMode@type^0,c
  4822  001E66  EC07  F006         	call	_pinMode	;wreg free
  4823                           
  4824                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4825  001E6A  0E00               	movlw	0
  4826  001E6C  6E02               	movwf	(pinMode@pin+1)^0,c
  4827  001E6E  0E1E               	movlw	30
  4828  001E70  6E01               	movwf	pinMode@pin^0,c
  4829  001E72  0E00               	movlw	0
  4830  001E74  6E04               	movwf	(pinMode@type+1)^0,c
  4831  001E76  0E00               	movlw	0
  4832  001E78  6E03               	movwf	pinMode@type^0,c
  4833  001E7A  EC07  F006         	call	_pinMode	;wreg free
  4834  001E7E  0012               	return		;funcret
  4835  001E80                     __end_of_soInit:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _calcula *****************
  4839 ;; Defined at:
  4840 ;;		line 176 in file "mainEmb.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4854 ;;      Params:         0       0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0
  4857 ;;      Totals:         0       0       0       0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 2
  4861 ;; This function calls:
  4862 ;;		___lmul
  4863 ;;		_apagaDisplay
  4864 ;;		_mostraDisplay
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text34
  4871  001944                     __ptext34:
  4872                           	callstack 0
  4873  001944                     _calcula:
  4874                           	callstack 28
  4875  001944                     
  4876                           ;mainEmb.c: 178:     temperatura = (30*pot)/1024;
  4877  001944  C046  F001         	movff	_pot,___lmul@multiplier
  4878  001948  C047  F002         	movff	_pot+1,___lmul@multiplier+1
  4879  00194C  C048  F003         	movff	_pot+2,___lmul@multiplier+2
  4880  001950  C049  F004         	movff	_pot+3,___lmul@multiplier+3
  4881  001954  0E1E               	movlw	30
  4882  001956  6E05               	movwf	___lmul@multiplicand^0,c
  4883  001958  0E00               	movlw	0
  4884  00195A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4885  00195C  0E00               	movlw	0
  4886  00195E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4887  001960  0E00               	movlw	0
  4888  001962  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4889  001964  ECA9  F00D         	call	___lmul	;wreg free
  4890  001968  0E0B               	movlw	11
  4891  00196A  EFBC  F00C         	goto	u2170
  4892  00196E                     u2175:
  4893  00196E  90D8               	bcf	status,0,c
  4894  001970  3204               	rrcf	(?___lmul+3)^0,f,c
  4895  001972  3203               	rrcf	(?___lmul+2)^0,f,c
  4896  001974  3202               	rrcf	(?___lmul+1)^0,f,c
  4897  001976  3201               	rrcf	?___lmul^0,f,c
  4898  001978                     u2170:
  4899  001978  2EE8               	decfsz	wreg,f,c
  4900  00197A  EFB7  F00C         	goto	u2175
  4901  00197E  C001  F02E         	movff	?___lmul,_temperatura
  4902  001982  C002  F02F         	movff	?___lmul+1,_temperatura+1
  4903  001986  C003  F030         	movff	?___lmul+2,_temperatura+2
  4904  00198A  C004  F031         	movff	?___lmul+3,_temperatura+3
  4905  00198E                     
  4906                           ;mainEmb.c: 179:     if(temperatura >= tempMax){
  4907  00198E  5032               	movf	_tempMax^0,w,c
  4908  001990  5C2E               	subwf	_temperatura^0,w,c
  4909  001992  5033               	movf	(_tempMax+1)^0,w,c
  4910  001994  582F               	subwfb	(_temperatura+1)^0,w,c
  4911  001996  5034               	movf	(_tempMax+2)^0,w,c
  4912  001998  5830               	subwfb	(_temperatura+2)^0,w,c
  4913  00199A  5035               	movf	(_tempMax+3)^0,w,c
  4914  00199C  5831               	subwfb	(_temperatura+3)^0,w,c
  4915  00199E  A0D8               	btfss	status,0,c
  4916  0019A0  EFD4  F00C         	goto	u2181
  4917  0019A4  EFD6  F00C         	goto	u2180
  4918  0019A8                     u2181:
  4919  0019A8  EFDA  F00C         	goto	l2801
  4920  0019AC                     u2180:
  4921  0019AC                     
  4922                           ;mainEmb.c: 180:         mostraDisplay();
  4923  0019AC  EC43  F00A         	call	_mostraDisplay	;wreg free
  4924                           
  4925                           ;mainEmb.c: 181:     }
  4926  0019B0  EFEB  F00C         	goto	l541
  4927  0019B4                     l2801:
  4928  0019B4  5032               	movf	_tempMax^0,w,c
  4929  0019B6  5C2E               	subwf	_temperatura^0,w,c
  4930  0019B8  5033               	movf	(_tempMax+1)^0,w,c
  4931  0019BA  582F               	subwfb	(_temperatura+1)^0,w,c
  4932  0019BC  5034               	movf	(_tempMax+2)^0,w,c
  4933  0019BE  5830               	subwfb	(_temperatura+2)^0,w,c
  4934  0019C0  5035               	movf	(_tempMax+3)^0,w,c
  4935  0019C2  5831               	subwfb	(_temperatura+3)^0,w,c
  4936  0019C4  B0D8               	btfsc	status,0,c
  4937  0019C6  EFE7  F00C         	goto	u2191
  4938  0019CA  EFE9  F00C         	goto	u2190
  4939  0019CE                     u2191:
  4940  0019CE  EFEB  F00C         	goto	l541
  4941  0019D2                     u2190:
  4942  0019D2                     
  4943                           ;mainEmb.c: 183:         apagaDisplay();
  4944  0019D2  ECCE  F00F         	call	_apagaDisplay	;wreg free
  4945  0019D6                     l541:
  4946  0019D6  0012               	return		;funcret
  4947  0019D8                     __end_of_calcula:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _mostraDisplay *****************
  4951 ;; Defined at:
  4952 ;;		line 45 in file "mainEmb.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  v3              2   40[COMRAM] int 
  4957 ;;  v2              2   38[COMRAM] int 
  4958 ;;  v1              2   36[COMRAM] int 
  4959 ;;  v0              2   34[COMRAM] int 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         0       0       0       0       0       0       0
  4970 ;;      Locals:         8       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         8       0       0       0       0       0       0
  4973 ;;Total ram usage:        8 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 1
  4976 ;; This function calls:
  4977 ;;		___lldiv
  4978 ;;		___llmod
  4979 ;;		_ssdDigit
  4980 ;; This function is called by:
  4981 ;;		_calcula
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text35
  4986  001486                     __ptext35:
  4987                           	callstack 0
  4988  001486                     _mostraDisplay:
  4989                           	callstack 28
  4990  001486                     
  4991                           ;mainEmb.c: 46:     int v0,v1,v2,v3;;mainEmb.c: 47:     v0 = ((tempMax / 1000) % 10);
  4992  001486  0EE8               	movlw	232
  4993  001488  6E11               	movwf	___lldiv@divisor^0,c
  4994  00148A  0E03               	movlw	3
  4995  00148C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  4996  00148E  0E00               	movlw	0
  4997  001490  6E13               	movwf	(___lldiv@divisor+2)^0,c
  4998  001492  0E00               	movlw	0
  4999  001494  6E14               	movwf	(___lldiv@divisor+3)^0,c
  5000  001496  C032  F00D         	movff	_tempMax,___lldiv@dividend
  5001  00149A  C033  F00E         	movff	_tempMax+1,___lldiv@dividend+1
  5002  00149E  C034  F00F         	movff	_tempMax+2,___lldiv@dividend+2
  5003  0014A2  C035  F010         	movff	_tempMax+3,___lldiv@dividend+3
  5004  0014A6  EC50  F00C         	call	___lldiv	;wreg free
  5005  0014AA  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  5006  0014AE  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  5007  0014B2  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  5008  0014B6  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  5009  0014BA  0E0A               	movlw	10
  5010  0014BC  6E1E               	movwf	___llmod@divisor^0,c
  5011  0014BE  0E00               	movlw	0
  5012  0014C0  6E1F               	movwf	(___llmod@divisor+1)^0,c
  5013  0014C2  0E00               	movlw	0
  5014  0014C4  6E20               	movwf	(___llmod@divisor+2)^0,c
  5015  0014C6  0E00               	movlw	0
  5016  0014C8  6E21               	movwf	(___llmod@divisor+3)^0,c
  5017  0014CA  ECEC  F00C         	call	___llmod	;wreg free
  5018  0014CE  C01A  F023         	movff	?___llmod,mostraDisplay@v0
  5019  0014D2  C01B  F024         	movff	?___llmod+1,mostraDisplay@v0+1
  5020                           
  5021                           ;mainEmb.c: 48:     v1 = ((tempMax / 100) % 10);
  5022  0014D6  0E64               	movlw	100
  5023  0014D8  6E11               	movwf	___lldiv@divisor^0,c
  5024  0014DA  0E00               	movlw	0
  5025  0014DC  6E12               	movwf	(___lldiv@divisor+1)^0,c
  5026  0014DE  0E00               	movlw	0
  5027  0014E0  6E13               	movwf	(___lldiv@divisor+2)^0,c
  5028  0014E2  0E00               	movlw	0
  5029  0014E4  6E14               	movwf	(___lldiv@divisor+3)^0,c
  5030  0014E6  C032  F00D         	movff	_tempMax,___lldiv@dividend
  5031  0014EA  C033  F00E         	movff	_tempMax+1,___lldiv@dividend+1
  5032  0014EE  C034  F00F         	movff	_tempMax+2,___lldiv@dividend+2
  5033  0014F2  C035  F010         	movff	_tempMax+3,___lldiv@dividend+3
  5034  0014F6  EC50  F00C         	call	___lldiv	;wreg free
  5035  0014FA  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  5036  0014FE  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  5037  001502  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  5038  001506  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  5039  00150A  0E0A               	movlw	10
  5040  00150C  6E1E               	movwf	___llmod@divisor^0,c
  5041  00150E  0E00               	movlw	0
  5042  001510  6E1F               	movwf	(___llmod@divisor+1)^0,c
  5043  001512  0E00               	movlw	0
  5044  001514  6E20               	movwf	(___llmod@divisor+2)^0,c
  5045  001516  0E00               	movlw	0
  5046  001518  6E21               	movwf	(___llmod@divisor+3)^0,c
  5047  00151A  ECEC  F00C         	call	___llmod	;wreg free
  5048  00151E  C01A  F025         	movff	?___llmod,mostraDisplay@v1
  5049  001522  C01B  F026         	movff	?___llmod+1,mostraDisplay@v1+1
  5050                           
  5051                           ;mainEmb.c: 49:     v2 = ((tempMax / 10) % 10);
  5052  001526  0E0A               	movlw	10
  5053  001528  6E11               	movwf	___lldiv@divisor^0,c
  5054  00152A  0E00               	movlw	0
  5055  00152C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  5056  00152E  0E00               	movlw	0
  5057  001530  6E13               	movwf	(___lldiv@divisor+2)^0,c
  5058  001532  0E00               	movlw	0
  5059  001534  6E14               	movwf	(___lldiv@divisor+3)^0,c
  5060  001536  C032  F00D         	movff	_tempMax,___lldiv@dividend
  5061  00153A  C033  F00E         	movff	_tempMax+1,___lldiv@dividend+1
  5062  00153E  C034  F00F         	movff	_tempMax+2,___lldiv@dividend+2
  5063  001542  C035  F010         	movff	_tempMax+3,___lldiv@dividend+3
  5064  001546  EC50  F00C         	call	___lldiv	;wreg free
  5065  00154A  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  5066  00154E  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  5067  001552  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  5068  001556  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  5069  00155A  0E0A               	movlw	10
  5070  00155C  6E1E               	movwf	___llmod@divisor^0,c
  5071  00155E  0E00               	movlw	0
  5072  001560  6E1F               	movwf	(___llmod@divisor+1)^0,c
  5073  001562  0E00               	movlw	0
  5074  001564  6E20               	movwf	(___llmod@divisor+2)^0,c
  5075  001566  0E00               	movlw	0
  5076  001568  6E21               	movwf	(___llmod@divisor+3)^0,c
  5077  00156A  ECEC  F00C         	call	___llmod	;wreg free
  5078  00156E  C01A  F027         	movff	?___llmod,mostraDisplay@v2
  5079  001572  C01B  F028         	movff	?___llmod+1,mostraDisplay@v2+1
  5080                           
  5081                           ;mainEmb.c: 50:     v3 = ((tempMax / 1) % 10);
  5082  001576  C032  F01A         	movff	_tempMax,___llmod@dividend
  5083  00157A  C033  F01B         	movff	_tempMax+1,___llmod@dividend+1
  5084  00157E  C034  F01C         	movff	_tempMax+2,___llmod@dividend+2
  5085  001582  C035  F01D         	movff	_tempMax+3,___llmod@dividend+3
  5086  001586  0E0A               	movlw	10
  5087  001588  6E1E               	movwf	___llmod@divisor^0,c
  5088  00158A  0E00               	movlw	0
  5089  00158C  6E1F               	movwf	(___llmod@divisor+1)^0,c
  5090  00158E  0E00               	movlw	0
  5091  001590  6E20               	movwf	(___llmod@divisor+2)^0,c
  5092  001592  0E00               	movlw	0
  5093  001594  6E21               	movwf	(___llmod@divisor+3)^0,c
  5094  001596  ECEC  F00C         	call	___llmod	;wreg free
  5095  00159A  C01A  F029         	movff	?___llmod,mostraDisplay@v3
  5096  00159E  C01B  F02A         	movff	?___llmod+1,mostraDisplay@v3+1
  5097                           
  5098                           ;mainEmb.c: 51:     ssdDigit(v0,0);
  5099  0015A2  0E00               	movlw	0
  5100  0015A4  6E01               	movwf	ssdDigit@pos^0,c
  5101  0015A6  5023               	movf	mostraDisplay@v0^0,w,c
  5102  0015A8  EC0B  F00E         	call	_ssdDigit
  5103                           
  5104                           ;mainEmb.c: 52:     ssdDigit(v1,1);
  5105  0015AC  0E01               	movlw	1
  5106  0015AE  6E01               	movwf	ssdDigit@pos^0,c
  5107  0015B0  5025               	movf	mostraDisplay@v1^0,w,c
  5108  0015B2  EC0B  F00E         	call	_ssdDigit
  5109                           
  5110                           ;mainEmb.c: 53:     ssdDigit(v2,2);
  5111  0015B6  0E02               	movlw	2
  5112  0015B8  6E01               	movwf	ssdDigit@pos^0,c
  5113  0015BA  5027               	movf	mostraDisplay@v2^0,w,c
  5114  0015BC  EC0B  F00E         	call	_ssdDigit
  5115                           
  5116                           ;mainEmb.c: 54:     ssdDigit(v3,3);
  5117  0015C0  0E03               	movlw	3
  5118  0015C2  6E01               	movwf	ssdDigit@pos^0,c
  5119  0015C4  5029               	movf	mostraDisplay@v3^0,w,c
  5120  0015C6  EC0B  F00E         	call	_ssdDigit
  5121  0015CA  0012               	return		;funcret
  5122  0015CC                     __end_of_mostraDisplay:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function ___llmod *****************
  5126 ;; Defined at:
  5127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  dividend        4   25[COMRAM] unsigned long 
  5130 ;;  divisor         4   29[COMRAM] unsigned long 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  counter         1   33[COMRAM] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  4   25[COMRAM] unsigned long 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5142 ;;      Params:         8       0       0       0       0       0       0
  5143 ;;      Locals:         1       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0
  5145 ;;      Totals:         9       0       0       0       0       0       0
  5146 ;;Total ram usage:        9 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_leTemperatura
  5152 ;;		_mostraDisplay
  5153 ;;		_serialcom
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text36
  5158  0019D8                     __ptext36:
  5159                           	callstack 0
  5160  0019D8                     ___llmod:
  5161                           	callstack 29
  5162  0019D8  501E               	movf	___llmod@divisor^0,w,c
  5163  0019DA  101F               	iorwf	(___llmod@divisor+1)^0,w,c
  5164  0019DC  1020               	iorwf	(___llmod@divisor+2)^0,w,c
  5165  0019DE  1021               	iorwf	(___llmod@divisor+3)^0,w,c
  5166  0019E0  B4D8               	btfsc	status,2,c
  5167  0019E2  EFF5  F00C         	goto	u1821
  5168  0019E6  EFF7  F00C         	goto	u1820
  5169  0019EA                     u1821:
  5170  0019EA  EF27  F00D         	goto	l990
  5171  0019EE                     u1820:
  5172  0019EE  0E01               	movlw	1
  5173  0019F0  6E22               	movwf	___llmod@counter^0,c
  5174  0019F2  EF01  F00D         	goto	l2365
  5175  0019F6                     l2363:
  5176  0019F6  90D8               	bcf	status,0,c
  5177  0019F8  361E               	rlcf	___llmod@divisor^0,f,c
  5178  0019FA  361F               	rlcf	(___llmod@divisor+1)^0,f,c
  5179  0019FC  3620               	rlcf	(___llmod@divisor+2)^0,f,c
  5180  0019FE  3621               	rlcf	(___llmod@divisor+3)^0,f,c
  5181  001A00  2A22               	incf	___llmod@counter^0,f,c
  5182  001A02                     l2365:
  5183  001A02  AE21               	btfss	(___llmod@divisor+3)^0,7,c
  5184  001A04  EF06  F00D         	goto	u1831
  5185  001A08  EF08  F00D         	goto	u1830
  5186  001A0C                     u1831:
  5187  001A0C  EFFB  F00C         	goto	l2363
  5188  001A10                     u1830:
  5189  001A10                     l2367:
  5190  001A10  501E               	movf	___llmod@divisor^0,w,c
  5191  001A12  5C1A               	subwf	___llmod@dividend^0,w,c
  5192  001A14  501F               	movf	(___llmod@divisor+1)^0,w,c
  5193  001A16  581B               	subwfb	(___llmod@dividend+1)^0,w,c
  5194  001A18  5020               	movf	(___llmod@divisor+2)^0,w,c
  5195  001A1A  581C               	subwfb	(___llmod@dividend+2)^0,w,c
  5196  001A1C  5021               	movf	(___llmod@divisor+3)^0,w,c
  5197  001A1E  581D               	subwfb	(___llmod@dividend+3)^0,w,c
  5198  001A20  A0D8               	btfss	status,0,c
  5199  001A22  EF15  F00D         	goto	u1841
  5200  001A26  EF17  F00D         	goto	u1840
  5201  001A2A                     u1841:
  5202  001A2A  EF1F  F00D         	goto	l2371
  5203  001A2E                     u1840:
  5204  001A2E  501E               	movf	___llmod@divisor^0,w,c
  5205  001A30  5E1A               	subwf	___llmod@dividend^0,f,c
  5206  001A32  501F               	movf	(___llmod@divisor+1)^0,w,c
  5207  001A34  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
  5208  001A36  5020               	movf	(___llmod@divisor+2)^0,w,c
  5209  001A38  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
  5210  001A3A  5021               	movf	(___llmod@divisor+3)^0,w,c
  5211  001A3C  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
  5212  001A3E                     l2371:
  5213  001A3E  90D8               	bcf	status,0,c
  5214  001A40  3221               	rrcf	(___llmod@divisor+3)^0,f,c
  5215  001A42  3220               	rrcf	(___llmod@divisor+2)^0,f,c
  5216  001A44  321F               	rrcf	(___llmod@divisor+1)^0,f,c
  5217  001A46  321E               	rrcf	___llmod@divisor^0,f,c
  5218  001A48  2E22               	decfsz	___llmod@counter^0,f,c
  5219  001A4A  EF08  F00D         	goto	l2367
  5220  001A4E                     l990:
  5221  001A4E  C01A  F01A         	movff	___llmod@dividend,?___llmod
  5222  001A52  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  5223  001A56  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  5224  001A5A  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  5225  001A5E  0012               	return		;funcret
  5226  001A60                     __end_of___llmod:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function ___lldiv *****************
  5230 ;; Defined at:
  5231 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  dividend        4   12[COMRAM] unsigned long 
  5234 ;;  divisor         4   16[COMRAM] unsigned long 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  quotient        4   20[COMRAM] unsigned long 
  5237 ;;  counter         1   24[COMRAM] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  4   12[COMRAM] unsigned long 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5247 ;;      Params:         8       0       0       0       0       0       0
  5248 ;;      Locals:         5       0       0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0
  5250 ;;      Totals:        13       0       0       0       0       0       0
  5251 ;;Total ram usage:       13 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_leTemperatura
  5257 ;;		_mostraDisplay
  5258 ;;		_serialcom
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text37
  5263  0018A0                     __ptext37:
  5264                           	callstack 0
  5265  0018A0                     ___lldiv:
  5266                           	callstack 29
  5267  0018A0  0E00               	movlw	0
  5268  0018A2  6E15               	movwf	___lldiv@quotient^0,c
  5269  0018A4  0E00               	movlw	0
  5270  0018A6  6E16               	movwf	(___lldiv@quotient+1)^0,c
  5271  0018A8  0E00               	movlw	0
  5272  0018AA  6E17               	movwf	(___lldiv@quotient+2)^0,c
  5273  0018AC  0E00               	movlw	0
  5274  0018AE  6E18               	movwf	(___lldiv@quotient+3)^0,c
  5275  0018B0  5011               	movf	___lldiv@divisor^0,w,c
  5276  0018B2  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  5277  0018B4  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  5278  0018B6  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  5279  0018B8  B4D8               	btfsc	status,2,c
  5280  0018BA  EF61  F00C         	goto	u1791
  5281  0018BE  EF63  F00C         	goto	u1790
  5282  0018C2                     u1791:
  5283  0018C2  EF99  F00C         	goto	l597
  5284  0018C6                     u1790:
  5285  0018C6  0E01               	movlw	1
  5286  0018C8  6E19               	movwf	___lldiv@counter^0,c
  5287  0018CA  EF6D  F00C         	goto	l2345
  5288  0018CE                     l2343:
  5289  0018CE  90D8               	bcf	status,0,c
  5290  0018D0  3611               	rlcf	___lldiv@divisor^0,f,c
  5291  0018D2  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  5292  0018D4  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  5293  0018D6  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  5294  0018D8  2A19               	incf	___lldiv@counter^0,f,c
  5295  0018DA                     l2345:
  5296  0018DA  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  5297  0018DC  EF72  F00C         	goto	u1801
  5298  0018E0  EF74  F00C         	goto	u1800
  5299  0018E4                     u1801:
  5300  0018E4  EF67  F00C         	goto	l2343
  5301  0018E8                     u1800:
  5302  0018E8                     l2347:
  5303  0018E8  90D8               	bcf	status,0,c
  5304  0018EA  3615               	rlcf	___lldiv@quotient^0,f,c
  5305  0018EC  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  5306  0018EE  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  5307  0018F0  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  5308  0018F2  5011               	movf	___lldiv@divisor^0,w,c
  5309  0018F4  5C0D               	subwf	___lldiv@dividend^0,w,c
  5310  0018F6  5012               	movf	(___lldiv@divisor+1)^0,w,c
  5311  0018F8  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  5312  0018FA  5013               	movf	(___lldiv@divisor+2)^0,w,c
  5313  0018FC  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  5314  0018FE  5014               	movf	(___lldiv@divisor+3)^0,w,c
  5315  001900  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  5316  001902  A0D8               	btfss	status,0,c
  5317  001904  EF86  F00C         	goto	u1811
  5318  001908  EF88  F00C         	goto	u1810
  5319  00190C                     u1811:
  5320  00190C  EF91  F00C         	goto	l2355
  5321  001910                     u1810:
  5322  001910  5011               	movf	___lldiv@divisor^0,w,c
  5323  001912  5E0D               	subwf	___lldiv@dividend^0,f,c
  5324  001914  5012               	movf	(___lldiv@divisor+1)^0,w,c
  5325  001916  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  5326  001918  5013               	movf	(___lldiv@divisor+2)^0,w,c
  5327  00191A  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  5328  00191C  5014               	movf	(___lldiv@divisor+3)^0,w,c
  5329  00191E  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  5330  001920  8015               	bsf	___lldiv@quotient^0,0,c
  5331  001922                     l2355:
  5332  001922  90D8               	bcf	status,0,c
  5333  001924  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  5334  001926  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  5335  001928  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  5336  00192A  3211               	rrcf	___lldiv@divisor^0,f,c
  5337  00192C  2E19               	decfsz	___lldiv@counter^0,f,c
  5338  00192E  EF74  F00C         	goto	l2347
  5339  001932                     l597:
  5340  001932  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  5341  001936  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  5342  00193A  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  5343  00193E  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  5344  001942  0012               	return		;funcret
  5345  001944                     __end_of___lldiv:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _apagaDisplay *****************
  5349 ;; Defined at:
  5350 ;;		line 57 in file "mainEmb.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5364 ;;      Params:         0       0       0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used: 1
  5370 ;; Hardware stack levels required when called: 1
  5371 ;; This function calls:
  5372 ;;		_ssdDigit
  5373 ;; This function is called by:
  5374 ;;		_calcula
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text38
  5379  001F9C                     __ptext38:
  5380                           	callstack 0
  5381  001F9C                     _apagaDisplay:
  5382                           	callstack 28
  5383  001F9C                     
  5384                           ;mainEmb.c: 58:     ssdDigit(0,0);
  5385  001F9C  0E00               	movlw	0
  5386  001F9E  6E01               	movwf	ssdDigit@pos^0,c
  5387  001FA0  0E00               	movlw	0
  5388  001FA2  EC0B  F00E         	call	_ssdDigit
  5389                           
  5390                           ;mainEmb.c: 59:     ssdDigit(0,1);
  5391  001FA6  0E01               	movlw	1
  5392  001FA8  6E01               	movwf	ssdDigit@pos^0,c
  5393  001FAA  0E00               	movlw	0
  5394  001FAC  EC0B  F00E         	call	_ssdDigit
  5395                           
  5396                           ;mainEmb.c: 60:     ssdDigit(0,2);
  5397  001FB0  0E02               	movlw	2
  5398  001FB2  6E01               	movwf	ssdDigit@pos^0,c
  5399  001FB4  0E00               	movlw	0
  5400  001FB6  EC0B  F00E         	call	_ssdDigit
  5401                           
  5402                           ;mainEmb.c: 61:     ssdDigit(0,3);
  5403  001FBA  0E03               	movlw	3
  5404  001FBC  6E01               	movwf	ssdDigit@pos^0,c
  5405  001FBE  0E00               	movlw	0
  5406  001FC0  EC0B  F00E         	call	_ssdDigit
  5407  001FC4  0012               	return		;funcret
  5408  001FC6                     __end_of_apagaDisplay:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _ssdDigit *****************
  5412 ;; Defined at:
  5413 ;;		line 34 in file "ssd.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  val             1    wreg     unsigned char 
  5416 ;;  pos             1    0[COMRAM] unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  val             1    1[COMRAM] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5428 ;;      Params:         1       0       0       0       0       0       0
  5429 ;;      Locals:         1       0       0       0       0       0       0
  5430 ;;      Temps:          0       0       0       0       0       0       0
  5431 ;;      Totals:         2       0       0       0       0       0       0
  5432 ;;Total ram usage:        2 bytes
  5433 ;; Hardware stack levels used: 1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_mostraDisplay
  5438 ;;		_apagaDisplay
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text39
  5443  001C16                     __ptext39:
  5444                           	callstack 0
  5445  001C16                     _ssdDigit:
  5446                           	callstack 28
  5447                           
  5448                           ;incstack = 0
  5449                           ;ssdDigit@val stored from wreg
  5450  001C16  6E02               	movwf	ssdDigit@val^0,c
  5451  001C18                     
  5452                           ;ssd.c: 35:     if (pos == 0) {
  5453  001C18  5001               	movf	ssdDigit@pos^0,w,c
  5454  001C1A  A4D8               	btfss	status,2,c
  5455  001C1C  EF12  F00E         	goto	u1751
  5456  001C20  EF14  F00E         	goto	u1750
  5457  001C24                     u1751:
  5458  001C24  EF16  F00E         	goto	l2325
  5459  001C28                     u1750:
  5460  001C28                     
  5461                           ;ssd.c: 36:         v0 = val;
  5462  001C28  C002  F042         	movff	ssdDigit@val,_v0
  5463  001C2C                     l2325:
  5464                           
  5465                           ;ssd.c: 38:     if (pos == 1) {
  5466  001C2C  0401               	decf	ssdDigit@pos^0,w,c
  5467  001C2E  A4D8               	btfss	status,2,c
  5468  001C30  EF1C  F00E         	goto	u1761
  5469  001C34  EF1E  F00E         	goto	u1760
  5470  001C38                     u1761:
  5471  001C38  EF20  F00E         	goto	l2329
  5472  001C3C                     u1760:
  5473  001C3C                     
  5474                           ;ssd.c: 39:         v1 = val;
  5475  001C3C  C002  F041         	movff	ssdDigit@val,_v1
  5476  001C40                     l2329:
  5477                           
  5478                           ;ssd.c: 41:     if (pos == 2) {
  5479  001C40  0E02               	movlw	2
  5480  001C42  1801               	xorwf	ssdDigit@pos^0,w,c
  5481  001C44  A4D8               	btfss	status,2,c
  5482  001C46  EF27  F00E         	goto	u1771
  5483  001C4A  EF29  F00E         	goto	u1770
  5484  001C4E                     u1771:
  5485  001C4E  EF2B  F00E         	goto	l2333
  5486  001C52                     u1770:
  5487  001C52                     
  5488                           ;ssd.c: 42:         v2 = val;
  5489  001C52  C002  F040         	movff	ssdDigit@val,_v2
  5490  001C56                     l2333:
  5491                           
  5492                           ;ssd.c: 44:     if (pos == 3) {
  5493  001C56  0E03               	movlw	3
  5494  001C58  1801               	xorwf	ssdDigit@pos^0,w,c
  5495  001C5A  A4D8               	btfss	status,2,c
  5496  001C5C  EF32  F00E         	goto	u1781
  5497  001C60  EF34  F00E         	goto	u1780
  5498  001C64                     u1781:
  5499  001C64  EF36  F00E         	goto	l413
  5500  001C68                     u1780:
  5501  001C68                     
  5502                           ;ssd.c: 45:         v3 = val;
  5503  001C68  C002  F03F         	movff	ssdDigit@val,_v3
  5504  001C6C                     l413:
  5505  001C6C  0012               	return		;funcret
  5506  001C6E                     __end_of_ssdDigit:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function ___lmul *****************
  5510 ;; Defined at:
  5511 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  multiplier      4    0[COMRAM] unsigned long 
  5514 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  product         4    8[COMRAM] unsigned long 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  4    0[COMRAM] unsigned long 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5526 ;;      Params:         8       0       0       0       0       0       0
  5527 ;;      Locals:         4       0       0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0
  5529 ;;      Totals:        12       0       0       0       0       0       0
  5530 ;;Total ram usage:       12 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_leTemperatura
  5536 ;;		_serialcom
  5537 ;;		_calcula
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text40
  5542  001B52                     __ptext40:
  5543                           	callstack 0
  5544  001B52                     ___lmul:
  5545                           	callstack 29
  5546  001B52  0E00               	movlw	0
  5547  001B54  6E09               	movwf	___lmul@product^0,c
  5548  001B56  0E00               	movlw	0
  5549  001B58  6E0A               	movwf	(___lmul@product+1)^0,c
  5550  001B5A  0E00               	movlw	0
  5551  001B5C  6E0B               	movwf	(___lmul@product+2)^0,c
  5552  001B5E  0E00               	movlw	0
  5553  001B60  6E0C               	movwf	(___lmul@product+3)^0,c
  5554  001B62                     l2475:
  5555  001B62  A001               	btfss	___lmul@multiplier^0,0,c
  5556  001B64  EFB6  F00D         	goto	u2051
  5557  001B68  EFB8  F00D         	goto	u2050
  5558  001B6C                     u2051:
  5559  001B6C  EFC0  F00D         	goto	l2479
  5560  001B70                     u2050:
  5561  001B70  5005               	movf	___lmul@multiplicand^0,w,c
  5562  001B72  2609               	addwf	___lmul@product^0,f,c
  5563  001B74  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5564  001B76  220A               	addwfc	(___lmul@product+1)^0,f,c
  5565  001B78  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5566  001B7A  220B               	addwfc	(___lmul@product+2)^0,f,c
  5567  001B7C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5568  001B7E  220C               	addwfc	(___lmul@product+3)^0,f,c
  5569  001B80                     l2479:
  5570  001B80  90D8               	bcf	status,0,c
  5571  001B82  3605               	rlcf	___lmul@multiplicand^0,f,c
  5572  001B84  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5573  001B86  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5574  001B88  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5575  001B8A  90D8               	bcf	status,0,c
  5576  001B8C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5577  001B8E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5578  001B90  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5579  001B92  3201               	rrcf	___lmul@multiplier^0,f,c
  5580  001B94  5001               	movf	___lmul@multiplier^0,w,c
  5581  001B96  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5582  001B98  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5583  001B9A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5584  001B9C  A4D8               	btfss	status,2,c
  5585  001B9E  EFD3  F00D         	goto	u2061
  5586  001BA2  EFD5  F00D         	goto	u2060
  5587  001BA6                     u2061:
  5588  001BA6  EFB1  F00D         	goto	l2475
  5589  001BAA                     u2060:
  5590  001BAA  C009  F001         	movff	___lmul@product,?___lmul
  5591  001BAE  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5592  001BB2  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5593  001BB6  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5594  001BBA  0012               	return		;funcret
  5595  001BBC                     __end_of___lmul:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _adcInit *****************
  5599 ;; Defined at:
  5600 ;;		line 25 in file "adc.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5614 ;;      Params:         0       0       0       0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0
  5617 ;;      Totals:         0       0       0       0       0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; Hardware stack levels required when called: 1
  5621 ;; This function calls:
  5622 ;;		_pinMode
  5623 ;; This function is called by:
  5624 ;;		_main
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text41
  5629  001DB8                     __ptext41:
  5630                           	callstack 0
  5631  001DB8                     _adcInit:
  5632                           	callstack 29
  5633  001DB8                     
  5634                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  5635  001DB8  0E00               	movlw	0
  5636  001DBA  6E02               	movwf	(pinMode@pin+1)^0,c
  5637  001DBC  0E00               	movlw	0
  5638  001DBE  6E01               	movwf	pinMode@pin^0,c
  5639  001DC0  0E00               	movlw	0
  5640  001DC2  6E04               	movwf	(pinMode@type+1)^0,c
  5641  001DC4  0E01               	movlw	1
  5642  001DC6  6E03               	movwf	pinMode@type^0,c
  5643  001DC8  EC07  F006         	call	_pinMode	;wreg free
  5644                           
  5645                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  5646  001DCC  0E00               	movlw	0
  5647  001DCE  6E02               	movwf	(pinMode@pin+1)^0,c
  5648  001DD0  0E01               	movlw	1
  5649  001DD2  6E01               	movwf	pinMode@pin^0,c
  5650  001DD4  0E00               	movlw	0
  5651  001DD6  6E04               	movwf	(pinMode@type+1)^0,c
  5652  001DD8  0E01               	movlw	1
  5653  001DDA  6E03               	movwf	pinMode@type^0,c
  5654  001DDC  EC07  F006         	call	_pinMode	;wreg free
  5655                           
  5656                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  5657  001DE0  0E00               	movlw	0
  5658  001DE2  6E02               	movwf	(pinMode@pin+1)^0,c
  5659  001DE4  0E02               	movlw	2
  5660  001DE6  6E01               	movwf	pinMode@pin^0,c
  5661  001DE8  0E00               	movlw	0
  5662  001DEA  6E04               	movwf	(pinMode@type+1)^0,c
  5663  001DEC  0E01               	movlw	1
  5664  001DEE  6E03               	movwf	pinMode@type^0,c
  5665  001DF0  EC07  F006         	call	_pinMode	;wreg free
  5666  001DF4                     
  5667                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  5668  001DF4  80C2               	bsf	194,0,c	;volatile
  5669  001DF6                     
  5670                           ;adc.c: 33:     ADCON1 = 0b00001100;
  5671  001DF6  0E0C               	movlw	12
  5672  001DF8  6EC1               	movwf	193,c	;volatile
  5673  001DFA                     
  5674                           ;adc.c: 34:     ADCON2 = 0b10101010;
  5675  001DFA  0EAA               	movlw	170
  5676  001DFC  6EC0               	movwf	192,c	;volatile
  5677  001DFE  0012               	return		;funcret
  5678  001E00                     __end_of_adcInit:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function _pinMode *****************
  5682 ;; Defined at:
  5683 ;;		line 54 in file "io.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  pin             2    0[COMRAM] int 
  5686 ;;  type            2    2[COMRAM] int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5698 ;;      Params:         4       0       0       0       0       0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0
  5700 ;;      Temps:          2       0       0       0       0       0       0
  5701 ;;      Totals:         6       0       0       0       0       0       0
  5702 ;;Total ram usage:        6 bytes
  5703 ;; Hardware stack levels used: 1
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_adcInit
  5708 ;;		_kpInit
  5709 ;;		_lcdInit
  5710 ;;		_soInit
  5711 ;;		_ssdInit
  5712 ;;		_i2cInit
  5713 ;;		_read_SCL
  5714 ;;		_read_SDA
  5715 ;;		_clear_SCL
  5716 ;;		_clear_SDA
  5717 ;;		_rgbInit
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text42
  5722  000C0E                     __ptext42:
  5723                           	callstack 0
  5724  000C0E                     _pinMode:
  5725                           	callstack 28
  5726  000C0E                     
  5727                           ;io.c: 56:     if(pin <8){
  5728  000C0E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5729  000C10  EF15  F006         	goto	u1450
  5730  000C14  5002               	movf	(pinMode@pin+1)^0,w,c
  5731  000C16  E107               	bnz	u1451
  5732  000C18  0E08               	movlw	8
  5733  000C1A  5C01               	subwf	pinMode@pin^0,w,c
  5734  000C1C  B0D8               	btfsc	status,0,c
  5735  000C1E  EF13  F006         	goto	u1451
  5736  000C22  EF15  F006         	goto	u1450
  5737  000C26                     u1451:
  5738  000C26  EF3F  F006         	goto	l2245
  5739  000C2A                     u1450:
  5740  000C2A                     
  5741                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5742  000C2A  5003               	movf	pinMode@type^0,w,c
  5743  000C2C  1004               	iorwf	(pinMode@type+1)^0,w,c
  5744  000C2E  B4D8               	btfsc	status,2,c
  5745  000C30  EF1C  F006         	goto	u1461
  5746  000C34  EF1E  F006         	goto	u1460
  5747  000C38                     u1461:
  5748  000C38  EF2E  F006         	goto	l2243
  5749  000C3C                     u1460:
  5750  000C3C  C001  F005         	movff	pinMode@pin,??_pinMode
  5751  000C40  0E01               	movlw	1
  5752  000C42  6E06               	movwf	(??_pinMode+1)^0,c
  5753  000C44  2A05               	incf	??_pinMode^0,f,c
  5754  000C46  EF27  F006         	goto	u1474
  5755  000C4A                     u1475:
  5756  000C4A  90D8               	bcf	status,0,c
  5757  000C4C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5758  000C4E                     u1474:
  5759  000C4E  2E05               	decfsz	??_pinMode^0,f,c
  5760  000C50  EF25  F006         	goto	u1475
  5761  000C54  5006               	movf	(??_pinMode+1)^0,w,c
  5762  000C56  1292               	iorwf	146,f,c	;volatile
  5763  000C58  EF2D  F007         	goto	l195
  5764  000C5C                     l2243:
  5765  000C5C  C001  F005         	movff	pinMode@pin,??_pinMode
  5766  000C60  0E01               	movlw	1
  5767  000C62  6E06               	movwf	(??_pinMode+1)^0,c
  5768  000C64  2A05               	incf	??_pinMode^0,f,c
  5769  000C66  EF37  F006         	goto	u1484
  5770  000C6A                     u1485:
  5771  000C6A  90D8               	bcf	status,0,c
  5772  000C6C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5773  000C6E                     u1484:
  5774  000C6E  2E05               	decfsz	??_pinMode^0,f,c
  5775  000C70  EF35  F006         	goto	u1485
  5776  000C74  5006               	movf	(??_pinMode+1)^0,w,c
  5777  000C76  0AFF               	xorlw	255
  5778  000C78  1692               	andwf	146,f,c	;volatile
  5779  000C7A  EF2D  F007         	goto	l195
  5780  000C7E                     l2245:
  5781  000C7E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5782  000C80  EF4D  F006         	goto	u1490
  5783  000C84  5002               	movf	(pinMode@pin+1)^0,w,c
  5784  000C86  E107               	bnz	u1491
  5785  000C88  0E10               	movlw	16
  5786  000C8A  5C01               	subwf	pinMode@pin^0,w,c
  5787  000C8C  B0D8               	btfsc	status,0,c
  5788  000C8E  EF4B  F006         	goto	u1491
  5789  000C92  EF4D  F006         	goto	u1490
  5790  000C96                     u1491:
  5791  000C96  EF7B  F006         	goto	l2253
  5792  000C9A                     u1490:
  5793  000C9A                     
  5794                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5795  000C9A  5003               	movf	pinMode@type^0,w,c
  5796  000C9C  1004               	iorwf	(pinMode@type+1)^0,w,c
  5797  000C9E  B4D8               	btfsc	status,2,c
  5798  000CA0  EF54  F006         	goto	u1501
  5799  000CA4  EF56  F006         	goto	u1500
  5800  000CA8                     u1501:
  5801  000CA8  EF68  F006         	goto	l2251
  5802  000CAC                     u1500:
  5803  000CAC  C001  F005         	movff	pinMode@pin,??_pinMode
  5804  000CB0  0EF8               	movlw	-8
  5805  000CB2  2605               	addwf	??_pinMode^0,f,c
  5806  000CB4  0E01               	movlw	1
  5807  000CB6  6E06               	movwf	(??_pinMode+1)^0,c
  5808  000CB8  2A05               	incf	??_pinMode^0,f,c
  5809  000CBA  EF61  F006         	goto	u1514
  5810  000CBE                     u1515:
  5811  000CBE  90D8               	bcf	status,0,c
  5812  000CC0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5813  000CC2                     u1514:
  5814  000CC2  2E05               	decfsz	??_pinMode^0,f,c
  5815  000CC4  EF5F  F006         	goto	u1515
  5816  000CC8  5006               	movf	(??_pinMode+1)^0,w,c
  5817  000CCA  1293               	iorwf	147,f,c	;volatile
  5818  000CCC  EF2D  F007         	goto	l195
  5819  000CD0                     l2251:
  5820  000CD0  C001  F005         	movff	pinMode@pin,??_pinMode
  5821  000CD4  0EF8               	movlw	-8
  5822  000CD6  2605               	addwf	??_pinMode^0,f,c
  5823  000CD8  0E01               	movlw	1
  5824  000CDA  6E06               	movwf	(??_pinMode+1)^0,c
  5825  000CDC  2A05               	incf	??_pinMode^0,f,c
  5826  000CDE  EF73  F006         	goto	u1524
  5827  000CE2                     u1525:
  5828  000CE2  90D8               	bcf	status,0,c
  5829  000CE4  3606               	rlcf	(??_pinMode+1)^0,f,c
  5830  000CE6                     u1524:
  5831  000CE6  2E05               	decfsz	??_pinMode^0,f,c
  5832  000CE8  EF71  F006         	goto	u1525
  5833  000CEC  5006               	movf	(??_pinMode+1)^0,w,c
  5834  000CEE  0AFF               	xorlw	255
  5835  000CF0  1693               	andwf	147,f,c	;volatile
  5836  000CF2  EF2D  F007         	goto	l195
  5837  000CF6                     l2253:
  5838  000CF6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5839  000CF8  EF89  F006         	goto	u1530
  5840  000CFC  5002               	movf	(pinMode@pin+1)^0,w,c
  5841  000CFE  E107               	bnz	u1531
  5842  000D00  0E18               	movlw	24
  5843  000D02  5C01               	subwf	pinMode@pin^0,w,c
  5844  000D04  B0D8               	btfsc	status,0,c
  5845  000D06  EF87  F006         	goto	u1531
  5846  000D0A  EF89  F006         	goto	u1530
  5847  000D0E                     u1531:
  5848  000D0E  EFB7  F006         	goto	l2261
  5849  000D12                     u1530:
  5850  000D12                     
  5851                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5852  000D12  5003               	movf	pinMode@type^0,w,c
  5853  000D14  1004               	iorwf	(pinMode@type+1)^0,w,c
  5854  000D16  B4D8               	btfsc	status,2,c
  5855  000D18  EF90  F006         	goto	u1541
  5856  000D1C  EF92  F006         	goto	u1540
  5857  000D20                     u1541:
  5858  000D20  EFA4  F006         	goto	l2259
  5859  000D24                     u1540:
  5860  000D24  C001  F005         	movff	pinMode@pin,??_pinMode
  5861  000D28  0EF0               	movlw	-16
  5862  000D2A  2605               	addwf	??_pinMode^0,f,c
  5863  000D2C  0E01               	movlw	1
  5864  000D2E  6E06               	movwf	(??_pinMode+1)^0,c
  5865  000D30  2A05               	incf	??_pinMode^0,f,c
  5866  000D32  EF9D  F006         	goto	u1554
  5867  000D36                     u1555:
  5868  000D36  90D8               	bcf	status,0,c
  5869  000D38  3606               	rlcf	(??_pinMode+1)^0,f,c
  5870  000D3A                     u1554:
  5871  000D3A  2E05               	decfsz	??_pinMode^0,f,c
  5872  000D3C  EF9B  F006         	goto	u1555
  5873  000D40  5006               	movf	(??_pinMode+1)^0,w,c
  5874  000D42  1294               	iorwf	148,f,c	;volatile
  5875  000D44  EF2D  F007         	goto	l195
  5876  000D48                     l2259:
  5877  000D48  C001  F005         	movff	pinMode@pin,??_pinMode
  5878  000D4C  0EF0               	movlw	-16
  5879  000D4E  2605               	addwf	??_pinMode^0,f,c
  5880  000D50  0E01               	movlw	1
  5881  000D52  6E06               	movwf	(??_pinMode+1)^0,c
  5882  000D54  2A05               	incf	??_pinMode^0,f,c
  5883  000D56  EFAF  F006         	goto	u1564
  5884  000D5A                     u1565:
  5885  000D5A  90D8               	bcf	status,0,c
  5886  000D5C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5887  000D5E                     u1564:
  5888  000D5E  2E05               	decfsz	??_pinMode^0,f,c
  5889  000D60  EFAD  F006         	goto	u1565
  5890  000D64  5006               	movf	(??_pinMode+1)^0,w,c
  5891  000D66  0AFF               	xorlw	255
  5892  000D68  1694               	andwf	148,f,c	;volatile
  5893  000D6A  EF2D  F007         	goto	l195
  5894  000D6E                     l2261:
  5895  000D6E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5896  000D70  EFC5  F006         	goto	u1570
  5897  000D74  5002               	movf	(pinMode@pin+1)^0,w,c
  5898  000D76  E107               	bnz	u1571
  5899  000D78  0E20               	movlw	32
  5900  000D7A  5C01               	subwf	pinMode@pin^0,w,c
  5901  000D7C  B0D8               	btfsc	status,0,c
  5902  000D7E  EFC3  F006         	goto	u1571
  5903  000D82  EFC5  F006         	goto	u1570
  5904  000D86                     u1571:
  5905  000D86  EFF3  F006         	goto	l2269
  5906  000D8A                     u1570:
  5907  000D8A                     
  5908                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5909  000D8A  5003               	movf	pinMode@type^0,w,c
  5910  000D8C  1004               	iorwf	(pinMode@type+1)^0,w,c
  5911  000D8E  B4D8               	btfsc	status,2,c
  5912  000D90  EFCC  F006         	goto	u1581
  5913  000D94  EFCE  F006         	goto	u1580
  5914  000D98                     u1581:
  5915  000D98  EFE0  F006         	goto	l2267
  5916  000D9C                     u1580:
  5917  000D9C  C001  F005         	movff	pinMode@pin,??_pinMode
  5918  000DA0  0EE8               	movlw	-24
  5919  000DA2  2605               	addwf	??_pinMode^0,f,c
  5920  000DA4  0E01               	movlw	1
  5921  000DA6  6E06               	movwf	(??_pinMode+1)^0,c
  5922  000DA8  2A05               	incf	??_pinMode^0,f,c
  5923  000DAA  EFD9  F006         	goto	u1594
  5924  000DAE                     u1595:
  5925  000DAE  90D8               	bcf	status,0,c
  5926  000DB0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5927  000DB2                     u1594:
  5928  000DB2  2E05               	decfsz	??_pinMode^0,f,c
  5929  000DB4  EFD7  F006         	goto	u1595
  5930  000DB8  5006               	movf	(??_pinMode+1)^0,w,c
  5931  000DBA  1295               	iorwf	149,f,c	;volatile
  5932  000DBC  EF2D  F007         	goto	l195
  5933  000DC0                     l2267:
  5934  000DC0  C001  F005         	movff	pinMode@pin,??_pinMode
  5935  000DC4  0EE8               	movlw	-24
  5936  000DC6  2605               	addwf	??_pinMode^0,f,c
  5937  000DC8  0E01               	movlw	1
  5938  000DCA  6E06               	movwf	(??_pinMode+1)^0,c
  5939  000DCC  2A05               	incf	??_pinMode^0,f,c
  5940  000DCE  EFEB  F006         	goto	u1604
  5941  000DD2                     u1605:
  5942  000DD2  90D8               	bcf	status,0,c
  5943  000DD4  3606               	rlcf	(??_pinMode+1)^0,f,c
  5944  000DD6                     u1604:
  5945  000DD6  2E05               	decfsz	??_pinMode^0,f,c
  5946  000DD8  EFE9  F006         	goto	u1605
  5947  000DDC  5006               	movf	(??_pinMode+1)^0,w,c
  5948  000DDE  0AFF               	xorlw	255
  5949  000DE0  1695               	andwf	149,f,c	;volatile
  5950  000DE2  EF2D  F007         	goto	l195
  5951  000DE6                     l2269:
  5952  000DE6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5953  000DE8  EF01  F007         	goto	u1610
  5954  000DEC  5002               	movf	(pinMode@pin+1)^0,w,c
  5955  000DEE  E107               	bnz	u1611
  5956  000DF0  0E28               	movlw	40
  5957  000DF2  5C01               	subwf	pinMode@pin^0,w,c
  5958  000DF4  B0D8               	btfsc	status,0,c
  5959  000DF6  EFFF  F006         	goto	u1611
  5960  000DFA  EF01  F007         	goto	u1610
  5961  000DFE                     u1611:
  5962  000DFE  EF2D  F007         	goto	l195
  5963  000E02                     u1610:
  5964  000E02                     
  5965                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5966  000E02  5003               	movf	pinMode@type^0,w,c
  5967  000E04  1004               	iorwf	(pinMode@type+1)^0,w,c
  5968  000E06  B4D8               	btfsc	status,2,c
  5969  000E08  EF08  F007         	goto	u1621
  5970  000E0C  EF0A  F007         	goto	u1620
  5971  000E10                     u1621:
  5972  000E10  EF1C  F007         	goto	l2275
  5973  000E14                     u1620:
  5974  000E14  C001  F005         	movff	pinMode@pin,??_pinMode
  5975  000E18  0EE0               	movlw	-32
  5976  000E1A  2605               	addwf	??_pinMode^0,f,c
  5977  000E1C  0E01               	movlw	1
  5978  000E1E  6E06               	movwf	(??_pinMode+1)^0,c
  5979  000E20  2A05               	incf	??_pinMode^0,f,c
  5980  000E22  EF15  F007         	goto	u1634
  5981  000E26                     u1635:
  5982  000E26  90D8               	bcf	status,0,c
  5983  000E28  3606               	rlcf	(??_pinMode+1)^0,f,c
  5984  000E2A                     u1634:
  5985  000E2A  2E05               	decfsz	??_pinMode^0,f,c
  5986  000E2C  EF13  F007         	goto	u1635
  5987  000E30  5006               	movf	(??_pinMode+1)^0,w,c
  5988  000E32  1296               	iorwf	150,f,c	;volatile
  5989  000E34  EF2D  F007         	goto	l195
  5990  000E38                     l2275:
  5991  000E38  C001  F005         	movff	pinMode@pin,??_pinMode
  5992  000E3C  0EE0               	movlw	-32
  5993  000E3E  2605               	addwf	??_pinMode^0,f,c
  5994  000E40  0E01               	movlw	1
  5995  000E42  6E06               	movwf	(??_pinMode+1)^0,c
  5996  000E44  2A05               	incf	??_pinMode^0,f,c
  5997  000E46  EF27  F007         	goto	u1644
  5998  000E4A                     u1645:
  5999  000E4A  90D8               	bcf	status,0,c
  6000  000E4C  3606               	rlcf	(??_pinMode+1)^0,f,c
  6001  000E4E                     u1644:
  6002  000E4E  2E05               	decfsz	??_pinMode^0,f,c
  6003  000E50  EF25  F007         	goto	u1645
  6004  000E54  5006               	movf	(??_pinMode+1)^0,w,c
  6005  000E56  0AFF               	xorlw	255
  6006  000E58  1696               	andwf	150,f,c	;volatile
  6007  000E5A                     l195:
  6008  000E5A  0012               	return		;funcret
  6009  000E5C                     __end_of_pinMode:
  6010                           	callstack 0
  6011                           
  6012                           	psect	rparam
  6013  0000                     
  6014                           	psect	idloc
  6015                           
  6016                           ;Config register IDLOC0 @ 0x200000
  6017                           ;	unspecified, using default values
  6018  200000                     	org	2097152
  6019  200000  FF                 	db	255
  6020                           
  6021                           ;Config register IDLOC1 @ 0x200001
  6022                           ;	unspecified, using default values
  6023  200001                     	org	2097153
  6024  200001  FF                 	db	255
  6025                           
  6026                           ;Config register IDLOC2 @ 0x200002
  6027                           ;	unspecified, using default values
  6028  200002                     	org	2097154
  6029  200002  FF                 	db	255
  6030                           
  6031                           ;Config register IDLOC3 @ 0x200003
  6032                           ;	unspecified, using default values
  6033  200003                     	org	2097155
  6034  200003  FF                 	db	255
  6035                           
  6036                           ;Config register IDLOC4 @ 0x200004
  6037                           ;	unspecified, using default values
  6038  200004                     	org	2097156
  6039  200004  FF                 	db	255
  6040                           
  6041                           ;Config register IDLOC5 @ 0x200005
  6042                           ;	unspecified, using default values
  6043  200005                     	org	2097157
  6044  200005  FF                 	db	255
  6045                           
  6046                           ;Config register IDLOC6 @ 0x200006
  6047                           ;	unspecified, using default values
  6048  200006                     	org	2097158
  6049  200006  FF                 	db	255
  6050                           
  6051                           ;Config register IDLOC7 @ 0x200007
  6052                           ;	unspecified, using default values
  6053  200007                     	org	2097159
  6054  200007  FF                 	db	255
  6055                           
  6056                           	psect	config
  6057                           
  6058                           ; Padding undefined space
  6059  300000                     	org	3145728
  6060  300000  FF                 	db	255
  6061                           
  6062                           ;Config register CONFIG1H @ 0x300001
  6063                           ;	Oscillator Selection bits
  6064                           ;	OSC = HS, HS oscillator
  6065                           ;	Fail-Safe Clock Monitor Enable bit
  6066                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6067                           ;	Internal/External Oscillator Switchover bit
  6068                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6069  300001                     	org	3145729
  6070  300001  02                 	db	2
  6071                           
  6072                           ;Config register CONFIG2L @ 0x300002
  6073                           ;	Power-up Timer Enable bit
  6074                           ;	PWRT = OFF, PWRT disabled
  6075                           ;	Brown-out Reset Enable bits
  6076                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6077                           ;	Brown Out Reset Voltage bits
  6078                           ;	BORV = 0x2E, user specified literal
  6079  300002                     	org	3145730
  6080  300002  71                 	db	369
  6081                           
  6082                           ;Config register CONFIG2H @ 0x300003
  6083                           ;	Watchdog Timer Enable bit
  6084                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6085                           ;	Watchdog Timer Postscale Select bits
  6086                           ;	WDTPS = 1, 1:1
  6087  300003                     	org	3145731
  6088  300003  00                 	db	0
  6089                           
  6090                           ; Padding undefined space
  6091  300004                     	org	3145732
  6092  300004  FF                 	db	255
  6093                           
  6094                           ;Config register CONFIG3H @ 0x300005
  6095                           ;	CCP2 MUX bit
  6096                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6097                           ;	PORTB A/D Enable bit
  6098                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6099                           ;	Low-Power Timer1 Oscillator Enable bit
  6100                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6101                           ;	MCLR Pin Enable bit
  6102                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6103  300005                     	org	3145733
  6104  300005  83                 	db	131
  6105                           
  6106                           ;Config register CONFIG4L @ 0x300006
  6107                           ;	Stack Full/Underflow Reset Enable bit
  6108                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6109                           ;	Single-Supply ICSP Enable bit
  6110                           ;	LVP = OFF, Single-Supply ICSP disabled
  6111                           ;	Extended Instruction Set Enable bit
  6112                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6113                           ;	Background Debugger Enable bit
  6114                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6115  300006                     	org	3145734
  6116  300006  80                 	db	128
  6117                           
  6118                           ; Padding undefined space
  6119  300007                     	org	3145735
  6120  300007  FF                 	db	255
  6121                           
  6122                           ;Config register CONFIG5L @ 0x300008
  6123                           ;	Code Protection bit
  6124                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6125                           ;	Code Protection bit
  6126                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6127                           ;	Code Protection bit
  6128                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6129                           ;	Code Protection bit
  6130                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6131  300008                     	org	3145736
  6132  300008  0F                 	db	15
  6133                           
  6134                           ;Config register CONFIG5H @ 0x300009
  6135                           ;	Boot Block Code Protection bit
  6136                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6137                           ;	Data EEPROM Code Protection bit
  6138                           ;	CPD = OFF, Data EEPROM not code-protected
  6139  300009                     	org	3145737
  6140  300009  C0                 	db	192
  6141                           
  6142                           ;Config register CONFIG6L @ 0x30000A
  6143                           ;	Write Protection bit
  6144                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6145                           ;	Write Protection bit
  6146                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6147                           ;	Write Protection bit
  6148                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6149                           ;	Write Protection bit
  6150                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6151  30000A                     	org	3145738
  6152  30000A  0F                 	db	15
  6153                           
  6154                           ;Config register CONFIG6H @ 0x30000B
  6155                           ;	Configuration Register Write Protection bit
  6156                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6157                           ;	Boot Block Write Protection bit
  6158                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6159                           ;	Data EEPROM Write Protection bit
  6160                           ;	WRTD = OFF, Data EEPROM not write-protected
  6161  30000B                     	org	3145739
  6162  30000B  E0                 	db	224
  6163                           
  6164                           ;Config register CONFIG7L @ 0x30000C
  6165                           ;	Table Read Protection bit
  6166                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6167                           ;	Table Read Protection bit
  6168                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6169                           ;	Table Read Protection bit
  6170                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6171                           ;	Table Read Protection bit
  6172                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6173  30000C                     	org	3145740
  6174  30000C  0F                 	db	15
  6175                           
  6176                           ;Config register CONFIG7H @ 0x30000D
  6177                           ;	Boot Block Table Read Protection bit
  6178                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6179  30000D                     	org	3145741
  6180  30000D  40                 	db	64
  6181                           tosu	equ	0xFFF
  6182                           tosh	equ	0xFFE
  6183                           tosl	equ	0xFFD
  6184                           stkptr	equ	0xFFC
  6185                           pclatu	equ	0xFFB
  6186                           pclath	equ	0xFFA
  6187                           pcl	equ	0xFF9
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           prodh	equ	0xFF4
  6193                           prodl	equ	0xFF3
  6194                           indf0	equ	0xFEF
  6195                           postinc0	equ	0xFEE
  6196                           postdec0	equ	0xFED
  6197                           preinc0	equ	0xFEC
  6198                           plusw0	equ	0xFEB
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           indf1	equ	0xFE7
  6203                           postinc1	equ	0xFE6
  6204                           postdec1	equ	0xFE5
  6205                           preinc1	equ	0xFE4
  6206                           plusw1	equ	0xFE3
  6207                           fsr1h	equ	0xFE2
  6208                           fsr1l	equ	0xFE1
  6209                           bsr	equ	0xFE0
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           preinc2	equ	0xFDC
  6214                           plusw2	equ	0xFDB
  6215                           fsr2h	equ	0xFDA
  6216                           fsr2l	equ	0xFD9
  6217                           status	equ	0xFD8

Data Sizes:
    Strings     180
    Constant    26
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[17]), STR_22(CODE[8]), 
		 -> STR_21(CODE[17]), STR_20(CODE[8]), STR_19(CODE[17]), STR_18(CODE[8]), 
		 -> STR_17(CODE[17]), STR_16(CODE[8]), STR_15(CODE[17]), STR_14(CODE[8]), 
		 -> STR_13(CODE[17]), STR_12(CODE[8]), STR_11(CODE[17]), STR_10(CODE[8]), 
		 -> STR_9(CODE[17]), STR_8(CODE[8]), STR_7(CODE[17]), STR_6(CODE[8]), 
		 -> STR_5(CODE[17]), STR_4(CODE[8]), STR_3(CODE[17]), STR_2(CODE[2]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_leTemperatura
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _serialcom->___llmod
    _leTemperatura->___llmod
    _lcdPosition->_lcdCommand
    _leTeclado->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _kpDebounce->_soWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _calcula->_mostraDisplay
    _mostraDisplay->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul
    _apagaDisplay->_ssdDigit
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  410640
                                             42 COMRAM     3     3      0
                            _adcInit
                            _calcula
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdString
                          _leTeclado
                      _leTemperatura
                         _serialInit
                          _serialcom
                            _ssdInit
                          _ssdUpdate
                              _timed
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timed                                                5     5      0     120
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _serialcom                                            6     6      0   64283
                                             34 COMRAM     6     6      0
                            ___lldiv
                            ___llmod
                             ___lmul
                            _adcRead
                         _lcdCommand
                          _lcdString
                         _serialRead
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialRead                                           1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leTemperatura                                        8     8      0   93727
                                             34 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                             ___lmul
                            _adcRead
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   29437
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            3     3      0   77962
                                             20 COMRAM     3     3      0
                         _kpDebounce
                             _kpRead
                          _kpReadKey
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   31065
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _calcula                                              0     0      0    5543
                             ___lmul
                       _apagaDisplay
                      _mostraDisplay
 ---------------------------------------------------------------------------------
 (2) _mostraDisplay                                        8     8      0    3781
                                             34 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1375
                                             25 COMRAM     9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1530
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _apagaDisplay                                         0     0      0     784
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     784
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _calcula
     ___lmul
     _apagaDisplay
       _ssdDigit
     _mostraDisplay
       ___lldiv
         ___lmul (ARG)
       ___llmod
         ___lldiv (ARG)
         ___lmul (ARG)
       _ssdDigit
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _leTeclado
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _kpReadKey
     _lcdCommand
     _lcdString
   _leTemperatura
     ___lldiv
     ___llmod
     ___lmul
     _adcRead
     _lcdChar
     _lcdPosition
       _lcdCommand
     _lcdString
   _serialInit
   _serialcom
     ___lldiv
     ___llmod
     ___lmul
     _adcRead
     _lcdCommand
     _lcdString
     _serialRead
     _serialSend
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _timed
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      15        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 15:11:57 2021

    leTemperatura@degree 0023           _pulseEnablePin 1E00             lcdString@msg 000F  
                     l21 1D4C                       l22 1D68                       l15 1DFE  
                     l19 1D3E                       _v0 0042                       _v1 0041  
                     _v2 0040                       _v3 003F                       _op 003E  
                    l212 20A8                      l232 16E8                      l161 0C0C  
                    l170 1480                      l234 1700                      l218 1B50  
                    l260 1FEA                      l413 1C6C                      l237 1EEA  
                    l165 1484                      l254 1F1A                      l166 1480  
                    l511 1FC4                      l263 1C14                      l271 1EB8  
                    l423 131A                      l248 20B2                      l280 1D18  
                    l360 208E                      l440 2090                      l257 1E40  
                    l505 11AE                      l266 2048                      l274 202A  
                    l426 1CC2                      l195 0E5A                      l523 100E  
                    l443 209E                      l604 1942                      l508 15CA  
                    l541 19D6                      l381 1F9A                      l365 1F46  
                    l357 207C                      l446 200C                      l375 1E7E  
                    l535 09BE                      l368 2062                      l289 189E  
                    l449 20B0                      l378 1F70                      l386 1DB6  
                    l546 1756                      l581 1BAA                      l582 1BBA  
                    l567 1AD8                      l597 1932                      l990 1A4E  
                    l997 1A5E                      _PR2 000FCB                      u700 1B1A  
                    u701 1B16                      u710 1B4E                      u711 1B4A  
                    u694 1AFA                      u950 209E                      u695 1AF4  
                    u951 209A     __end_of_apagaDisplay 1FC6                      _pot 0046  
                    wreg 000FE8                     l2201 1F48                     l2203 1F72  
                   l2221 1DB2                     l2213 1D82                     l2205 1D6A  
                   l2301 13F0                     l1501 1B4E                     l2231 1EF8  
                   l2223 1E00                     l2215 1D9A                     l2207 1D7E  
                   l2311 1454                     l2303 140C                     l2241 0C3C  
                   l2321 1C18                     l2233 1EFC                     l2161 09C0  
                   l2225 1E14                     l2217 1DA0                     l2401 20A0  
                   l2251 0CD0                     l2243 0C5C                     l2331 1C52  
                   l2323 1C28                     l2171 0A4C                     l2163 09DC  
                   l2227 1E20                     l2219 1DA2                     l2235 1BBE  
                   l2315 202E                     l2411 1648                     l2403 15CC  
                   l2261 0D6E                     l2253 0CF6                     l2245 0C7E  
                   l2237 0C0E                     l2333 1C56                     l2325 1C2C  
                   l2341 18C6                     l2229 1EEC                     l2181 0ADE  
                   l2173 0A66                     l2165 09EE                     l2309 1438  
                   l2413 166E                     l2421 16BE                     l2405 15DC  
                   l2317 2010                     l2271 0E02                     l2263 0D8A  
                   l2255 0D12                     l2247 0C9A                     l2239 0C2A  
                   l2335 1C68                     l2327 1C3C                     l2351 1910  
                   l2343 18CE                     l2431 1E42                     l2191 0B76  
                   l2183 0AFE                     l2175 0A86                     l2167 0A0E  
                   l2423 16D6                     l2415 168C                     l2319 201E  
                   l2273 0E14                     l2265 0D9C                     l2257 0D24  
                   l2249 0CAC                     l2329 1C40                     l2353 1920  
                   l2345 18DA                     l2337 18A0                     l2361 19EE  
                   l2193 0B98                     l2185 0B20                     l2177 0AA8  
                   l2169 0A30                     l2433 1FC8                     l2425 16DC  
                   l2417 16B6                     l2409 15FC                     l2441 1EAE  
                   l2601 12AC                     l2275 0E38                     l2267 0DC0  
                   l2259 0D48                     l2355 1922                     l2347 18E8  
                   l2339 18B0                     l2371 1A3E                     l2363 19F6  
                   l2195 0BB4                     l2187 0B3C                     l2179 0AC4  
                   l2427 16E0                     l1491 1AE2                     l2443 1CC4  
                   l2435 1E80                     l2451 207C                     l2603 12C4  
                   l2611 12E0                     l2269 0DE6                     l2357 192C  
                   l2349 18F2                     l2373 1A48                     l2365 1A02  
                   l2197 0BCE                     l2189 0B56                     l2293 13A8  
                   l2285 1360                     l2277 131C                     l2429 16F8  
                   l1493 1B1A                     l1485 1ADA                     l2445 1CD0  
                   l2701 0FAE                     l2381 1D52                     l2437 1E92  
                   l2461 1F32                     l2453 208A                     l2605 12D8  
                   l2621 1FF6                     l2471 1F9C                     l2367 1A10  
                   l2359 19D8                     l2199 0BEE                     l2295 13C4  
                   l2287 137C                     l2279 1338                     l2447 1CEC  
                   l2703 0FBE                     l2383 1D58                     l2375 1D1A  
                   l2439 1E9C                     l2631 1010                     l2463 1F40  
                   l2455 1F1C                     l1743 20AA                     l2623 1FFA  
                   l2481 1B8A                     l2473 1B52                     l2369 1A2E  
                   l2801 19B4                     l2561 1EBA                     l1497 1B2E  
                   l2449 1CF0                     l2385 1D60                     l2377 1D34  
                   l2641 10CA                     l2633 102E                     l2465 1F44  
                   l2457 1F20                     l2721 06EA                     l2713 06D0  
                   l2617 1C6E                     l1921 1A62                     l1745 20AE  
                   l2625 2002                     l1729 2090                     l2483 1DB8  
                   l2475 1B62                     l2803 19D2                     l2563 1EE6  
                   l2571 1872                     l1499 1B32                     l2707 0FCA  
                   l2651 0E5C                     l2379 1D3C                     l2643 111A  
                   l2635 1052                     l2459 1F2E                     l2731 071E  
                   l2723 06F0                     l2715 06D6                     l1931 1A86  
                   l1923 1A6A                     l2627 2006                     l2619 1FEC  
                   l2485 1DF4                     l2477 1B70                     l2469 1486  
                   l2573 1880                     l2565 17EC                     l2661 0EAE  
                   l2653 0E82                     l2645 118E                     l2637 1066  
                   l1685 204A                     l2741 075E                     l2733 072A  
                   l2725 06FC                     l2581 11B0                     l1941 1AB2  
                   l1925 1A6E                     l2629 200A                     l2487 1DF6  
                   l2479 1B80                     l2575 188C                     l2567 184C  
                   l2671 0EEE                     l2663 0EBE                     l2655 0E8A  
                   l2647 11A2                     l2639 1072                     l1687 205E  
                   l2751 079E                     l2743 076A                     l2735 0730  
                   l2727 0702                     l2591 125C                     l2583 1210  
                   l1935 1A9A                     l2489 1DFA                     l2577 1892  
                   l2569 1858                     l2681 0F2E                     l2673 0EFE  
                   l2665 0ECA                     l2657 0E90                     l2649 11AE  
                   l1689 2060                     l2761 07DE                     l2753 07AA  
                   l2745 0770                     l2737 073C                     l2729 070E  
                   l2593 1270                     l2585 1228                     l1945 1AB8  
                   l1937 1A9E                     l1953 1AC4                     l1929 1A82  
                   l2921 171A                     l2579 1898                     l2691 0F6E  
                   l2683 0F3E                     l2675 0F0A                     l2667 0ED0  
                   l2659 0E9C                     l2771 081E                     l2763 07EA  
                   l2755 07B0                     l2747 077C                     l2739 074E  
                   l2595 1278                     l2587 123C                     l1955 1AC6  
                   l2931 174A                     l2923 1726                     l2693 0F7E  
                   l2685 0F4A                     l2677 0F10                     l2669 0EDC  
                   l2781 0890                     l2765 07F0                     l2757 07BC  
                   l2749 078E                     l2597 1290                     l2589 1244  
                   l1949 1ABE                     l2941 1782                     l2933 1766  
                   l2925 1738                     l2695 0F8A                     l2687 0F50  
                   l2679 0F1C                     l2783 0896                     l2767 07FC  
                   l2759 07CE                     l2775 082A                     l2599 12A4  
                   l2951 179E                     l2943 1786                     l2935 176E  
                   l2927 173E                     l2919 1702                     l2697 0F90  
                   l2689 0F5C                     l2785 089C                     l2769 080E  
                   l2777 086C                     l2945 178E                     l2937 1776  
                   l2929 1744                     l2795 1944                     l2699 0F9C  
                   l2787 08F4                     l2779 088A                     l2947 1792  
                   l2939 177A                     l2955 17A6                     l2797 198E  
                   l2789 0944                     l2981 12F4                     l2949 1796  
                   l2957 17E0                     l2799 19AC                     l2983 083E  
                   l2985 0FE0                     l2979 17BA                     STR_1 06CB  
                   STR_2 065D                     STR_3 065F                     STR_4 06B3  
                   STR_5 0681                     STR_6 06C3                     STR_7 0692  
                   STR_8 06A3                     STR_9 064E                     u1020 1A7E  
                   u1021 1A7A                     u1030 1A96                     u1031 1A92  
                   u2000 1EAE                     u1040 1AAE                     u2001 1EAA  
                   u1041 1AAA                     u2010 1D18                     u1050 1AD8  
                   u2011 1D14                     u1051 1AD4                     u2020 208A  
                   u2021 2086                     u1310 0AC4                     u1230 09DC  
                   u2030 1F2E                     u1311 0AC0                     u1231 09D8  
                   u2031 1F2A                     u1400 0BCE                     u1320 0ADE  
                   u1304 0A98                     u1240 09EE                     u2040 1F40  
                   u1401 0BCA                     u1321 0ADA                     u1305 0A94  
                   u1241 09EA                     u2041 1F3C                     u2050 1B70  
                   u2051 1B6C                     u1500 0CAC                     u2060 1BAA  
                   u2140 1052                     u1501 0CA8                     u2061 1BA6  
                   u2141 104E                     u1414 0BE0                     u1350 0B3C  
                   u1334 0AF0                     u1270 0A4C                     u1254 0A00  
                   u1430 1DB2                     u2150 0E82                     u1415 0BDC  
                   u1351 0B38                     u1335 0AEC                     u1271 0A48  
                   u1255 09FC                     u1431 1DAE                     u2151 0E7E  
                   u1440 1F1A                     u1424 0C00                     u1360 0B56  
                   u1344 0B10                     u1280 0A66                     u1264 0A20  
                   u2160 06E6                     u1441 1F16                     u1425 0BFC  
                   u1361 0B52                     u1345 0B0C                     u1281 0A62  
                   u1265 0A1C                     u2161 06E2                     u1610 0E02  
                   u1530 0D12                     u1514 0CC2                     u1450 0C2A  
                   u2170 1978                     u1611 0DFE                     u1531 0D0E  
                   u1515 0CBE                     u1451 0C26                     u1620 0E14  
                   u1604 0DD6                     u1540 0D24                     u1524 0CE6  
                   u1460 0C3C                     u2180 19AC                     u1621 0E10  
                   u1605 0DD2                     u1541 0D20                     u1525 0CE2  
                   u1461 0C38                     u2181 19A8                     u2190 19D2  
                   u1390 0BB4                     u1374 0B68                     u1294 0A78  
                   u1710 140C                     u2191 19CE                     u2175 196E  
                   u1391 0BB0                     u1375 0B64                     u1295 0A74  
                   u1711 1408                     u1800 18E8                     u1384 0B88  
                   u1704 13DA                     u1801 18E4                     u1385 0B84  
                   u1705 13D6                     u1634 0E2A                     u1570 0D8A  
                   u1554 0D3A                     u1490 0C9A                     u1474 0C4E  
                   u1810 1910                     u1730 1454                     u1650 1338  
                   u1635 0E26                     u1571 0D86                     u1555 0D36  
                   u1491 0C96                     u1475 0C4A                     u1811 190C  
                   u1731 1450                     u1651 1334                     u1644 0E4E  
                   u1580 0D9C                     u1564 0D5E                     u1484 0C6E  
                   u1820 19EE                     u1724 1422                     u1645 0E4A  
                   u1581 0D98                     u1565 0D5A                     u1485 0C6A  
                   u1821 19EA                     u1725 141E                     u1750 1C28  
                   u1830 1A10                     u1670 137C                     u1910 15F8  
                   u1751 1C24                     u1831 1A0C                     u1671 1378  
                   u1911 15F4                     u1760 1C3C                     u1840 1A2E  
                   u1744 146A                     u1664 134A                     u1761 1C38  
                   u1841 1A2A                     u1745 1466                     u1665 1346  
                   u1594 0DB2                     u1770 1C52                     u1690 13C4  
                   u1930 1648                     u1850 1D34                     u1595 0DAE  
                   u1771 1C4E                     u1691 13C0                     u1931 1644  
                   u1851 1D30                     u1780 1C68                     u1684 1392  
                   u1924 1618                     u1860 1D4C                     u1781 1C64  
                   u1685 138E                     u1925 1612                     u1861 1D48  
                   u1790 18C6                     u1950 168C                     u1791 18C2  
                   u1951 1688                     u1944 1660                     u1945 165A  
                   u1970 16D6                     u1971 16D2                     u1980 16F8  
                   u1964 16A8                     u1981 16F4                     u1965 16A2  
                   u1990 1E92                     u1991 1E8E                     _PIR1 000F9E  
                   _main 1702                     _keys 003C         ??_PulseClockData 0007  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 1E42                    ?_main 0001          __end_of_adcInit 1E00  
        __end_of_adcRead 1D6A                    STR_10 06BB                    STR_11 0670  
                  STR_20 06BB                    STR_12 06AB                    STR_13 065F  
                  STR_21 0670                    STR_22 06AB                    STR_14 06B3  
                  STR_15 0681                    STR_23 061B                    STR_16 06C3  
                  STR_24 062C                    STR_17 0692                    STR_25 063D  
                  STR_18 06A3                    STR_19 064E          __end_of___lldiv 1944  
                  _T0CON 000FD5          __end_of___llmod 1A60                    _T2CON 000FCA  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_calcula 19D8          __end_of_charKey 061B  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_lcdChar 202C      ___lmul@multiplicand 0005  
        __end_of_lcdInit 18A0          __end_of_pinMode 0E5C                    _valor 0601  
                  _timed 1A60          __end_of_soWrite 1DB8                    tablat 000FF5  
        __end_of_ssdInit 1CC4                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 0C0E          __initialization 2064          ?_pulseEnablePin 0001  
           __end_of_main 17EC                   ??_main 002B            __activetblptr 000002  
   __size_of_digitalRead 016A                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0         ___llmod@dividend 001A                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000FBB                   ?_timed 0001  
                 _INTCON 000FF2                   _SPBRGH 000FB0     __size_of_lcdPosition 003A  
                 ___lmul 1B52                ??_adcInit 0007                ??_adcRead 0003  
              ??___lldiv 0015                ??___llmod 0022                   _kpInit 1EBA  
                 _kpRead 20A0    __size_of_apagaDisplay 002A                ??_calcula 002B  
                 clear_0 206A                   _soInit 1E42                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F         __end_of_ssdDigit 1C6E  
              ??_pinMode 0005             __mediumconst 0000                   timed@i 0003  
                 timed@j 0004                   timed@k 0005                   tblptrh 000FF7  
                 timed@w 0002                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007         __end_of_pushByte 1C16  
             __accesstop 0080  __end_of__initialization 2070            ___rparam_used 000001  
          pushByte@value 000D             _apagaDisplay 1F9C              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0611            __end_of_timed 1ADA  
     __size_of_delayMili 0030       __size_of_leTeclado 01B4       __size_of_lcdString 0056  
     __size_of_kpReadKey 0078                  ??_timed 0001    __size_of_digitalWrite 024E  
  __end_of_leTemperatura 11B0               _delayMicro 20B2    __end_of_mostraDisplay 15CC  
                ?___lmul 0001               _lcdCommand 202C                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  _BAUDCON 000FB8  
         ___lmul@product 0009                  ?_soInit 0001               _kpDebounce 15CC  
     __size_of_serialcom 02F0       __size_of_timerInit 0008       __size_of_timerWait 0010  
     __size_of_ssdUpdate 016C             _digitalWrite 09C0        __end_of_delayMili 1F1C  
       ??_pulseEnablePin 0007        __end_of_leTeclado 1010                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 0001        __end_of_lcdString 1D1A  
        kpDebounce@tempo 0044        __end_of_kpReadKey 1B52                  _adcInit 1DB8  
                _adcRead 1D1A          __size_of___lmul 006A                ?_pushByte 000A  
                ___lldiv 18A0                  ___llmod 19D8       _leTemperatura$1394 0027  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _calcula 1944                  _charKey 0611              ssdDigit@val 0002  
            ssdDigit@pos 0001                  __pcinit 2064           serialRead@resp 0001  
                _lcdChar 200E                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 17EC                  __ptext0 1702                  __ptext1 2090  
                __ptext2 1FEC                  __ptext3 20AA                  __ptext4 1A60  
                __ptext5 11B0                  __ptext6 1C6E                  __ptext7 06D0  
                __ptext8 207A                  __ptext9 1F1C                  _display 0043  
                _pinMode 0C0E              serialSend@c 0001                  _tempIde 0036  
                _tempMax 0032               delayMili@a 0001               delayMili@i 0004  
                _soWrite 1D6A                  _ssdInit 1C6E                  _started 0045  
   end_of_initialization 2070            ?_PulseEnClock 0001            __Lmediumconst 0000  
      __end_of_serialcom 09C0           digitalRead@pin 0001           leTeclado@tecla 0017  
            ?_delayMicro 0001        __end_of_timerInit 20B2          ___lldiv@divisor 0011  
      __end_of_timerWait 20A0        __end_of_ssdUpdate 131C          ___lldiv@counter 0019  
             _serialInit 204A               _serialRead 1F1C           _serialcom$1395 0025  
             ??_ssdDigit 0002                  timed@ms 0001               _serialSend 207A  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003               _timerReset 1FEC  
            ?_kpDebounce 0001               _pushNibble 1FC6               lcdString@i 0013  
          ??_lcdPosition 0013           ??_PulseEnClock 0007               kpReadKey@i 0004  
        mostraDisplay@v0 0023          mostraDisplay@v1 0025          mostraDisplay@v2 0027  
        mostraDisplay@v3 0029           __end_of___lmul 1BBC           adcRead@ADvalor 0003  
         __end_of_kpInit 1EEC           __end_of_kpRead 20AA           __end_of_soInit 1E80  
    __size_of_delayMicro 0002      start_initialization 2064      __end_of_digitalRead 1486  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136          ___llmod@divisor 001E  
        ___llmod@counter 0022      __end_of_lcdPosition 1EBA           adcRead@channel 0001  
            ?_serialInit 0001              ?_serialRead 0001              ?_serialSend 0001  
      kpDebounce@oldRead 0038        kpDebounce@newRead 003A                 ??___lmul 0009  
               ??_kpInit 0007                 ??_kpRead 0003              ?_timerReset 0001  
               ??_soInit 0007              __pbssCOMRAM 002E              ?_pushNibble 000A  
             pinMode@pin 0001                _delayMili 1EEC                _leTeclado 0E5C  
               ?_adcInit 0001                 ?_adcRead 0001                 ?___lldiv 000D  
      __size_of_ssdDigit 0058                 ?___llmod 001A           _PulseClockData 1F72  
   __end_of_PulseEnClock 1F72                 ?_calcula 0001                _lcdString 1CC4  
            _digitalRead 131C                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001                _kpReadKey 1ADA              __smallconst 0600  
               ?_pinMode 0001   __size_of_leTemperatura 01A0                 ?_soWrite 0007  
               ?_ssdInit 0001      __size_of_serialInit 001A      __size_of_serialRead 002C  
    __size_of_serialSend 0016   __size_of_mostraDisplay 0146           __size_of_timed 007A  
            _lcdPosition 1E80      __size_of_timerReset 0022             ??_delayMicro 0003  
             ?_delayMili 0001                _serialcom 06D0   __end_of_PulseClockData 1F9C  
             ?_leTeclado 0001      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _timerInit 20AA                _timerWait 2090                _ssdUpdate 11B0  
             ?_lcdString 000F             ??_kpDebounce 000A               ?_kpReadKey 0001  
        lcdCommand@value 000E       __end_of_delayMicro 20B4         timerReset@ciclos 0003  
      ___lmul@multiplier 0001       __end_of_lcdCommand 204A               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 1702            ?_apagaDisplay 0001  
          _leTemperatura 1010                 __Hrparam 0000                 __Lrparam 0000  
             ?_serialcom 0001          lcdPosition@line 000F          ?_PulseClockData 0001  
          _mostraDisplay 1486               ?_timerInit 0001               ?_timerWait 0001  
             ?_ssdUpdate 0001         __size_of_adcInit 0048         __size_of_adcRead 0050  
__size_of_pulseEnablePin 0042         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of_calcula 0094         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E                 __ptext10 204A                 __ptext11 1010  
               __ptext20 131C                 __ptext12 1E80                 __ptext21 17EC  
               __ptext13 1D1A                 __ptext30 20B2                 __ptext22 1FC6  
               __ptext14 0E5C                 __ptext31 1EEC                 __ptext23 202C  
               __ptext15 1CC4                 __ptext40 1B52                 __ptext32 1EBA  
               __ptext24 1BBC                 __ptext16 200E                 __ptext41 1DB8  
               __ptext33 1E42                 __ptext25 1D6A                 __ptext17 1ADA  
               __ptext42 0C0E                 __ptext34 1944                 __ptext26 1F48  
               __ptext18 20A0                 __ptext35 1486                 __ptext27 1F72  
               __ptext19 15CC                 __ptext36 19D8                 __ptext28 1E00  
               __ptext37 18A0                 __ptext29 09C0                 __ptext38 1F9C  
               __ptext39 1C16         __size_of_soWrite 004E         __size_of_ssdInit 0056  
          __size_of_main 00EA           ??_apagaDisplay 0003           ?_leTemperatura 0001  
            ??_delayMili 0003             ??_serialInit 0001             ??_serialRead 0001  
  __size_of_PulseEnClock 002A             ??_serialSend 0001                 _ssdDigit 1C16  
            delayMicro@a 0001           ?_mostraDisplay 0001                 isa$xinst 000000  
            ??_leTeclado 0015             soWrite@value 0007                 _pushByte 1BBC  
            ??_lcdString 0011             ??_timerReset 0003                 main@slot 002D  
            ??_kpReadKey 0001          timerReset@tempo 0001             ??_pushNibble 000C  
         lcdPosition@col 0011            ?_digitalWrite 0001       __end_of_serialInit 2064  
     __end_of_serialRead 1F48       __end_of_serialSend 2090             _PulseEnClock 1F48  
      digitalWrite@value 0003         ___lldiv@dividend 000D       __end_of_timerReset 200E  
               soWrite@i 0009              ??_serialcom 0023              ??_timerInit 0001  
            ??_timerWait 0001              ??_ssdUpdate 000A       __end_of_pushNibble 1FEC  
           ?_digitalRead 0001              _temperatura 002E         ___lldiv@quotient 0015  
            kpDebounce@i 000D           ??_digitalWrite 0005             ?_lcdPosition 000F  
        digitalWrite@pin 0001          ??_leTemperatura 0023          ??_mostraDisplay 0023  
